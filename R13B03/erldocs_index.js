var index = [["mod","sasl","alarm_handler","An Alarm Handling Process"],
             ["mod","orber","any","the corba any type"],
             ["mod","kernel","application",
              "Generic OTP application functions"],
             ["mod","appmon","appmon",
              "A graphical node and application process tree view"],
             ["mod","stdlib","array","Functional, extendible arrays."],
             ["mod","asn1","asn1ct",
              "ASN.1 compiler and compile-time support functions"],
             ["mod","asn1","asn1rt","ASN.1 runtime support functions"],
             ["mod","kernel","auth","Erlang Network Authentication Server"],
             ["mod","stdlib","base64",
              "Implements base 64 encode and decode, see RFC2045."],
             ["mod","stdlib","beam_lib",
              "An Interface To the BEAM File Format"],
             ["mod","stdlib","c","Command Interface Module"],
             ["mod","stdlib","calendar",
              "Local and universal time, day-of-the-week, date an"],
             ["mod","kernel","code","Erlang Code Server"],
             ["mod","common_test","common_test_app",
              "A framework for automated testing of arbitrary tar"],
             ["mod","compiler","compile","Erlang Compiler"],
             ["mod","orber","corba","The functions on CORBA module level"],
             ["mod","ic","CORBA_Environment_alloc",
              "Allocation function for the CORBA_Environement str"],
             ["mod","orber","corba_object",
              "The CORBA Object interface functions"],
             ["mod","orber","CosNaming",
              "The CosNaming service is a collection of interface"],
             ["mod","orber","CosNaming_BindingIterator",
              "This interface supports iteration over a name bind"],
             ["mod","orber","CosNaming_NamingContext",
              "This interface supports different bind and access "],
             ["mod","orber","CosNaming_NamingContextExt",
              "This interface contains operation for converting a"],
             ["mod","tools","cover","A Coverage Analysis Tool for Erlang"],
             ["mod","tools","cprof",
              "A simple Call Count Profiling Tool using breakpoin"],
             ["mod","os_mon","cpu_sup",
              "A CPU Load and CPU Utilization Supervisor Process"],
             ["mod","observer","crashdump",
              "A HTML based tool for browsing Erlang crashdumps."],
             ["mod","crypto","crypto","Crypto Functions"],
             ["mod","runtime_tools","dbg","The Text Based Trace Facility"],
             ["mod","debugger","debugger","Erlang Debugger"],
             ["mod","stdlib","dets","A Disk Based Term Storage"],
             ["mod","dialyzer","dialyzer",
              "The Dialyzer, a DIscrepancy AnalYZer for ERlang pr"],
             ["mod","stdlib","dict","Key-Value Dictionary"],
             ["mod","stdlib","digraph","Directed Graphs"],
             ["mod","stdlib","digraph_utils","Algorithms for Directed Graphs"],
             ["mod","kernel","disk_log","A disk based term logging facility"],
             ["mod","os_mon","disksup","A Disk Supervisor Process"],
             ["mod","docbuilder","docb_gen",
              "Generate XML from EDoc comments in Erlang source c"],
             ["mod","docbuilder","docb_transform","Transform XML to HTML"],
             ["mod","docbuilder","docb_xml_check",
              "Validate XML documentation source code"],
             ["mod","erts","driver_entry",
              "The driver-entry structure used by erlang drivers."],
             ["mod","percept","egd","egd - erlang graphical drawer."],
             ["mod","erl_interface","ei",
              "routines for handling the erlang binary term forma"],
             ["mod","erl_interface","ei_connect",
              "Communicate with distributed erlang"],
             ["mod","stdlib","epp","An Erlang Code Preprocessor"],
             ["mod","tools","eprof","A Time Profiling Tool for Erlang"],
             ["mod","kernel","erl_boot_server",
              "Boot Server for Other Erlang Machines"],
             ["mod","erl_interface","erl_connect",
              "Communicate with Distributed Erlang"],
             ["mod","kernel","erl_ddll","Dynamic Driver Loader and Linker"],
             ["mod","erts","erl_driver","API functions for an Erlang driver"],
             ["mod","erl_interface","erl_error","Error Print Routines"],
             ["mod","erl_interface","erl_eterm",
              "Functions for Erlang Term Construction"],
             ["mod","stdlib","erl_eval","The Erlang Meta Interpreter"],
             ["mod","stdlib","erl_expand_records",
              "Expands Records in a Module"],
             ["mod","erl_interface","erl_format",
              "Create and Match Erlang Terms"],
             ["mod","erl_interface","erl_global",
              "Access globally registered names"],
             ["mod","stdlib","erl_id_trans","An Identity Parse Transform"],
             ["mod","stdlib","erl_internal","Internal Erlang Definitions"],
             ["mod","stdlib","erl_lint","The Erlang Code Linter"],
             ["mod","erl_interface","erl_malloc",
              "Memory Allocation Functions"],
             ["mod","erl_interface","erl_marshal",
              "Encoding and Decoding of Erlang terms"],
             ["mod","erts","erl_nif",
              "API functions for an Erlang NIF library"],
             ["mod","stdlib","erl_parse","The Erlang Parser"],
             ["mod","stdlib","erl_pp","The Erlang Pretty Printer"],
             ["mod","erts","erl_prim_loader","Low Level Erlang Loader"],
             ["mod","stdlib","erl_scan","The Erlang Token Scanner"],
             ["mod","erts","erl_set_memory_block",
              "Custom memory allocation for Erlang on VxWorks®"],
             ["mod","stdlib","erl_tar",
              "Unix 'tar' utility for reading and writing tar arc"],
             ["mod","erts","erlang","The Erlang BIFs"],
             ["mod","tools","erlang_mode","Erlang mode for Emacs "],
             ["mod","kernel","error_handler","Default System Error Handler"],
             ["mod","kernel","error_logger","Erlang Error Logger"],
             ["mod","erts","erts_alloc",
              "An Erlang Run-Time System internal memory allocato"],
             ["mod","runtime_tools","erts_alloc_config",
              "Configuration tool for erts_alloc"],
             ["mod","et","et","Main API of the Event Trace (ET) application"],
             ["mod","et","et_collector",
              "Collect trace events and provide a backing storage"],
             ["mod","et","et_selector",
              "Define event transforms and trace patterns"],
             ["mod","et","et_viewer",
              "Displays a sequence chart for trace events (messag"],
             ["mod","observer","etop",
              "Erlang Top is a tool for presenting information ab"],
             ["mod","stdlib","ets","Built-In Term Storage"],
             ["mod","kernel","file","File Interface Module"],
             ["mod","stdlib","file_sorter","File Sorter"],
             ["mod","stdlib","filelib",
              "File utilities, such as wildcard matching of filen"],
             ["mod","stdlib","filename","Filename Manipulation Functions"],
             ["mod","orber","fixed","the corba fixed type"],
             ["mod","tools","fprof",
              "A Time Profiling Tool using trace to file for mini"],
             ["mod","inets","ftp","A File Transfer Protocol client"],
             ["mod","stdlib","gb_sets","General Balanced Trees"],
             ["mod","stdlib","gb_trees","General Balanced Trees"],
             ["mod","stdlib","gen_event","Generic Event Handling Behaviour"],
             ["mod","stdlib","gen_fsm",
              "Generic Finite State Machine Behaviour"],
             ["mod","kernel","gen_sctp",
              "The gen_sctp module provides functions for communi"],
             ["mod","stdlib","gen_server","Generic Server Behaviour"],
             ["mod","kernel","gen_tcp","Interface to TCP/IP sockets"],
             ["mod","kernel","gen_udp","Interface to UDP sockets"],
             ["mod","kernel","global","A Global Name Registration Facility"],
             ["mod","kernel","global_group",
              "Grouping Nodes to Global Name Registration Groups"],
             ["mod","gs","gs","The Graphics System for Erlang."],
             ["mod","kernel","heart",
              "Heartbeat Monitoring of an Erlang Runtime System"],
             ["mod","inets","http","An HTTP/1.1 client "],
             ["mod","inets","httpd",
              "An implementation of an HTTP\n    1.1 compliant Web"],
             ["mod","inets","httpd_conf",
              "Configuration utility functions to be used by the "],
             ["mod","inets","httpd_socket",
              "Communication utility functions to be used by the "],
             ["mod","inets","httpd_util",
              "Miscellaneous utility functions to be used when im"],
             ["mod","debugger","i","Debugger/Interpreter Interface"],
             ["mod","ic","ic","The Erlang IDL Compiler"],
             ["mod","ic","ic_c_protocol","IC C Protocol Functions"],
             ["mod","ic","ic_clib","IC C Library Functions"],
             ["mod","kernel","inet","Access to TCP/IP Protocols"],
             ["mod","kernel","inet_res","A Rudimentary DNS Client"],
             ["mod","inets","inets","The inets services API"],
             ["mod","erts","init","Coordination of System Startup"],
             ["mod","tools","instrument",
              "Analysis and Utility Functions for Instrumentation"],
             ["mod","debugger","int","Interpreter Interface"],
             ["mod","orber","interceptors",
              "Describe the functions which must be exported by a"],
             ["mod","inviso","inviso","Main API Module to the Inviso Tracer"],
             ["mod","inviso","inviso_as_lib",
              "The Inviso Autostart Utility Library"],
             ["mod","inviso","inviso_lfm","An Inviso Off-Line Logfile Merger"],
             ["mod","inviso","inviso_lfm_tpfreader",
              "Inviso Standard Reader Process to Standard Logfile"],
             ["mod","inviso","inviso_rt",
              "Direct API to the Inviso Runtime Component"],
             ["mod","inviso","inviso_rt_meta",
              "Direct API to the Inviso Runtime Component's meta "],
             ["mod","stdlib","io","Standard IO Server Interface Functions"],
             ["mod","stdlib","io_lib","IO Library Functions"],
             ["mod","jinterface","jinterface",
              "A Java communication tool to Erlang."],
             ["mod","parsetools","leex",
              "Lexical analyzer generator for Erlang"],
             ["mod","stdlib","lib","A number of useful library functions"],
             ["mod","stdlib","lists","List Processing Functions"],
             ["mod","orber","lname",
              "Interface that supports the name pseudo-objects."],
             ["mod","orber","lname_component",
              "Interface that supports the name pseudo-objects."],
             ["mod","stdlib","log_mf_h",
              "An Event Handler which Logs Events to Disk"],
             ["mod","tools","make","A Make Utility for Erlang"],
             ["mod","stdlib","math","Mathematical Functions"],
             ["mod","megaco","megaco","Main API of the Megaco application"],
             ["mod","megaco","megaco_codec_meas",
              "This module implements a simple megaco codec measu"],
             ["mod","megaco","megaco_codec_mstone1",
              "This module implements a simple megaco codec-based"],
             ["mod","megaco","megaco_codec_mstone2",
              "This module implements a simple megaco codec-based"],
             ["mod","megaco","megaco_codec_transform",
              "Megaco message transformation utility."],
             ["mod","megaco","megaco_edist_compress",
              "Megaco erlang dist compress behaviour."],
             ["mod","megaco","megaco_encoder","Megaco encoder behaviour."],
             ["mod","megaco","megaco_flex_scanner",
              "Interface module to the flex scanner linked in dri"],
             ["mod","megaco","megaco_tcp",
              "Interface module to TPKT transport protocol for Me"],
             ["mod","megaco","megaco_transport","Megaco transport behaviour."],
             ["mod","megaco","megaco_udp",
              "Interface module to UDP transport protocol for Meg"],
             ["mod","megaco","megaco_user",
              "Callback module for users of the Megaco applicatio"],
             ["mod","os_mon","memsup","A Memory Supervisor Process"],
             ["mod","mnesia","mnesia",
              "A Distributed Telecommunications DBMS "],
             ["mod","mnesia","mnesia_frag_hash",
              "Defines mnesia_frag_hash callback behaviour"],
             ["mod","mnesia","mnesia_registry",
              "Dump support for registries in erl_interface. "],
             ["mod","inets","mod_alias","URL aliasing."],
             ["mod","inets","mod_auth",
              "User authentication using text files, dets or mnes"],
             ["mod","inets","mod_esi","Erlang Server Interface "],
             ["mod","inets","mod_security",
              "Security Audit and Trailing Functionality"],
             ["mod","orber","Module_Interface",
              "Orber generated stubs/skeletons."],
             ["mod","stdlib","ms_transform",
              "Parse_transform that translates fun syntax into ma"],
             ["mod","kernel","net_adm",
              "Various Erlang Net Administration Routines"],
             ["mod","kernel","net_kernel","Erlang Networking Kernel"],
             ["mod","ssl","new_ssl",
              "Interface Functions for Secure Socket Layer"],
             ["mod","os_mon","nteventlog","Interface to Windows Event Log"],
             ["mod","odbc","odbc","Erlang ODBC application"],
             ["mod","orber","orber",
              "The main module of the Orber application"],
             ["mod","orber","orber_acl","Orber ACL operations"],
             ["mod","orber","orber_diagnostics","Diagnostics API for Orber"],
             ["mod","orber","orber_ifr",
              "The Interface Repository stores representations of"],
             ["mod","orber","orber_tc","Help functions for IDL typecodes"],
             ["mod","stdlib","orddict","Key-Value Dictionary as Ordered List"],
             ["mod","stdlib","ordsets",
              "Functions for Manipulating Sets as Ordered Lists"],
             ["mod","kernel","os","Operating System Specific Functions"],
             ["mod","os_mon","os_mon_mib",
              "Loading and Unloading of OTP-OS-MON-MIB"],
             ["mod","os_mon","os_sup","Interface to OS System Messages"],
             ["mod","otp_mibs","otp_mib","Handles the OTP-MIB"],
             ["mod","sasl","overload","An Overload Regulation Process"],
             ["mod","kernel","packages","Packages in Erlang"],
             ["mod","stdlib","pg","Distributed, Named Process Groups"],
             ["mod","kernel","pg2","Distributed Named Process Groups"],
             ["mod","pman","pman","A graphical process manager."],
             ["mod","stdlib","pool","Load Distribution Facility"],
             ["mod","stdlib","proc_lib",
              "Functions for asynchronous and synchronous start o"],
             ["mod","stdlib","proplists",
              "Support functions for property lists"],
             ["mod","public_key","public_key",
              " API module for public key infrastructure."],
             ["mod","stdlib","qlc",
              "Query Interface to Mnesia, ETS, Dets, etc"],
             ["mod","stdlib","queue","Abstract Data Type for FIFO Queues"],
             ["mod","stdlib","random","Pseudo random number generation"],
             ["mod","sasl","rb","The Report Browser Tool"],
             ["mod","stdlib","re","Perl like regular expressions for Erlang"],
             ["mod","stdlib","regexp",
              "Regular Expression Functions for Strings"],
             ["mod","erl_interface","registry",
              "Store and backup key-value pairs"],
             ["mod","sasl","release_handler",
              "Unpacking and Installation of Release Packages"],
             ["mod","reltool","reltool","Main API of the Reltool application"],
             ["mod","kernel","rpc","Remote Procedure Call Services"],
             ["mod","kernel","seq_trace","Sequential Tracing of Messages"],
             ["mod","stdlib","sets","Functions for Set Manipulation"],
             ["mod","stdlib","shell","The Erlang Shell"],
             ["mod","stdlib","shell_default",
              "Customizing the Erlang Environment"],
             ["mod","stdlib","slave",
              "Functions to Starting and Controlling Slave Nodes"],
             ["mod","snmp","snmp","Interface functions to the SNMP toolkit"],
             ["mod","snmp","snmp_community_mib",
              "Instrumentation Functions for SNMP-COMMUNITY-MIB"],
             ["mod","snmp","snmp_framework_mib",
              "Instrumentation Functions for SNMP-FRAMEWORK-MIB"],
             ["mod","snmp","snmp_generic",
              "Generic Functions for Implementing SNMP Objects in"],
             ["mod","snmp","snmp_index",
              "Abstract Data Type for SNMP Indexing"],
             ["mod","snmp","snmp_notification_mib",
              "Instrumentation Functions for SNMP-NOTIFICATION-MI"],
             ["mod","snmp","snmp_pdus",
              "Encode and Decode Functions for SNMP PDUs"],
             ["mod","snmp","snmp_standard_mib",
              "Instrumentation Functions for STANDARD-MIB and SNM"],
             ["mod","snmp","snmp_target_mib",
              "Instrumentation Functions for SNMP-TARGET-MIB"],
             ["mod","snmp","snmp_user_based_sm_mib",
              "Instrumentation Functions for SNMP-USER-BASED-SM-M"],
             ["mod","snmp","snmp_view_based_acm_mib",
              "Instrumentation Functions for SNMP-VIEW-BASED-ACM-"],
             ["mod","snmp","snmpa",
              "Interface Functions to the SNMP toolkit agent"],
             ["mod","snmp","snmpa_conf",
              "Utility functions for handling the agent config fi"],
             ["mod","snmp","snmpa_discovery_handler",
              "Behaviour module for the SNMP agent discovery hand"],
             ["mod","snmp","snmpa_error",
              "Functions for Reporting SNMP Errors"],
             ["mod","snmp","snmpa_error_io",
              "Functions for Reporting SNMP Errors on stdio"],
             ["mod","snmp","snmpa_error_logger",
              "Functions for Reporting SNMP Errors through the er"],
             ["mod","snmp","snmpa_error_report",
              "Behaviour module for reporting SNMP agent errors"],
             ["mod","snmp","snmpa_local_db","The SNMP built-in database"],
             ["mod","snmp","snmpa_mpd",
              "Message Processing and Dispatch module for the SNM"],
             ["mod","snmp","snmpa_network_interface",
              "Behaviour module for the SNMP agent network interf"],
             ["mod","snmp","snmpa_network_interface_filter",
              "Behaviour module for the SNMP agent network-interf"],
             ["mod","snmp","snmpa_notification_delivery_info_receiver",
              "\n    Behaviour module for the SNMP agent notificat"],
             ["mod","snmp","snmpa_notification_filter",
              "Behaviour module for the SNMP agent notification f"],
             ["mod","snmp","snmpa_supervisor",
              "A supervisor for the SNMP agent Processes"],
             ["mod","snmp","snmpc",
              "Interface Functions to the SNMP toolkit MIB compil"],
             ["mod","snmp","snmpm",
              "Interface functions to the SNMP toolkit manager"],
             ["mod","snmp","snmpm_conf",
              "Utility functions for handling the manager config "],
             ["mod","snmp","snmpm_mpd",
              "Message Processing and Dispatch module for the SNM"],
             ["mod","snmp","snmpm_network_interface",
              "Behaviour module for the SNMP manager network inte"],
             ["mod","snmp","snmpm_network_interface_filter",
              "Behaviour module for the SNMP manager network-inte"],
             ["mod","snmp","snmpm_user",
              "Behaviour module for the SNMP manager user."],
             ["mod","stdlib","sofs","Functions for Manipulating Sets of Sets"],
             ["mod","ssh","ssh","Main API of the SSH application"],
             ["mod","ssh","ssh_channel","Generic Ssh Channel Behavior\n  "],
             ["mod","ssh","ssh_connection",
              "This module provides an API to the ssh connection "],
             ["mod","ssh","ssh_sftp","SFTP client."],
             ["mod","ssh","ssh_sftpd",
              "Specifies a channel process to handle a sftp subsy"],
             ["mod","ssl","ssl","Interface Functions for Secure Socket Layer"],
             ["mod","stdlib","string","String Processing Functions"],
             ["mod","stdlib","supervisor","Generic Supervisor Behaviour"],
             ["mod","stdlib","supervisor_bridge",
              "Generic Supervisor Bridge Behaviour."],
             ["mod","stdlib","sys",
              "A Functional Interface to System Messages"],
             ["mod","sasl","systools","A Set of Release Handling Tools."],
             ["mod","tools","tags",
              "Generate Emacs TAGS file from Erlang source files"],
             ["mod","test_server","test_server",
              "This module provides support for test suite author"],
             ["mod","test_server","test_server_ctrl",
              "This module provides a low level interface to the "],
             ["mod","inets","tftp","Trivial FTP"],
             ["mod","stdlib","timer","Timer Functions"],
             ["mod","toolbar","toolbar",
              "GUI for Starting Tools and User Contributions"],
             ["mod","test_server","ts",
              "Test Server Framework for testing OTP"],
             ["mod","observer","ttb",
              "A base for building trace tools for distributed sy"],
             ["mod","tv","tv",
              "TV graphically examines ETS and Mnesia tables. "],
             ["mod","stdlib","unicode",
              "Functions for converting Unicode characters"],
             ["mod","kernel","user","Standard I/O Server"],
             ["mod","webtool","webtool",
              "WebTool is a tool used to simplify the implementat"],
             ["mod","stdlib","win32reg",
              "win32reg provides access to the registry on Window"],
             ["mod","kernel","wrap_log_reader",
              "A function to read internally formatted wrap disk "],
             ["mod","xmerl","xmerl_sax_parser","XML SAX parser API"],
             ["mod","tools","xref",
              "A Cross Reference Tool for analyzing dependencies "],
             ["mod","parsetools","yecc","LALR-1 Parser Generator"],
             ["mod","stdlib","zip",
              "Utility for reading and creating 'zip' archives."],
             ["mod","erts","zlib","Zlib Compression interface."],
             ["fun","xmerl","xmerl_sax_parser:file/2",
              "Parse file containing an XML document."],
             ["fun","xmerl","xmerl_sax_parser:stream/2",
              "Parse a stream containing an XML document."],
             ["fun","webtool","webtool:start/0","Start WebTool."],
             ["fun","webtool","webtool:start/2",
              "Start WebTool with default configuration."],
             ["fun","webtool","webtool:stop/0","Stop WebTool."],
             ["fun","webtool","webtool:debug_app/1",
              "Debug a WebTool application."],
             ["fun","webtool","webtool:stop_debug/0",
              "Stop debugging an application and format the trace"],
             ["fun","tv","tv:start/0","Start TV."],
             ["fun","tools","cover:start/0","Start Cover."],
             ["fun","tools","cover:start/1","Start Cover on remote nodes."],
             ["fun","tools","cover:compile/1",
              "Compile a module for Cover analysis."],
             ["fun","tools","cover:compile/2",
              "Compile a module for Cover analysis."],
             ["fun","tools","cover:compile_module/1",
              "Compile a module for Cover analysis."],
             ["fun","tools","cover:compile_module/2",
              "Compile a module for Cover analysis."],
             ["fun","tools","cover:compile_directory/0",
              "Compile all modules in a directory for Cover analy"],
             ["fun","tools","cover:compile_directory/1",
              "Compile all modules in a directory for Cover analy"],
             ["fun","tools","cover:compile_directory/2",
              "Compile all modules in a directory for Cover analy"],
             ["fun","tools","cover:compile_beam/1",
              "Compile a module for Cover analysis, using an exis"],
             ["fun","tools","cover:compile_beam_directory/0",
              "Compile all .beam files in a directory for Cover a"],
             ["fun","tools","cover:compile_beam_directory/1",
              "Compile all .beam files in a directory for Cover a"],
             ["fun","tools","cover:analyse/1",
              "Analyse a Cover compiled module."],
             ["fun","tools","cover:analyse/2",
              "Analyse a Cover compiled module."],
             ["fun","tools","cover:analyse/2",
              "Analyse a Cover compiled module."],
             ["fun","tools","cover:analyse/3",
              "Analyse a Cover compiled module."],
             ["fun","tools","cover:analyse_to_file/1",
              "Detailed coverage analysis of a Cover compiled mod"],
             ["fun","tools","cover:analyse_to_file/2",
              "Detailed coverage analysis of a Cover compiled mod"],
             ["fun","tools","cover:analyse_to_file/2",
              "Detailed coverage analysis of a Cover compiled mod"],
             ["fun","tools","cover:analyse_to_file/3",
              "Detailed coverage analysis of a Cover compiled mod"],
             ["fun","tools","cover:modules/0",
              "Return all Cover compiled modules."],
             ["fun","tools","cover:imported_modules/0",
              "Return all modules for which there are imported da"],
             ["fun","tools","cover:imported/0","Return all imported files."],
             ["fun","tools","cover:which_nodes/0",
              "Return all nodes that are part of the coverage ana"],
             ["fun","tools","cover:is_compiled/1",
              "Check if a module is Cover compiled."],
             ["fun","tools","cover:reset/1",
              "Reset coverage data for Cover compiled modules."],
             ["fun","tools","cover:reset/0",
              "Reset coverage data for Cover compiled modules."],
             ["fun","tools","cover:export/1",
              "Reset coverage data for Cover compiled modules."],
             ["fun","tools","cover:export/2",
              "Reset coverage data for Cover compiled modules."],
             ["fun","tools","cover:import/1",
              "Reset coverage data for Cover compiled modules."],
             ["fun","tools","cover:stop/0","Stop Cover."],
             ["fun","tools","cover:stop/1","Stop Cover on remote nodes."],
             ["fun","tools","cprof:analyse/0",
              "Collect and analyse call counters."],
             ["fun","tools","cprof:analyse/1",
              "Collect and analyse call counters."],
             ["fun","tools","cprof:analyse/1",
              "Collect and analyse call counters."],
             ["fun","tools","cprof:analyse/2",
              "Collect and analyse call counters."],
             ["fun","tools","cprof:pause/0",
              "Pause running call count trace for all functions."],
             ["fun","tools","cprof:pause/1",
              "Pause running call count trace for matching functi"],
             ["fun","tools","cprof:pause/2",
              "Pause running call count trace for matching functi"],
             ["fun","tools","cprof:pause/3",
              "Pause running call count trace for matching functi"],
             ["fun","tools","cprof:restart/0",
              "Restart existing call counters for matching functi"],
             ["fun","tools","cprof:restart/1",
              "Restart existing call counters for matching functi"],
             ["fun","tools","cprof:restart/2",
              "Restart existing call counters for matching functi"],
             ["fun","tools","cprof:restart/3",
              "Restart existing call counters for matching functi"],
             ["fun","tools","cprof:start/0",
              "Start call count tracing for all functions."],
             ["fun","tools","cprof:start/1",
              "Start call count tracing for matching functions."],
             ["fun","tools","cprof:start/2",
              "Start call count tracing for matching functions."],
             ["fun","tools","cprof:start/3",
              "Start call count tracing for matching functions."],
             ["fun","tools","cprof:stop/0",
              "Stop call count tracing for all functions."],
             ["fun","tools","cprof:stop/1",
              "Stop call count tracing for matching functions."],
             ["fun","tools","cprof:stop/2",
              "Stop call count tracing for matching functions."],
             ["fun","tools","cprof:stop/3",
              "Stop call count tracing for matching functions."],
             ["fun","tools","eprof:start/0","Start Eprof."],
             ["fun","tools","eprof:start_profiling/1","Start profiling."],
             ["fun","tools","eprof:profile/1","Start profiling."],
             ["fun","tools","eprof:stop_profiling/0","Stop profiling."],
             ["fun","tools","eprof:profile/2","Start profiling."],
             ["fun","tools","eprof:profile/4","Start profiling."],
             ["fun","tools","eprof:analyse/0",
              "Display profiling results per process."],
             ["fun","tools","eprof:total_analyse/0",
              "Display profiling results per function call."],
             ["fun","tools","eprof:log/1",
              "Activate logging of <c>eprof</c>printouts."],
             ["fun","tools","eprof:stop/0","Stop Eprof."],
             ["fun","tools","fprof:start/0",
              "Starts the <c>fprof</c>&nbsp;server."],
             ["fun","tools","fprof:stop/0","Same as <c>stop(normal)</c>."],
             ["fun","tools","fprof:stop/1",
              "Stops the <c>fprof</c>&nbsp;server."],
             ["fun","tools","fprof:apply/2",
              "Same as <c>apply(Func, Args, [])</c>."],
             ["fun","tools","fprof:apply/3",
              "Same as <c>apply({Module, Function}, Args, [])</c>"],
             ["fun","tools","fprof:apply/3",
              "Calls <c>erlang:apply(Func, Args)</c>surrounded by"],
             ["fun","tools","fprof:apply/4",
              "Same as <c>apply({Module, Function}, Args, OptionL"],
             ["fun","tools","fprof:trace/2",
              "Same as <c>trace([start, {file, Filename}])</c>."],
             ["fun","tools","fprof:trace/2",
              "Same as <c>trace([start, verbose, {file, Filename}"],
             ["fun","tools","fprof:trace/2",
              "Same as <c>trace([{OptionName, OptionValue}])</c>."],
             ["fun","tools","fprof:trace/1",
              "Same as <c>trace([start, verbose])</c>."],
             ["fun","tools","fprof:trace/1",
              "Same as <c>trace([OptionName])</c>."],
             ["fun","tools","fprof:trace/2",
              "Same as <c>trace([{OptionName, OptionValue}])</c>."],
             ["fun","tools","fprof:trace/1","Starts or stops tracing."],
             ["fun","tools","fprof:profile/0","Same as <c>profile([])</c>."],
             ["fun","tools","fprof:profile/2",
              "Same as <c>profile([{OptionName, OptionValue}])</c"],
             ["fun","tools","fprof:profile/1",
              "Same as <c>profile([OptionName])</c>."],
             ["fun","tools","fprof:profile/2",
              "Same as <c>profile([{OptionName, OptionValue}])</c"],
             ["fun","tools","fprof:profile/1",
              "Compiles a trace into raw profile data held by the"],
             ["fun","tools","fprof:analyse/0","Same as <c>analyse([])</c>."],
             ["fun","tools","fprof:analyse/2",
              "Same as <c>analyse([{OptionName, OptionValue}])</c"],
             ["fun","tools","fprof:analyse/1",
              "Same as <c>analyse([OptionName])</c>."],
             ["fun","tools","fprof:analyse/2",
              "Same as <c>analyse([{OptionName, OptionValue}])</c"],
             ["fun","tools","fprof:analyse/1",
              "Analyses raw profile data in the <c>fprof</c>&nbsp"],
             ["fun","tools","instrument:allocator_descr/2",
              "Returns a allocator description"],
             ["fun","tools","instrument:block_header_size/1",
              "Returns the memory block header size used by the e"],
             ["fun","tools","instrument:class_descr/2",
              "Returns a allocator description"],
             ["fun","tools","instrument:descr/1",
              "Replace type numbers in memory allocation map with"],
             ["fun","tools","instrument:holes/1",
              "Print out the sizes of unused memory blocks"],
             ["fun","tools","instrument:mem_limits/1",
              "Return lowest and highest memory address used"],
             ["fun","tools","instrument:memory_data/0",
              "Return the current memory allocation map"],
             ["fun","tools","instrument:memory_status/1",
              "Return current memory allocation status"],
             ["fun","tools","instrument:read_memory_data/1",
              "Read memory allocation map"],
             ["fun","tools","instrument:read_memory_status/1",
              "Read memory allocation status from a file"],
             ["fun","tools","instrument:sort/1",
              "Sort the memory allocation list"],
             ["fun","tools","instrument:store_memory_data/1",
              "Store the current memory allocation map on a file"],
             ["fun","tools","instrument:store_memory_status/1",
              "Store the current memory allocation status on a fi"],
             ["fun","tools","instrument:sum_blocks/1",
              "Return the total amount of memory used"],
             ["fun","tools","instrument:type_descr/2",
              "Returns a type description"],
             ["fun","tools","instrument:type_no_range/1",
              "Returns the memory block type numbers"],
             ["fun","tools","make:all/0","Compile a set of modules."],
             ["fun","tools","make:all/1","Compile a set of modules."],
             ["fun","tools","make:files/1","Compile a set of modules."],
             ["fun","tools","make:files/2","Compile a set of modules."],
             ["fun","tools","tags:file/2",
              "Create a <c>TAGS</c>file for the file <c>File</c>."],
             ["fun","tools","tags:files/2",
              "Create a TAGS file for the files in the list<c>Fil"],
             ["fun","tools","tags:dir/2",
              "Create a TAGS file for all files in directory<c>Di"],
             ["fun","tools","tags:dirs/2",
              "Create a TAGS file for all files in any directory "],
             ["fun","tools","tags:subdir/2",
              "Descend recursively down the directory <c>Dir</c>a"],
             ["fun","tools","tags:subdirs/2",
              "Descend recursively down all the directories in<c>"],
             ["fun","tools","tags:root/1",
              "Create a <c>TAGS</c>file covering all files in the"],
             ["fun","tools","xref:add_application/3",
              "Add the modules of an application."],
             ["fun","tools","xref:add_directory/3",
              "Add the modules in a directory."],
             ["fun","tools","xref:add_module/3","Add a module."],
             ["fun","tools","xref:add_release/3",
              "Add the modules of a release."],
             ["fun","tools","xref:analyze/3",
              "Evaluate a predefined analysis."],
             ["fun","tools","xref:d/1",
              "Check the modules in a directory using the code pa"],
             ["fun","tools","xref:forget/1",
              "Remove user variables and their values."],
             ["fun","tools","xref:forget/2",
              "Remove user variables and their values."],
             ["fun","tools","xref:format_error/1",
              "Return an English description of an Xref error rep"],
             ["fun","tools","xref:get_default/1",
              "Return the default values of options."],
             ["fun","tools","xref:get_default/2",
              "Return the default values of options."],
             ["fun","tools","xref:get_library_path/1",
              "Return the library path."],
             ["fun","tools","xref:info/1",
              "Return information about an Xref server."],
             ["fun","tools","xref:info/2",
              "Return information about an Xref server."],
             ["fun","tools","xref:info/3",
              "Return information about an Xref server."],
             ["fun","tools","xref:m/1","Check a module using the code path."],
             ["fun","tools","xref:m/1","Check a module using the code path."],
             ["fun","tools","xref:q/3","Evaluate a query."],
             ["fun","tools","xref:remove_application/2",
              "Remove applications and their modules."],
             ["fun","tools","xref:remove_module/2","Remove analyzed modules."],
             ["fun","tools","xref:remove_release/2",
              "Remove releases and their applications and modules"],
             ["fun","tools","xref:replace_application/4",
              "Replace an application's modules."],
             ["fun","tools","xref:replace_module/4",
              "Replace an analyzed module."],
             ["fun","tools","xref:set_default/3",
              "Set the default values of options."],
             ["fun","tools","xref:set_default/2",
              "Set the default values of options."],
             ["fun","tools","xref:set_library_path/3",
              "Set the library path and finds the library modules"],
             ["fun","tools","xref:start/1","Create an Xref server."],
             ["fun","tools","xref:start/2","Create an Xref server."],
             ["fun","tools","xref:stop/1","Delete an Xref server."],
             ["fun","tools","xref:update/2",
              "Replace newly compiled analyzed modules."],
             ["fun","tools","xref:variables/2",
              "Return the names of variables."],
             ["fun","toolbar","toolbar:start/0","Start Toolbar"],
             ["fun","toolbar","toolbar:version/0",
              "Return current version number"],
             ["fun","toolbar","toolbar:update/0","Update Toolbar"],
             ["fun","toolbar","toolbar:quit/0","Quit Toolbar."],
             ["fun","toolbar","toolbar:create_tool_file/0",
              "Create tool files"],
             ["fun","toolbar","toolbar:add_gs_contribs/0",
              "Add GS contributions"],
             ["fun","test_server","test_server:os_type/0",
              "Returns the OS type of the target node"],
             ["fun","test_server","test_server:fail/0",
              "Makes the test case fail."],
             ["fun","test_server","test_server:fail/1",
              "Makes the test case fail."],
             ["fun","test_server","test_server:timetrap/1",[]],
             ["fun","test_server","test_server:timetrap_cancel/1",
              "Cancels a timetrap."],
             ["fun","test_server","test_server:timetrap_scale_factor/0",
              "Returns the scale factor for timeouts."],
             ["fun","test_server","test_server:sleep/1",
              "Suspens the calling task for a specified time."],
             ["fun","test_server","test_server:hours/1",[]],
             ["fun","test_server","test_server:minutes/1",[]],
             ["fun","test_server","test_server:seconds/1",[]],
             ["fun","test_server","test_server:format/1",[]],
             ["fun","test_server","test_server:format/2",[]],
             ["fun","test_server","test_server:format/2",[]],
             ["fun","test_server","test_server:format/3",[]],
             ["fun","test_server","test_server:capture_start/0",
              "Captures all output to stdout for a process."],
             ["fun","test_server","test_server:capture_stop/0",
              "Captures all output to stdout for a process."],
             ["fun","test_server","test_server:capture_get/0",
              "Captures all output to stdout for a process."],
             ["fun","test_server","test_server:messages_get/0",
              "Empty the message queue."],
             ["fun","test_server","test_server:timecall/3",
              "Measures the time needed to call a function."],
             ["fun","test_server","test_server:do_times/4",
              "Calls MFA or Fun N times."],
             ["fun","test_server","test_server:do_times/2",
              "Calls MFA or Fun N times."],
             ["fun","test_server","test_server:m_out_of_n/3",
              "Fault tolerant <c>do_times</c>."],
             ["fun","test_server","test_server:call_crash/3",
              "Calls MFA and succeeds if it crashes."],
             ["fun","test_server","test_server:call_crash/4",
              "Calls MFA and succeeds if it crashes."],
             ["fun","test_server","test_server:call_crash/5",
              "Calls MFA and succeeds if it crashes."],
             ["fun","test_server","test_server:temp_name/1",
              "Returns a unique filename."],
             ["fun","test_server","test_server:break/1",
              "Cancel all timetraps and wait for call to continue"],
             ["fun","test_server","test_server:continue/0",
              "Continue after break/1."],
             ["fun","test_server","test_server:run_on_shielded_node/2",
              "Execute a function a shielded node."],
             ["fun","test_server","test_server:start_node/3","Start a node."],
             ["fun","test_server","test_server:stop_node/1","Stops a node"],
             ["fun","test_server","test_server:is_commercial/0",
              "Tests whether the emulator is commercially support"],
             ["fun","test_server","test_server:is_release_available/1",
              "Tests whether a release is available"],
             ["fun","test_server","test_server:is_native/1",
              "Checks whether the module is natively compiled or "],
             ["fun","test_server","test_server:app_test/1",
              "Checks an applications .app file for obvious error"],
             ["fun","test_server","test_server:app_test/2",
              "Checks an applications .app file for obvious error"],
             ["fun","test_server","test_server:comment/1",
              "Print a comment on the HTML result page"],
             ["fun","test_server","test_server_ctrl:start/0",
              "Starts the test server."],
             ["fun","test_server","test_server_ctrl:start/1",
              "Starts the test server."],
             ["fun","test_server","test_server_ctrl:stop/0",
              "Stops the test server immediately."],
             ["fun","test_server","test_server_ctrl:add_dir/2",
              "Add a directory to the job queue."],
             ["fun","test_server","test_server_ctrl:add_dir/3",
              "Add a directory to the job queue."],
             ["fun","test_server","test_server_ctrl:add_dir/2",
              "Add a directory to the job queue."],
             ["fun","test_server","test_server_ctrl:add_dir/3",
              "Add a directory to the job queue."],
             ["fun","test_server","test_server_ctrl:add_module/1",
              "Add a module to the job queue with or without a gi"],
             ["fun","test_server","test_server_ctrl:add_module/2",
              "Add a module to the job queue with or without a gi"],
             ["fun","test_server","test_server_ctrl:add_case/2",
              "Adds one test case to the job queue."],
             ["fun","test_server","test_server_ctrl:add_case/3",
              "Equivalent to add_case/2, but with specified name."],
             ["fun","test_server","test_server_ctrl:add_cases/2",
              "Adds a list of test cases to the job queue."],
             ["fun","test_server","test_server_ctrl:add_cases/3",
              "Equivalent to add_cases/2, but with specified name"],
             ["fun","test_server","test_server_ctrl:add_spec/1",
              "Adds a test specification file to the job queue."],
             ["fun","test_server","test_server_ctrl:add_dir_with_skip/3",
              "Same purpose as functions listed above, but with e"],
             ["fun","test_server","test_server_ctrl:add_dir_with_skip/4",
              "Same purpose as functions listed above, but with e"],
             ["fun","test_server","test_server_ctrl:add_module_with_skip/2",
              "Same purpose as functions listed above, but with e"],
             ["fun","test_server","test_server_ctrl:add_module_with_skip/3",
              "Same purpose as functions listed above, but with e"],
             ["fun","test_server","test_server_ctrl:add_case_with_skip/3",
              "Same purpose as functions listed above, but with e"],
             ["fun","test_server","test_server_ctrl:add_case_with_skip/4",
              "Same purpose as functions listed above, but with e"],
             ["fun","test_server","test_server_ctrl:add_cases_with_skip/3",
              "Same purpose as functions listed above, but with e"],
             ["fun","test_server","test_server_ctrl:add_cases_with_skip/4",
              "Same purpose as functions listed above, but with e"],
             ["fun","test_server","test_server_ctrl:add_tests_with_skip/3",
              "Adds different types of jobs to the run queue."],
             ["fun","test_server","test_server_ctrl:abort_current_testcase/1",
              "Aborts the test case currently executing."],
             ["fun","test_server","test_server_ctrl:set_levels/3",
              "Sets the levels of I/O."],
             ["fun","test_server","test_server_ctrl:get_levels/0",
              "Returns the current levels."],
             ["fun","test_server","test_server_ctrl:jobs/0",
              "Returns the job queue."],
             ["fun","test_server","test_server_ctrl:multiply_timetraps/1",
              "All timetraps started after this will be multiplie"],
             ["fun","test_server","test_server_ctrl:cover/2",
              "Informs the test_server controller that next test "],
             ["fun","test_server","test_server_ctrl:cover/2",
              "Informs the test_server controller that next test "],
             ["fun","test_server","test_server_ctrl:cover/3",
              "Informs the test_server controller that next test "],
             ["fun","test_server","test_server_ctrl:cross_cover_analyse/1",
              "Analyse cover data collected from all tests"],
             ["fun","test_server","test_server_ctrl:trc/1",
              "Starts call trace on target and slave nodes"],
             ["fun","test_server","test_server_ctrl:stop_trace/0",
              "Stops tracing on target and slave nodes."],
             ["fun","test_server","ts:install/0",
              "Installs the Test Server Framework"],
             ["fun","test_server","ts:install/1",
              "Installs the Test Server Framework"],
             ["fun","test_server","ts:install/1",
              "Installs the Test Server Framework"],
             ["fun","test_server","ts:install/2",
              "Installs the Test Server Framework"],
             ["fun","test_server","ts:help/0",
              "Presents simple help on the functions in <c>ts</c>"],
             ["fun","test_server","ts:tests/0",
              "Returns the list of available tests"],
             ["fun","test_server","ts:run/0","Runs (specified) test suite(s)"],
             ["fun","test_server","ts:run/1","Runs (specified) test suite(s)"],
             ["fun","test_server","ts:run/1","Runs (specified) test suite(s)"],
             ["fun","test_server","ts:run/2","Runs (specified) test suite(s)"],
             ["fun","test_server","ts:run/2","Runs (specified) test suite(s)"],
             ["fun","test_server","ts:run/3","Runs (specified) test suite(s)"],
             ["fun","test_server","ts:run/3","Runs (specified) test suite(s)"],
             ["fun","test_server","ts:run/4","Runs (specified) test suite(s)"],
             ["fun","test_server","ts:cross_cover_analyse/1",
              "Analyse cover data collected from all tests"],
             ["fun","test_server","ts:cross_cover_analyse/1",
              "Analyse cover data collected from all tests"],
             ["fun","test_server","ts:r/0",
              "Run test suite or test case without <c>ts</c>insta"],
             ["fun","test_server","ts:r/1",
              "Run test suite or test case without <c>ts</c>insta"],
             ["fun","test_server","ts:r/1",
              "Run test suite or test case without <c>ts</c>insta"],
             ["fun","test_server","ts:r/2",
              "Run test suite or test case without <c>ts</c>insta"],
             ["fun","test_server","ts:r/2",
              "Run test suite or test case without <c>ts</c>insta"],
             ["fun","test_server","ts:r/3",
              "Run test suite or test case without <c>ts</c>insta"],
             ["fun","test_server","ts:index/0","Updates local index page"],
             ["fun","test_server","ts:clean/0",
              "Cleans up the log directories created when running"],
             ["fun","test_server","ts:clean/1",
              "Cleans up the log directories created when running"],
             ["fun","test_server","ts:estone/0","Runs the EStone test"],
             ["fun","test_server","ts:estone/1","Runs the EStone test"],
             ["fun","stdlib","array:default/1",
              "Get the value used for uninitialized entries."],
             ["fun","stdlib","array:fix/1","Fix the size of the array."],
             ["fun","stdlib","array:foldl/2",
              "Fold the elements of the array using the given fun"],
             ["fun","stdlib","array:foldr/2",
              "Fold the elements of the array right-to-left using"],
             ["fun","stdlib","array:from_list/1",
              "Equivalent to from_list(List, undefined).\n"],
             ["fun","stdlib","array:from_list/1",
              "Convert a list to an extendible array."],
             ["fun","stdlib","array:from_orddict/1",
              "Equivalent to from_orddict(Orddict, undefined).\n"],
             ["fun","stdlib","array:from_orddict/1",
              "Convert an ordered list of pairs {Index, Value} to"],
             ["fun","stdlib","array:get/1","Get the value of entry I."],
             ["fun","stdlib","array:is_array/1",
              "Returns true if X appears to be an array, otherwis"],
             ["fun","stdlib","array:is_fix/1",
              "Check if the array has fixed size."],
             ["fun","stdlib","array:map/2",
              "Map the given function onto each element of the ar"],
             ["fun","stdlib","array:new/0",
              "Create a new, extendible array with initial size z"],
             ["fun","stdlib","array:new/1",
              "Create a new array according to the given options."],
             ["fun","stdlib","array:new/1",
              "Create a new array according to the given size and"],
             ["fun","stdlib","array:relax/1","Make the array resizable."],
             ["fun","stdlib","array:reset/1",
              "Reset entry I to the default value for the array."],
             ["fun","stdlib","array:resize/1",
              "Change the size of the array to that reported by s"],
             ["fun","stdlib","array:resize/1","Change the size of the array."],
             ["fun","stdlib","array:set/1",
              "Set entry I of the array to Value."],
             ["fun","stdlib","array:size/1",
              "Get the number of entries in the array."],
             ["fun","stdlib","array:sparse_foldl/2",
              "Fold the elements of the array using the given fun"],
             ["fun","stdlib","array:sparse_foldr/2",
              "Fold the elements of the array right-to-left using"],
             ["fun","stdlib","array:sparse_map/2",
              "Map the given function onto each element of the ar"],
             ["fun","stdlib","array:sparse_size/1",
              "Get the number of entries in the array up until th"],
             ["fun","stdlib","array:sparse_to_list/1",
              "Converts the array to a list, skipping default-val"],
             ["fun","stdlib","array:sparse_to_orddict/1",
              "Convert the array to an ordered list of pairs {Ind"],
             ["fun","stdlib","array:to_list/1",
              "Converts the array to a list."],
             ["fun","stdlib","array:to_orddict/1",
              "Convert the array to an ordered list of pairs {Ind"],
             ["fun","stdlib","base64:encode/1","Encodes data into base64. "],
             ["fun","stdlib","base64:encode_to_string/1",
              "Encodes data into base64. "],
             ["fun","stdlib","base64:decode/1",
              "Decodes a base64 encoded string to data. "],
             ["fun","stdlib","base64:decode_to_string/1",
              "Decodes a base64 encoded string to data. "],
             ["fun","stdlib","base64:mime_decode/1",
              "Decodes a base64 encoded string to data. "],
             ["fun","stdlib","base64:mime_decode_to_string/1",
              "Decodes a base64 encoded string to data. "],
             ["fun","stdlib","beam_lib:chunks/2",
              "Read selected chunks from a BEAM file or binary"],
             ["fun","stdlib","beam_lib:chunks/3",
              "Read selected chunks from a BEAM file or binary"],
             ["fun","stdlib","beam_lib:version/1",
              "Read the BEAM file's module version"],
             ["fun","stdlib","beam_lib:md5/1",
              "Read the BEAM file's module version"],
             ["fun","stdlib","beam_lib:info/1",
              "Information about a BEAM file"],
             ["fun","stdlib","beam_lib:cmp/2","Compare two BEAM files"],
             ["fun","stdlib","beam_lib:cmp_dirs/2",
              "Compare the BEAM files in two directories"],
             ["fun","stdlib","beam_lib:diff_dirs/2",
              "Compare the BEAM files in two directories"],
             ["fun","stdlib","beam_lib:strip/1",
              "Removes chunks not needed by the loader from a BEA"],
             ["fun","stdlib","beam_lib:strip_files/1",
              "Removes chunks not needed by the loader from BEAM "],
             ["fun","stdlib","beam_lib:strip_release/1",
              "Removes chunks not needed by the loader from all B"],
             ["fun","stdlib","beam_lib:format_error/1",
              "Return an English description of a BEAM read error"],
             ["fun","stdlib","beam_lib:crypto_key_fun/1",
              "Register a fun that provides a crypto key"],
             ["fun","stdlib","beam_lib:clear_crypto_key_fun/0",
              "Unregister the current crypto key fun"],
             ["fun","stdlib","c:bt/1","Stack backtrace for a process"],
             ["fun","stdlib","c:c/1","Compile and load code in a file"],
             ["fun","stdlib","c:c/2","Compile and load code in a file"],
             ["fun","stdlib","c:cd/1","Change working directory"],
             ["fun","stdlib","c:flush/0",
              "Flush any messages sent to the shell"],
             ["fun","stdlib","c:help/0","Help information"],
             ["fun","stdlib","c:i/0","Information about the system"],
             ["fun","stdlib","c:ni/0","Information about the system"],
             ["fun","stdlib","c:i/3","Information about pid &lt;X.Y.Z&gt;"],
             ["fun","stdlib","c:l/1","Load or reload module"],
             ["fun","stdlib","c:lc/1","Compile a list of files"],
             ["fun","stdlib","c:ls/0","List files in the current directory"],
             ["fun","stdlib","c:ls/1","List files in a directory"],
             ["fun","stdlib","c:m/0","Which modules are loaded"],
             ["fun","stdlib","c:m/1","Information about a module"],
             ["fun","stdlib","c:memory/0","Memory allocation information"],
             ["fun","stdlib","c:memory/1","Memory allocation information"],
             ["fun","stdlib","c:memory/1","Memory allocation information"],
             ["fun","stdlib","c:nc/1",
              "Compile and load code in a file on all nodes"],
             ["fun","stdlib","c:nc/2",
              "Compile and load code in a file on all nodes"],
             ["fun","stdlib","c:nl/1","Load module on all nodes"],
             ["fun","stdlib","c:pid/3","Convert X,Y,Z to a pid"],
             ["fun","stdlib","c:pwd/0","Print working directory"],
             ["fun","stdlib","c:q/0",
              "Quit - shorthand for <c>init:stop()</c>"],
             ["fun","stdlib","c:regs/0",
              "Information about registered processes"],
             ["fun","stdlib","c:nregs/0",
              "Information about registered processes"],
             ["fun","stdlib","c:xm/1","Cross reference check a module"],
             ["fun","stdlib","c:y/1","Generate an LALR-1 parser"],
             ["fun","stdlib","c:y/2","Generate an LALR-1 parser"],
             ["fun","stdlib","calendar:date_to_gregorian_days/1",
              "Compute the number of days from year 0 up to the g"],
             ["fun","stdlib","calendar:date_to_gregorian_days/3",
              "Compute the number of days from year 0 up to the g"],
             ["fun","stdlib","calendar:datetime_to_gregorian_seconds/2",
              "Compute the number of seconds from year 0 up to th"],
             ["fun","stdlib","calendar:day_of_the_week/1",
              "Compute the day of the week"],
             ["fun","stdlib","calendar:day_of_the_week/3",
              "Compute the day of the week"],
             ["fun","stdlib","calendar:gregorian_days_to_date/1",
              "Compute the date given the number of gregorian day"],
             ["fun","stdlib","calendar:gregorian_seconds_to_datetime/1",
              "Compute the date given the number of gregorian day"],
             ["fun","stdlib","calendar:is_leap_year/1",
              "Check if a year is a leap year"],
             ["fun","stdlib","calendar:last_day_of_the_month/2",
              "Compute the number of days in a month"],
             ["fun","stdlib","calendar:local_time/0","Compute local time"],
             ["fun","stdlib","calendar:local_time_to_universal_time/2",
              "Convert from local time to universal time (depreca"],
             ["fun","stdlib","calendar:local_time_to_universal_time_dst/2",
              "Convert from local time to universal time(s)"],
             ["fun","stdlib","calendar:now_to_local_time/1",
              "Convert now to local date and time"],
             ["fun","stdlib","calendar:now_to_universal_time/1",
              "Convert now to date and time"],
             ["fun","stdlib","calendar:now_to_datetime/1",
              "Convert now to date and time"],
             ["fun","stdlib","calendar:seconds_to_daystime/1",
              "Compute days and time from seconds"],
             ["fun","stdlib","calendar:seconds_to_time/1",
              "Compute time from seconds"],
             ["fun","stdlib","calendar:time_difference/2",
              "Compute the difference between two times (deprecat"],
             ["fun","stdlib","calendar:time_to_seconds/1",
              "Compute the number of seconds since midnight up to"],
             ["fun","stdlib","calendar:universal_time/0",
              "Compute universal time"],
             ["fun","stdlib","calendar:universal_time_to_local_time/2",
              "Convert from universal time to local time"],
             ["fun","stdlib","calendar:valid_date/1",
              "Check if a date is valid"],
             ["fun","stdlib","calendar:valid_date/3",
              "Check if a date is valid"],
             ["fun","stdlib","dets:all/0",
              "Return a list of the names of all open Dets tables"],
             ["fun","stdlib","dets:bchunk/2",
              "Return a chunk of objects stored in a Dets table."],
             ["fun","stdlib","dets:close/1","Close a Dets table."],
             ["fun","stdlib","dets:delete/2",
              "Delete all objects with a given key from a Dets ta"],
             ["fun","stdlib","dets:delete_all_objects/1",
              "Delete all objects from a Dets table."],
             ["fun","stdlib","dets:delete_object/2",
              "Delete a given object from a Dets table."],
             ["fun","stdlib","dets:first/1",
              "Return the first key stored in a Dets table."],
             ["fun","stdlib","dets:foldl/3",
              "Fold a function over a Dets table."],
             ["fun","stdlib","dets:foldr/3",
              "Fold a function over a Dets table."],
             ["fun","stdlib","dets:from_ets/2",
              "Replace the objects of a Dets table with the objec"],
             ["fun","stdlib","dets:info/1",
              "Return information about a Dets table."],
             ["fun","stdlib","dets:info/2",
              "Return the information associated with a given ite"],
             ["fun","stdlib","dets:init_table/3",
              "Replace all objects of a Dets table."],
             ["fun","stdlib","dets:insert/2",
              "Insert one or more objects into a Dets table."],
             ["fun","stdlib","dets:insert_new/2",
              "Insert one or more objects into a Dets table."],
             ["fun","stdlib","dets:is_compatible_bchunk_format/2",
              "Test compatibility of a table's chunk data."],
             ["fun","stdlib","dets:is_dets_file/1","Test for a Dets table."],
             ["fun","stdlib","dets:lookup/2",
              "Return all objects with a given key stored in a De"],
             ["fun","stdlib","dets:match/1",
              "Match a chunk of objects stored in a Dets table an"],
             ["fun","stdlib","dets:match/2",
              "Match the objects stored in a Dets table and retur"],
             ["fun","stdlib","dets:match/3",
              "Match the first chunk of objects stored in a Dets "],
             ["fun","stdlib","dets:match_delete/2",
              "Delete all objects that match a given pattern from"],
             ["fun","stdlib","dets:match_object/1",
              "Match a chunk of objects stored in a Dets table an"],
             ["fun","stdlib","dets:match_object/2",
              "Match the objects stored in a Dets table and retur"],
             ["fun","stdlib","dets:match_object/3",
              "Match the first chunk of objects stored in a Dets "],
             ["fun","stdlib","dets:member/2",
              "Test for occurrence of a key in a Dets table."],
             ["fun","stdlib","dets:next/2",
              "Return the next key in a Dets table."],
             ["fun","stdlib","dets:open_file/1",
              "Open an existing Dets table."],
             ["fun","stdlib","dets:open_file/2","Open a Dets table."],
             ["fun","stdlib","dets:pid2name/1",
              "Return the name of the Dets table handled by a pid"],
             ["fun","stdlib","dets:repair_continuation/2",
              "Repair a continuation from select/1 or select/3."],
             ["fun","stdlib","dets:safe_fixtable/2",
              "Fix a Dets table for safe traversal."],
             ["fun","stdlib","dets:select/1",
              "Apply a match specification to some objects stored"],
             ["fun","stdlib","dets:select/2",
              "Apply a match specification to all objects stored "],
             ["fun","stdlib","dets:select/3",
              "Apply a match specification to the first chunk of "],
             ["fun","stdlib","dets:select_delete/2",
              "Delete all objects that match a given pattern from"],
             ["fun","stdlib","dets:slot/2",
              "Return the list of objects associated with a slot "],
             ["fun","stdlib","dets:sync/1",
              "Ensure that all updates made to a Dets table are w"],
             ["fun","stdlib","dets:table/2","Return a QLC query handle."],
             ["fun","stdlib","dets:to_ets/2",
              "Insert all objects of a Dets table into an Ets tab"],
             ["fun","stdlib","dets:traverse/2",
              "Apply a function to all or some objects stored in "],
             ["fun","stdlib","dets:update_counter/3",
              "Update a counter object stored in a Dets table."],
             ["fun","stdlib","dict:append/3",
              "Append a value to keys in a dictionary"],
             ["fun","stdlib","dict:append_list/3",
              "Append new values to keys in a dictionary"],
             ["fun","stdlib","dict:erase/2","Erase a key from a dictionary"],
             ["fun","stdlib","dict:fetch/2","Look-up values in a dictionary"],
             ["fun","stdlib","dict:fetch_keys/1",
              "Return all keys in a dictionary"],
             ["fun","stdlib","dict:filter/2",
              "Choose elements which satisfy a predicate"],
             ["fun","stdlib","dict:find/2","Search for a key in a dictionary"],
             ["fun","stdlib","dict:fold/3",
              "Fold a function over a dictionary"],
             ["fun","stdlib","dict:from_list/1",
              "Convert a list of pairs to a dictionary"],
             ["fun","stdlib","dict:is_key/2",
              "Test if a key is in a dictionary"],
             ["fun","stdlib","dict:map/2","Map a function over a dictionary"],
             ["fun","stdlib","dict:merge/3","Merge two dictionaries"],
             ["fun","stdlib","dict:new/0","Create a dictionary"],
             ["fun","stdlib","dict:size/1",
              "Return the number of elements in a dictionary"],
             ["fun","stdlib","dict:store/3","Store a value in a dictionary"],
             ["fun","stdlib","dict:to_list/1",
              "Convert a dictionary to a list of pairs"],
             ["fun","stdlib","dict:update/3","Update a value in a dictionary"],
             ["fun","stdlib","dict:update/4","Update a value in a dictionary"],
             ["fun","stdlib","dict:update_counter/3",
              "Increment a value in a dictionary"],
             ["fun","stdlib","digraph:add_edge/5","Add an edge to a digraph."],
             ["fun","stdlib","digraph:add_edge/4","Add an edge to a digraph."],
             ["fun","stdlib","digraph:add_edge/3","Add an edge to a digraph."],
             ["fun","stdlib","digraph:add_vertex/3",
              "Add or modify a vertex of a digraph."],
             ["fun","stdlib","digraph:add_vertex/2",
              "Add or modify a vertex of a digraph."],
             ["fun","stdlib","digraph:add_vertex/1",
              "Add or modify a vertex of a digraph."],
             ["fun","stdlib","digraph:del_edge/2",
              "Delete an edge from a digraph."],
             ["fun","stdlib","digraph:del_edges/2",
              "Delete edges from a digraph."],
             ["fun","stdlib","digraph:del_path/3",
              "Delete paths from a digraph."],
             ["fun","stdlib","digraph:del_vertex/2",
              "Delete a vertex from a digraph."],
             ["fun","stdlib","digraph:del_vertices/2",
              "Delete vertices from a digraph."],
             ["fun","stdlib","digraph:delete/1","Delete a digraph."],
             ["fun","stdlib","digraph:edge/2",
              "Return the vertices and the label of an edge  of a"],
             ["fun","stdlib","digraph:edges/1",
              "Return all edges of a digraph."],
             ["fun","stdlib","digraph:edges/2",
              "Return the edges emanating from or incident on  a "],
             ["fun","stdlib","digraph:get_cycle/2",
              "Find one cycle in a digraph."],
             ["fun","stdlib","digraph:get_path/3",
              "Find one path in a digraph."],
             ["fun","stdlib","digraph:get_short_cycle/2",
              "Find one short cycle in a digraph."],
             ["fun","stdlib","digraph:get_short_path/3",
              "Find one short path in a digraph."],
             ["fun","stdlib","digraph:in_degree/2",
              "Return the in-degree of a vertex of a digraph."],
             ["fun","stdlib","digraph:in_edges/2",
              "Return all edges incident on a vertex of  a digrap"],
             ["fun","stdlib","digraph:in_neighbours/2",
              "Return all in-neighbours of a vertex of  a digraph"],
             ["fun","stdlib","digraph:info/1",
              "Return information about a digraph."],
             ["fun","stdlib","digraph:new/0",
              "Return a protected empty digraph, where cycles  ar"],
             ["fun","stdlib","digraph:new/1","Create a new empty digraph."],
             ["fun","stdlib","digraph:no_edges/1",
              "Return the number of edges of the a digraph."],
             ["fun","stdlib","digraph:no_vertices/1",
              "Return the number of vertices of a digraph."],
             ["fun","stdlib","digraph:out_degree/2",
              "Return the out-degree of a vertex of a digraph."],
             ["fun","stdlib","digraph:out_edges/2",
              "Return all edges emanating from a vertex of  a dig"],
             ["fun","stdlib","digraph:out_neighbours/2",
              "Return all out-neighbours of a vertex of  a digrap"],
             ["fun","stdlib","digraph:vertex/2",
              "Return the label of a vertex of a digraph."],
             ["fun","stdlib","digraph:vertices/1",
              "Return all vertices of a digraph."],
             ["fun","stdlib","digraph_utils:arborescence_root/1",
              "Check if a digraph is an arborescence."],
             ["fun","stdlib","digraph_utils:components/1",
              "Return the components of a digraph."],
             ["fun","stdlib","digraph_utils:condensation/1",
              "Return a condensed graph of a digraph."],
             ["fun","stdlib","digraph_utils:cyclic_strong_components/1",
              "Return the cyclic strong components of a digraph."],
             ["fun","stdlib","digraph_utils:is_acyclic/1",
              "Check if a digraph is acyclic."],
             ["fun","stdlib","digraph_utils:is_arborescence/1",
              "Check if a digraph is an arborescence."],
             ["fun","stdlib","digraph_utils:is_tree/1",
              "Check if a digraph is a tree."],
             ["fun","stdlib","digraph_utils:loop_vertices/1",
              "Return the vertices of a digraph included in  some"],
             ["fun","stdlib","digraph_utils:postorder/1",
              "Return the vertices of a digraph in post-order."],
             ["fun","stdlib","digraph_utils:preorder/1",
              "Return the vertices of a digraph in pre-order."],
             ["fun","stdlib","digraph_utils:reachable/2",
              "Return the vertices reachable from some vertices o"],
             ["fun","stdlib","digraph_utils:reachable_neighbours/2",
              "Return the neighbours reachable from some vertices"],
             ["fun","stdlib","digraph_utils:reaching/2",
              "Return the vertices that reach some vertices of  a"],
             ["fun","stdlib","digraph_utils:reaching_neighbours/2",
              "Return the neighbours that reach some vertices of "],
             ["fun","stdlib","digraph_utils:strong_components/1",
              "Return the strong components of a digraph."],
             ["fun","stdlib","digraph_utils:subgraph/3",
              "Return a subgraph of a digraph."],
             ["fun","stdlib","digraph_utils:topsort/1",
              "Return a topological sorting of the vertices of  a"],
             ["fun","stdlib","epp:open/2","Open a file for preprocessing"],
             ["fun","stdlib","epp:open/3","Open a file for preprocessing"],
             ["fun","stdlib","epp:close/1",
              "Close the preprocessing of the file associated wit"],
             ["fun","stdlib","epp:parse_erl_form/1",
              "Return the next Erlang form from the opened Erlang"],
             ["fun","stdlib","epp:parse_file/3",
              "Preprocesse and parse an Erlang source file"],
             ["fun","stdlib","erl_eval:exprs/2","Evaluate expressions"],
             ["fun","stdlib","erl_eval:exprs/3","Evaluate expressions"],
             ["fun","stdlib","erl_eval:exprs/4","Evaluate expressions"],
             ["fun","stdlib","erl_eval:expr/2","Evaluate expression"],
             ["fun","stdlib","erl_eval:expr/3","Evaluate expression"],
             ["fun","stdlib","erl_eval:expr/4","Evaluate expression"],
             ["fun","stdlib","erl_eval:expr/5","Evaluate expression"],
             ["fun","stdlib","erl_eval:expr_list/2",
              "Evaluate a list of expressions"],
             ["fun","stdlib","erl_eval:expr_list/3",
              "Evaluate a list of expressions"],
             ["fun","stdlib","erl_eval:expr_list/4",
              "Evaluate a list of expressions"],
             ["fun","stdlib","erl_eval:new_bindings/0",
              "Return a bindings structure"],
             ["fun","stdlib","erl_eval:bindings/1","Return bindings"],
             ["fun","stdlib","erl_eval:binding/2","Return bindings"],
             ["fun","stdlib","erl_eval:add_binding/3","Add a binding"],
             ["fun","stdlib","erl_eval:del_binding/2","Delete a binding"],
             ["fun","stdlib","erl_expand_records:module/2",
              "Expand all records in a module"],
             ["fun","stdlib","erl_id_trans:parse_transform/2",
              "Transform Erlang forms"],
             ["fun","stdlib","erl_internal:bif/2","Test for an Erlang BIF"],
             ["fun","stdlib","erl_internal:guard_bif/2",
              "Test for an Erlang BIF allowed in guards"],
             ["fun","stdlib","erl_internal:type_test/2",
              "Test for a valid type test"],
             ["fun","stdlib","erl_internal:arith_op/2",
              "Test for an arithmetic operator"],
             ["fun","stdlib","erl_internal:bool_op/2",
              "Test for a Boolean operator"],
             ["fun","stdlib","erl_internal:comp_op/2",
              "Test for a comparison operator"],
             ["fun","stdlib","erl_internal:list_op/2",
              "Test for a list operator"],
             ["fun","stdlib","erl_internal:send_op/2",
              "Test for a send operator"],
             ["fun","stdlib","erl_internal:op_type/2","Return operator type"],
             ["fun","stdlib","erl_lint:module/1","Check a module for errors"],
             ["fun","stdlib","erl_lint:module/2","Check a module for errors"],
             ["fun","stdlib","erl_lint:module/3","Check a module for errors"],
             ["fun","stdlib","erl_lint:is_guard_test/1",
              "Test for a guard test"],
             ["fun","stdlib","erl_lint:format_error/1",
              "Format an error descriptor"],
             ["fun","stdlib","erl_parse:parse_form/1","Parse an Erlang form"],
             ["fun","stdlib","erl_parse:parse_exprs/1",
              "Parse Erlang expressions"],
             ["fun","stdlib","erl_parse:parse_term/1","Parse an Erlang term"],
             ["fun","stdlib","erl_parse:format_error/1",
              "Format an error descriptor"],
             ["fun","stdlib","erl_parse:tokens/1",
              "Generate a list of tokens for an expression"],
             ["fun","stdlib","erl_parse:tokens/2",
              "Generate a list of tokens for an expression"],
             ["fun","stdlib","erl_parse:normalise/1",
              "Convert abstract form to an Erlang term"],
             ["fun","stdlib","erl_parse:abstract/1",
              "Convert an Erlang term into an abstract form"],
             ["fun","stdlib","erl_pp:form/1","Pretty print a form"],
             ["fun","stdlib","erl_pp:form/2","Pretty print a form"],
             ["fun","stdlib","erl_pp:attribute/1","Pretty print an attribute"],
             ["fun","stdlib","erl_pp:attribute/2","Pretty print an attribute"],
             ["fun","stdlib","erl_pp:function/1","Pretty print a function"],
             ["fun","stdlib","erl_pp:function/2","Pretty print a function"],
             ["fun","stdlib","erl_pp:guard/1","Pretty print a guard"],
             ["fun","stdlib","erl_pp:guard/2","Pretty print a guard"],
             ["fun","stdlib","erl_pp:exprs/1",
              "Pretty print <c>Expressions</c>"],
             ["fun","stdlib","erl_pp:exprs/2",
              "Pretty print <c>Expressions</c>"],
             ["fun","stdlib","erl_pp:exprs/3",
              "Pretty print <c>Expressions</c>"],
             ["fun","stdlib","erl_pp:expr/1",
              "Pretty print one <c>Expression</c>"],
             ["fun","stdlib","erl_pp:expr/2",
              "Pretty print one <c>Expression</c>"],
             ["fun","stdlib","erl_pp:expr/3",
              "Pretty print one <c>Expression</c>"],
             ["fun","stdlib","erl_pp:expr/4",
              "Pretty print one <c>Expression</c>"],
             ["fun","stdlib","erl_scan:string/1",
              "Scan a string and return the Erlang tokens"],
             ["fun","stdlib","erl_scan:string/2",
              "Scan a string and return the Erlang tokens"],
             ["fun","stdlib","erl_scan:string/3",
              "Scan a string and return the Erlang tokens"],
             ["fun","stdlib","erl_scan:tokens/3","Re-entrant scanner"],
             ["fun","stdlib","erl_scan:tokens/4","Re-entrant scanner"],
             ["fun","stdlib","erl_scan:reserved_word/1",
              "Test for a reserved word"],
             ["fun","stdlib","erl_scan:token_info/1",
              "Return information about a token"],
             ["fun","stdlib","erl_scan:token_info/2",
              "Return information about a token"],
             ["fun","stdlib","erl_scan:attributes_info/1",
              "Return information about token attributes"],
             ["fun","stdlib","erl_scan:attributes_info/2",
              "Return information about a token attributes"],
             ["fun","stdlib","erl_scan:set_attribute/3",
              "Set a token attribute value"],
             ["fun","stdlib","erl_scan:format_error/1",
              "Format an error descriptor"],
             ["fun","stdlib","erl_tar:add/3","Add a file to an open tar file"],
             ["fun","stdlib","erl_tar:add/4","Add a file to an open tar file"],
             ["fun","stdlib","erl_tar:close/1","Close an open tar file"],
             ["fun","stdlib","erl_tar:create/2","Create a tar archive"],
             ["fun","stdlib","erl_tar:create/3",
              "Create a tar archive with options"],
             ["fun","stdlib","erl_tar:extract/1",
              "Extract all files from a tar file"],
             ["fun","stdlib","erl_tar:extract/2",
              "Extract files from a tar file"],
             ["fun","stdlib","erl_tar:format_error/1",
              "Convert error term to a readable string"],
             ["fun","stdlib","erl_tar:open/2","Open a tar file for writing."],
             ["fun","stdlib","erl_tar:table/1",
              "Retrieve the name of all files in a tar file"],
             ["fun","stdlib","erl_tar:table/2",
              "Retrieve name and information of all files in a ta"],
             ["fun","stdlib","erl_tar:t/1",
              "Print the name of each file in a tar file"],
             ["fun","stdlib","erl_tar:tt/1",
              "Print name and information for each file in a tar "],
             ["fun","stdlib","ets:all/0","Return a list of all ETS tables."],
             ["fun","stdlib","ets:delete/1","Delete an entire ETS table."],
             ["fun","stdlib","ets:delete/2",
              "Delete all objects with a given key from an ETS ta"],
             ["fun","stdlib","ets:delete_all_objects/1",
              "Delete all objects in an ETS table."],
             ["fun","stdlib","ets:delete_object/2",
              "Deletes a specific from an ETS table."],
             ["fun","stdlib","ets:file2tab/1",
              "Read an ETS table from a file."],
             ["fun","stdlib","ets:file2tab/2",
              "Read an ETS table from a file."],
             ["fun","stdlib","ets:first/1",
              "Return the first key in an ETS table."],
             ["fun","stdlib","ets:foldl/3",
              "Fold a function over an ETS table"],
             ["fun","stdlib","ets:foldr/3",
              "Fold a function over an ETS table"],
             ["fun","stdlib","ets:from_dets/2",
              "Fill an ETS table with objects from a Dets table."],
             ["fun","stdlib","ets:fun2ms/1",
              "Pseudo function that transforms fun syntax to a ma"],
             ["fun","stdlib","ets:give_away/3","Change owner of a table."],
             ["fun","stdlib","ets:i/0",
              "Display information about all ETS tables on tty."],
             ["fun","stdlib","ets:i/1","Browse an ETS table on tty."],
             ["fun","stdlib","ets:info/1",
              "Return information about an ETS table."],
             ["fun","stdlib","ets:info/2",
              "Return the information associated with given item "],
             ["fun","stdlib","ets:init_table/2",
              "Replace all objects of an ETS table."],
             ["fun","stdlib","ets:insert/2",
              "Insert an object into an ETS table."],
             ["fun","stdlib","ets:insert_new/2",
              "Insert an object into an ETS table if the key is n"],
             ["fun","stdlib","ets:is_compiled_ms/1",
              "Checks if an Erlang term is the result of ets:matc"],
             ["fun","stdlib","ets:last/1",
              "Return the last key in an ETS table of type<c>orde"],
             ["fun","stdlib","ets:lookup/2",
              "Return all objects with a given key in an ETS tabl"],
             ["fun","stdlib","ets:lookup_element/3",
              "Return the <c>Pos</c>:th element of all objects wi"],
             ["fun","stdlib","ets:match/2",
              "Match the objects in an ETS table against a patter"],
             ["fun","stdlib","ets:match/3",
              "Match the objects in an ETS table against a patter"],
             ["fun","stdlib","ets:match/1",
              "Continues matching objects in an ETS table."],
             ["fun","stdlib","ets:match_delete/2",
              "Delete all objects which match a given pattern fro"],
             ["fun","stdlib","ets:match_object/2",
              "Match the objects in an ETS table against a patter"],
             ["fun","stdlib","ets:match_object/3",
              "Match the objects in an ETS table against a patter"],
             ["fun","stdlib","ets:match_object/1",
              "Continues matching objects in an ETS table."],
             ["fun","stdlib","ets:match_spec_compile/1",
              "Compiles a match specification into its internal r"],
             ["fun","stdlib","ets:match_spec_run/2",
              "Performs matching, using a compiled match_spec, on"],
             ["fun","stdlib","ets:member/2",
              "Tests for occurrence of a key in an ETS table"],
             ["fun","stdlib","ets:new/2","Create a new ETS table."],
             ["fun","stdlib","ets:next/2",
              "Return the next key in an ETS table."],
             ["fun","stdlib","ets:prev/2",
              "Return the previous key in an ETS table of type<c>"],
             ["fun","stdlib","ets:rename/2","Rename a named ETS table."],
             ["fun","stdlib","ets:repair_continuation/2",
              "Repair a continuation from ets:select/1 or ets:sel"],
             ["fun","stdlib","ets:safe_fixtable/2",
              "Fix an ETS table for safe traversal."],
             ["fun","stdlib","ets:select/2",
              "Match the objects in an ETS table against a match_"],
             ["fun","stdlib","ets:select/3",
              "Match the objects in an ETS table against a match_"],
             ["fun","stdlib","ets:select/1",
              "Continue matching objects in an ETS table."],
             ["fun","stdlib","ets:select_delete/2",
              "Match the objects in an ETS table against a match_"],
             ["fun","stdlib","ets:select_count/2",
              "Match the objects in an ETS table against a match_"],
             ["fun","stdlib","ets:setopts/2","Set table options."],
             ["fun","stdlib","ets:slot/2",
              "Return all objects in a given slot of an ETS table"],
             ["fun","stdlib","ets:tab2file/2","Dump an ETS table to a file."],
             ["fun","stdlib","ets:tab2file/3","Dump an ETS table to a file."],
             ["fun","stdlib","ets:tab2list/1",
              "Return a list of all objects in an ETS table."],
             ["fun","stdlib","ets:tabfile_info/1",
              "Return a list of all objects in an ETS table."],
             ["fun","stdlib","ets:table/2","Return a QLC query handle."],
             ["fun","stdlib","ets:test_ms/2",
              "Test a match_spec for use in ets:select/2."],
             ["fun","stdlib","ets:to_dets/2",
              "Fill a Dets table with objects from an ETS table."],
             ["fun","stdlib","ets:update_counter/3",
              "Update a counter object in an ETS table."],
             ["fun","stdlib","ets:update_counter/3",
              "Update a counter object in an ETS table."],
             ["fun","stdlib","ets:update_counter/3",
              "Update a counter object in an ETS table."],
             ["fun","stdlib","ets:update_element/4",
              "Updates the <c>Pos</c>:th element of the object wi"],
             ["fun","stdlib","ets:update_element/4",
              "Updates the <c>Pos</c>:th element of the object wi"],
             ["fun","stdlib","file_sorter:sort/1","Sort terms on files."],
             ["fun","stdlib","file_sorter:sort/2","Sort terms on files."],
             ["fun","stdlib","file_sorter:sort/3","Sort terms on files."],
             ["fun","stdlib","file_sorter:keysort/2",
              "Sort terms on files by key."],
             ["fun","stdlib","file_sorter:keysort/3",
              "Sort terms on files by key."],
             ["fun","stdlib","file_sorter:keysort/4",
              "Sort terms on files by key."],
             ["fun","stdlib","file_sorter:merge/2","Merge terms on files."],
             ["fun","stdlib","file_sorter:merge/3","Merge terms on files."],
             ["fun","stdlib","file_sorter:keymerge/3",
              "Merge terms on files by key."],
             ["fun","stdlib","file_sorter:keymerge/4",
              "Merge terms on files by key."],
             ["fun","stdlib","file_sorter:check/1",
              "Check whether terms on files are sorted."],
             ["fun","stdlib","file_sorter:check/2",
              "Check whether terms on files are sorted."],
             ["fun","stdlib","file_sorter:keycheck/2",
              "Check whether terms on files are sorted by key."],
             ["fun","stdlib","file_sorter:keycheck/3",
              "Check whether terms on files are sorted by key."],
             ["fun","stdlib","filelib:ensure_dir/1",
              "Ensure that all parent directories for a file or d"],
             ["fun","stdlib","filelib:file_size/1",
              "Return the size in bytes of the file."],
             ["fun","stdlib","filelib:fold_files/5",
              "Fold over all files matching a regular expression."],
             ["fun","stdlib","filelib:is_dir/1",
              "Test whether Name refer to a directory or not"],
             ["fun","stdlib","filelib:is_file/1",
              "Test whether Name refer to a file or directory."],
             ["fun","stdlib","filelib:is_regular/1",
              "Test whether Name refer to a (regular) file."],
             ["fun","stdlib","filelib:last_modified/1",
              "Return the local date and time when a file was las"],
             ["fun","stdlib","filelib:wildcard/1",
              "Match filenames using Unix-style wildcards."],
             ["fun","stdlib","filelib:wildcard/2",
              "Match filenames using Unix-style wildcards startin"],
             ["fun","stdlib","filename:absname/1",
              "Convert a filename to an absolute name, relative t"],
             ["fun","stdlib","filename:absname/2",
              "Convert a filename to an absolute name, relative a"],
             ["fun","stdlib","filename:absname_join/2",
              "Join an absolute directory with a relative filenam"],
             ["fun","stdlib","filename:basename/1",
              "Return the last component of a filename"],
             ["fun","stdlib","filename:basename/2",
              "Return the last component of a filename, stripped "],
             ["fun","stdlib","filename:dirname/1",
              "Return the directory part of a path name"],
             ["fun","stdlib","filename:extension/1",
              "Return the file extension"],
             ["fun","stdlib","filename:flatten/1",
              "Convert a filename to a flat string"],
             ["fun","stdlib","filename:join/1",
              "Join a list of filename components with directory "],
             ["fun","stdlib","filename:join/2",
              "Join two filename components with directory separa"],
             ["fun","stdlib","filename:nativename/1",
              "Return the native form of a file path"],
             ["fun","stdlib","filename:pathtype/1",
              "Return the type of a path"],
             ["fun","stdlib","filename:rootname/1",
              "Remove a filename extension"],
             ["fun","stdlib","filename:rootname/2",
              "Remove a filename extension"],
             ["fun","stdlib","filename:split/1",
              "Split a filename into its path components"],
             ["fun","stdlib","filename:find_src/1",
              "Find the filename and compiler options for a modul"],
             ["fun","stdlib","filename:find_src/2",
              "Find the filename and compiler options for a modul"],
             ["fun","stdlib","gb_sets:add/2",
              "Add a (possibly existing) element to a gb_set"],
             ["fun","stdlib","gb_sets:add_element/2",
              "Add a (possibly existing) element to a gb_set"],
             ["fun","stdlib","gb_sets:balance/1",
              "Rebalance tree representation of a gb_set"],
             ["fun","stdlib","gb_sets:delete/2",
              "Remove an element from a gb_set"],
             ["fun","stdlib","gb_sets:delete_any/2",
              "Remove a (possibly non-existing) element from a gb"],
             ["fun","stdlib","gb_sets:del_element/2",
              "Remove a (possibly non-existing) element from a gb"],
             ["fun","stdlib","gb_sets:difference/2",
              "Return the difference of two gb_sets"],
             ["fun","stdlib","gb_sets:subtract/2",
              "Return the difference of two gb_sets"],
             ["fun","stdlib","gb_sets:empty/0","Return an empty gb_set"],
             ["fun","stdlib","gb_sets:new/0","Return an empty gb_set"],
             ["fun","stdlib","gb_sets:filter/2","Filter gb_set elements"],
             ["fun","stdlib","gb_sets:fold/3","Fold over gb_set elements"],
             ["fun","stdlib","gb_sets:from_list/1",
              "Convert a list into a gb_set"],
             ["fun","stdlib","gb_sets:from_ordset/1",
              "Make a gb_set from an ordset list"],
             ["fun","stdlib","gb_sets:insert/2",
              "Add a new element to a gb_set"],
             ["fun","stdlib","gb_sets:intersection/2",
              "Return the intersection of two gb_sets"],
             ["fun","stdlib","gb_sets:intersection/1",
              "Return the intersection of a list of gb_sets"],
             ["fun","stdlib","gb_sets:is_disjoint/2",
              "Check whether two gb_sets are disjoint"],
             ["fun","stdlib","gb_sets:is_empty/1","Test for empty gb_set"],
             ["fun","stdlib","gb_sets:is_member/2",
              "Test for membership of a gb_set"],
             ["fun","stdlib","gb_sets:is_element/2",
              "Test for membership of a gb_set"],
             ["fun","stdlib","gb_sets:is_set/1","Test for a gb_set"],
             ["fun","stdlib","gb_sets:is_subset/2","Test for subset"],
             ["fun","stdlib","gb_sets:iterator/1",
              "Return an iterator for a gb_set"],
             ["fun","stdlib","gb_sets:largest/1","Return largest element"],
             ["fun","stdlib","gb_sets:next/1",
              "Traverse a gb_set with an iterator"],
             ["fun","stdlib","gb_sets:singleton/1",
              "Return a gb_set with one element"],
             ["fun","stdlib","gb_sets:size/1",
              "Return the number of elements in a gb_set"],
             ["fun","stdlib","gb_sets:smallest/1","Return smallest element"],
             ["fun","stdlib","gb_sets:take_largest/1",
              "Extract largest element"],
             ["fun","stdlib","gb_sets:take_smallest/1",
              "Extract smallest element"],
             ["fun","stdlib","gb_sets:to_list/1",
              "Convert a gb_set into a list"],
             ["fun","stdlib","gb_sets:union/2",
              "Return the union of two gb_sets"],
             ["fun","stdlib","gb_sets:union/1",
              "Return the union of a list of gb_sets"],
             ["fun","stdlib","gb_trees:balance/1","Rebalance a tree"],
             ["fun","stdlib","gb_trees:delete/2","Remove a node from a tree"],
             ["fun","stdlib","gb_trees:delete_any/2",
              "Remove a (possibly non-existing) node from a tree"],
             ["fun","stdlib","gb_trees:empty/0","Return an empty tree"],
             ["fun","stdlib","gb_trees:enter/3",
              "Insert or update key with value in a tree"],
             ["fun","stdlib","gb_trees:from_orddict/1",
              "Make a tree from an orddict"],
             ["fun","stdlib","gb_trees:get/2",
              "Look up a key in a tree, if present"],
             ["fun","stdlib","gb_trees:lookup/2","Look up a key in a tree"],
             ["fun","stdlib","gb_trees:insert/3",
              "Insert a new key and value in a tree"],
             ["fun","stdlib","gb_trees:is_defined/2",
              "Test for membership of a tree"],
             ["fun","stdlib","gb_trees:is_empty/1","Test for empty tree"],
             ["fun","stdlib","gb_trees:iterator/1",
              "Return an iterator for a tree"],
             ["fun","stdlib","gb_trees:keys/1",
              "Return a list of the keys in a tree"],
             ["fun","stdlib","gb_trees:largest/1",
              "Return largest key and value"],
             ["fun","stdlib","gb_trees:map/2","Return largest key and value"],
             ["fun","stdlib","gb_trees:next/1",
              "Traverse a tree with an iterator"],
             ["fun","stdlib","gb_trees:size/1",
              "Return the number of nodes in a tree"],
             ["fun","stdlib","gb_trees:smallest/1",
              "Return smallest key and value"],
             ["fun","stdlib","gb_trees:take_largest/1",
              "Extract largest key and value"],
             ["fun","stdlib","gb_trees:take_smallest/1",
              "Extract smallest key and value"],
             ["fun","stdlib","gb_trees:to_list/1",
              "Convert a tree into a list"],
             ["fun","stdlib","gb_trees:update/3",
              "Update a key to new value in a tree"],
             ["fun","stdlib","gb_trees:values/1",
              "Return a list of the values in a tree"],
             ["fun","stdlib","gen_event:start_link/0",
              "Create a generic event manager process in a superv"],
             ["fun","stdlib","gen_event:start_link/1",
              "Create a generic event manager process in a superv"],
             ["fun","stdlib","gen_event:start/0",
              "Create a stand-alone event manager process."],
             ["fun","stdlib","gen_event:start/1",
              "Create a stand-alone event manager process."],
             ["fun","stdlib","gen_event:add_handler/3",
              "Add an event handler to a generic event manager."],
             ["fun","stdlib","gen_event:add_sup_handler/3",
              "Add a supervised event handler to a generic event "],
             ["fun","stdlib","gen_event:notify/2",
              "Notify an event manager about an event."],
             ["fun","stdlib","gen_event:sync_notify/2",
              "Notify an event manager about an event."],
             ["fun","stdlib","gen_event:call/3",
              "Make a synchronous call to a generic event manager"],
             ["fun","stdlib","gen_event:call/4",
              "Make a synchronous call to a generic event manager"],
             ["fun","stdlib","gen_event:delete_handler/3",
              "Delete an event handler from a generic event manag"],
             ["fun","stdlib","gen_event:swap_handler/5",
              "Replace an event handler in a generic event manage"],
             ["fun","stdlib","gen_event:swap_sup_handler/5",
              "Replace an event handler in a generic event manage"],
             ["fun","stdlib","gen_event:which_handlers/1",
              "Return all event handlers installed in a generic e"],
             ["fun","stdlib","gen_event:stop/1",
              "Terminate a generic event manager."],
             ["fun","stdlib","gen_fsm:start_link/3",
              "Create a gen_fsm process in a supervision tree."],
             ["fun","stdlib","gen_fsm:start_link/4",
              "Create a gen_fsm process in a supervision tree."],
             ["fun","stdlib","gen_fsm:start/3",
              "Create a stand-alone gen_fsm process."],
             ["fun","stdlib","gen_fsm:start/4",
              "Create a stand-alone gen_fsm process."],
             ["fun","stdlib","gen_fsm:send_event/2",
              "Send an event asynchronously to a generic FSM."],
             ["fun","stdlib","gen_fsm:send_all_state_event/2",
              "Send an event asynchronously to a generic FSM."],
             ["fun","stdlib","gen_fsm:sync_send_event/2",
              "Send an event synchronously to a generic FSM."],
             ["fun","stdlib","gen_fsm:sync_send_event/3",
              "Send an event synchronously to a generic FSM."],
             ["fun","stdlib","gen_fsm:sync_send_all_state_event/2",
              "Send an event synchronously to a generic FSM."],
             ["fun","stdlib","gen_fsm:sync_send_all_state_event/3",
              "Send an event synchronously to a generic FSM."],
             ["fun","stdlib","gen_fsm:reply/2","Send a reply to a caller."],
             ["fun","stdlib","gen_fsm:send_event_after/2",
              "Send a delayed event internally in a generic FSM."],
             ["fun","stdlib","gen_fsm:start_timer/2",
              "Send a timeout event internally in a generic FSM."],
             ["fun","stdlib","gen_fsm:cancel_timer/1",
              "Cancel an internal timer in a generic FSM."],
             ["fun","stdlib","gen_fsm:enter_loop/4",
              "Enter the gen_fsm receive loop"],
             ["fun","stdlib","gen_fsm:enter_loop/5",
              "Enter the gen_fsm receive loop"],
             ["fun","stdlib","gen_fsm:enter_loop/5",
              "Enter the gen_fsm receive loop"],
             ["fun","stdlib","gen_fsm:enter_loop/6",
              "Enter the gen_fsm receive loop"],
             ["fun","stdlib","gen_server:start_link/3",
              "Create a gen_server process in a supervision tree."],
             ["fun","stdlib","gen_server:start_link/4",
              "Create a gen_server process in a supervision tree."],
             ["fun","stdlib","gen_server:start/3",
              "Create a stand-alone gen_server process."],
             ["fun","stdlib","gen_server:start/4",
              "Create a stand-alone gen_server process."],
             ["fun","stdlib","gen_server:call/2",
              "Make a synchronous call to a generic server."],
             ["fun","stdlib","gen_server:call/3",
              "Make a synchronous call to a generic server."],
             ["fun","stdlib","gen_server:multi_call/2",
              "Make a synchronous call to several generic servers"],
             ["fun","stdlib","gen_server:multi_call/3",
              "Make a synchronous call to several generic servers"],
             ["fun","stdlib","gen_server:multi_call/4",
              "Make a synchronous call to several generic servers"],
             ["fun","stdlib","gen_server:cast/2",
              "Send an asynchronous request to a generic server."],
             ["fun","stdlib","gen_server:abcast/2",
              "Send an asynchronous request to several generic se"],
             ["fun","stdlib","gen_server:abcast/3",
              "Send an asynchronous request to several generic se"],
             ["fun","stdlib","gen_server:reply/2","Send a reply to a client."],
             ["fun","stdlib","gen_server:enter_loop/3",
              "Enter the gen_server receive loop"],
             ["fun","stdlib","gen_server:enter_loop/4",
              "Enter the gen_server receive loop"],
             ["fun","stdlib","gen_server:enter_loop/4",
              "Enter the gen_server receive loop"],
             ["fun","stdlib","gen_server:enter_loop/5",
              "Enter the gen_server receive loop"],
             ["fun","stdlib","io:columns/1",
              "Get the number of columns of a device"],
             ["fun","stdlib","io:put_chars/2","Write a list of characters"],
             ["fun","stdlib","io:nl/1","Write a newline"],
             ["fun","stdlib","io:get_chars/3",
              "Read a specified number of characters"],
             ["fun","stdlib","io:get_line/2","Read a line"],
             ["fun","stdlib","io:getopts/1",
              "Get the supported options and values from an I/O-s"],
             ["fun","stdlib","io:setopts/2","Set options"],
             ["fun","stdlib","io:write/2","Write a term"],
             ["fun","stdlib","io:read/2","Read a term"],
             ["fun","stdlib","io:read/3","Read a term"],
             ["fun","stdlib","io:fwrite/1","Write formatted output"],
             ["fun","stdlib","io:fwrite/3","Write formatted output"],
             ["fun","stdlib","io:format/1","Write formatted output"],
             ["fun","stdlib","io:format/3","Write formatted output"],
             ["fun","stdlib","io:fread/3","Read formatted input"],
             ["fun","stdlib","io:rows/1","Get the number of rows of a device"],
             ["fun","stdlib","io:scan_erl_exprs/1",
              "Read and tokenize Erlang expressions"],
             ["fun","stdlib","io:scan_erl_exprs/3",
              "Read and tokenize Erlang expressions"],
             ["fun","stdlib","io:scan_erl_form/1",
              "Read and tokenize an Erlang form"],
             ["fun","stdlib","io:scan_erl_form/3",
              "Read and tokenize an Erlang form"],
             ["fun","stdlib","io:parse_erl_exprs/1",
              "Read, tokenize and parse Erlang expressions"],
             ["fun","stdlib","io:parse_erl_exprs/3",
              "Read, tokenize and parse Erlang expressions"],
             ["fun","stdlib","io:parse_erl_form/1",
              "Read, tokenize and parse an Erlang form"],
             ["fun","stdlib","io:parse_erl_form/3",
              "Read, tokenize and parse an Erlang form"],
             ["fun","stdlib","io_lib:nl/0","Write a newline"],
             ["fun","stdlib","io_lib:write/1","Write a term"],
             ["fun","stdlib","io_lib:write/2","Write a term"],
             ["fun","stdlib","io_lib:print/1","Pretty print a term"],
             ["fun","stdlib","io_lib:print/4","Pretty print a term"],
             ["fun","stdlib","io_lib:fwrite/2","Write formatted output"],
             ["fun","stdlib","io_lib:format/2","Write formatted output"],
             ["fun","stdlib","io_lib:fread/2","Read formatted input"],
             ["fun","stdlib","io_lib:fread/3","Re-entrant formatted reader"],
             ["fun","stdlib","io_lib:write_atom/1","Write an atom"],
             ["fun","stdlib","io_lib:write_string/1","Write a string"],
             ["fun","stdlib","io_lib:write_char/1","Write a character"],
             ["fun","stdlib","io_lib:indentation/2",
              "Indentation after printing string"],
             ["fun","stdlib","io_lib:char_list/1",
              "Test for a list of characters"],
             ["fun","stdlib","io_lib:deep_char_list/1",
              "Test for a deep list of characters"],
             ["fun","stdlib","io_lib:printable_list/1",
              "Test for a list of printable ISO-latin-1 character"],
             ["fun","stdlib","lib:flush_receive/0","Flush messages"],
             ["fun","stdlib","lib:error_message/2","Print error message"],
             ["fun","stdlib","lib:progname/0",
              "Return name of Erlang start script"],
             ["fun","stdlib","lib:nonl/1","Remove last newline"],
             ["fun","stdlib","lib:send/2","Send a message"],
             ["fun","stdlib","lib:sendw/2",
              "Send a message and wait for an answer"],
             ["fun","stdlib","lists:all/2",
              "Return true if all elements in the list satisfy<c>"],
             ["fun","stdlib","lists:any/2",
              "Return true if any of the elements in the list sat"],
             ["fun","stdlib","lists:append/1","Append a list of lists"],
             ["fun","stdlib","lists:append/2","Append two lists"],
             ["fun","stdlib","lists:concat/1","Concatenate a list of atoms"],
             ["fun","stdlib","lists:delete/2","Delete an element from a list"],
             ["fun","stdlib","lists:dropwhile/2",
              "Drop elements from a list while a predicate is tru"],
             ["fun","stdlib","lists:duplicate/2","Make N copies of element"],
             ["fun","stdlib","lists:filter/2",
              "Choose elements which satisfy a predicate"],
             ["fun","stdlib","lists:flatlength/1",
              "Length of flattened deep list"],
             ["fun","stdlib","lists:flatmap/2","Map and flatten in one pass"],
             ["fun","stdlib","lists:flatten/1","Flatten a deep list"],
             ["fun","stdlib","lists:flatten/2","Flatten a deep list"],
             ["fun","stdlib","lists:foldl/3","Fold a function over a list"],
             ["fun","stdlib","lists:foldr/3","Fold a function over a list"],
             ["fun","stdlib","lists:foreach/2",
              "Apply a function to each element of a list"],
             ["fun","stdlib","lists:keydelete/3",
              "Delete an element from a list of tuples"],
             ["fun","stdlib","lists:keyfind/3",
              "Search for an element in a list of tuples"],
             ["fun","stdlib","lists:keymap/3",
              "Map a function over a list of tuples"],
             ["fun","stdlib","lists:keymember/3",
              "Test for membership of a list of tuples"],
             ["fun","stdlib","lists:keymerge/3",
              "Merge two key-sorted lists of tuples"],
             ["fun","stdlib","lists:keyreplace/4",
              "Replace an element in a list of tuples"],
             ["fun","stdlib","lists:keysearch/3",
              "Search for an element in a list of tuples"],
             ["fun","stdlib","lists:keysort/2","Sort a list of tuples"],
             ["fun","stdlib","lists:keystore/4",
              "Store an element in a list of tuples"],
             ["fun","stdlib","lists:keytake/3",
              "Extract an element from a list of tuples"],
             ["fun","stdlib","lists:last/1","Return last element in a list"],
             ["fun","stdlib","lists:map/2","Map a function over a list"],
             ["fun","stdlib","lists:mapfoldl/3","Map and fold in one pass"],
             ["fun","stdlib","lists:mapfoldr/3","Map and fold in one pass"],
             ["fun","stdlib","lists:max/1","Return maximum element of a list"],
             ["fun","stdlib","lists:member/2","Test for membership of a list"],
             ["fun","stdlib","lists:merge/1","Merge a list of sorted lists"],
             ["fun","stdlib","lists:merge/2","Merge two sorted lists"],
             ["fun","stdlib","lists:merge/3","Merge two sorted list"],
             ["fun","stdlib","lists:merge3/3","Merge three sorted lists"],
             ["fun","stdlib","lists:min/1","Return minimum element of a list"],
             ["fun","stdlib","lists:nth/2","Return the Nth element of a list"],
             ["fun","stdlib","lists:nthtail/2",
              "Return the Nth tail of a list"],
             ["fun","stdlib","lists:partition/2",
              "Partition a list into two lists based on a predica"],
             ["fun","stdlib","lists:prefix/2","Test for list prefix"],
             ["fun","stdlib","lists:reverse/1","Reverse a list"],
             ["fun","stdlib","lists:reverse/2",
              "Reverse a list appending a tail"],
             ["fun","stdlib","lists:seq/2","Generate a sequence of integers"],
             ["fun","stdlib","lists:seq/3","Generate a sequence of integers"],
             ["fun","stdlib","lists:sort/1","Sort a list"],
             ["fun","stdlib","lists:sort/2","Sort a list"],
             ["fun","stdlib","lists:split/2","Split a list into two lists"],
             ["fun","stdlib","lists:splitwith/2",
              "Split a list into two lists based on a predicate"],
             ["fun","stdlib","lists:sublist/2",
              "Return a sub-list of a certain length, starting at"],
             ["fun","stdlib","lists:sublist/3",
              "Return a sub-list starting at a given position and"],
             ["fun","stdlib","lists:subtract/2",
              "Subtract the element in one list from another list"],
             ["fun","stdlib","lists:suffix/2","Test for list suffix"],
             ["fun","stdlib","lists:sum/1","Return sum of elements in a list"],
             ["fun","stdlib","lists:takewhile/2",
              "Take elements from a list while a predicate is tru"],
             ["fun","stdlib","lists:ukeymerge/3",
              "Merge two key-sorted lists of tuples, removing dup"],
             ["fun","stdlib","lists:ukeysort/2",
              "Sort a list of tuples, removing duplicates"],
             ["fun","stdlib","lists:umerge/1",
              "Merge a list of sorted lists, removing duplicates"],
             ["fun","stdlib","lists:umerge/2",
              "Merge two sorted lists, removing duplicates"],
             ["fun","stdlib","lists:umerge/3",
              "Merge two sorted lists, removing duplicates"],
             ["fun","stdlib","lists:umerge3/3",
              "Merge three sorted lists, removing duplicates"],
             ["fun","stdlib","lists:unzip/1",
              "Unzip a list of two-tuples into two lists"],
             ["fun","stdlib","lists:unzip3/1",
              "Unzip a list of three-tuples into three lists"],
             ["fun","stdlib","lists:usort/1",
              "Sort a list, removing duplicates"],
             ["fun","stdlib","lists:usort/2",
              "Sort a list, removing duplicates"],
             ["fun","stdlib","lists:zip/2",
              "Zip two lists into a list of two-tuples"],
             ["fun","stdlib","lists:zip3/3",
              "Zip three lists into a list of three-tuples"],
             ["fun","stdlib","lists:zipwith/3",
              "Zip two lists into one list according to a fun"],
             ["fun","stdlib","lists:zipwith3/4",
              "Zip three lists into one list according to a fun"],
             ["fun","stdlib","log_mf_h:init/3","Initiate the event handler"],
             ["fun","stdlib","log_mf_h:init/4","Initiate the event handler"],
             ["fun","stdlib","math:pi/0","A useful number"],
             ["fun","stdlib","math:sin/1","Diverse math functions"],
             ["fun","stdlib","math:cos/1","Diverse math functions"],
             ["fun","stdlib","math:tan/1","Diverse math functions"],
             ["fun","stdlib","math:asin/1","Diverse math functions"],
             ["fun","stdlib","math:acos/1","Diverse math functions"],
             ["fun","stdlib","math:atan/1","Diverse math functions"],
             ["fun","stdlib","math:atan2/2","Diverse math functions"],
             ["fun","stdlib","math:sinh/1","Diverse math functions"],
             ["fun","stdlib","math:cosh/1","Diverse math functions"],
             ["fun","stdlib","math:tanh/1","Diverse math functions"],
             ["fun","stdlib","math:asinh/1","Diverse math functions"],
             ["fun","stdlib","math:acosh/1","Diverse math functions"],
             ["fun","stdlib","math:atanh/1","Diverse math functions"],
             ["fun","stdlib","math:exp/1","Diverse math functions"],
             ["fun","stdlib","math:log/1","Diverse math functions"],
             ["fun","stdlib","math:log10/1","Diverse math functions"],
             ["fun","stdlib","math:pow/2","Diverse math functions"],
             ["fun","stdlib","math:sqrt/1","Diverse math functions"],
             ["fun","stdlib","math:erf/1","Error function."],
             ["fun","stdlib","math:erfc/1","Another error function"],
             ["fun","stdlib","ms_transform:parse_transform/2",
              "Transforms Erlang abstract format containing calls"],
             ["fun","stdlib","ms_transform:transform_from_shell/3",
              "Used when transforming fun's created in the shell "],
             ["fun","stdlib","ms_transform:format_error/1",
              "Error formatting function as required by the parse"],
             ["fun","stdlib","orddict:append/3",
              "Append a value to keys in a dictionary"],
             ["fun","stdlib","orddict:append_list/3",
              "Append new values to keys in a dictionary"],
             ["fun","stdlib","orddict:erase/2",
              "Erase a key from a dictionary"],
             ["fun","stdlib","orddict:fetch/2",
              "Look-up values in a dictionary"],
             ["fun","stdlib","orddict:fetch_keys/1",
              "Return all keys in a dictionary"],
             ["fun","stdlib","orddict:filter/2",
              "Choose elements which satisfy a predicate"],
             ["fun","stdlib","orddict:find/2",
              "Search for a key in a dictionary"],
             ["fun","stdlib","orddict:fold/3",
              "Fold a function over a dictionary"],
             ["fun","stdlib","orddict:from_list/1",
              "Convert a list of pairs to a dictionary"],
             ["fun","stdlib","orddict:is_key/2",
              "Test if a key is in a dictionary"],
             ["fun","stdlib","orddict:map/2",
              "Map a function over a dictionary"],
             ["fun","stdlib","orddict:merge/3","Merge two dictionaries"],
             ["fun","stdlib","orddict:new/0","Create a dictionary"],
             ["fun","stdlib","orddict:size/1",
              "Return the number of elements in an ordered dictio"],
             ["fun","stdlib","orddict:store/3",
              "Store a value in a dictionary"],
             ["fun","stdlib","orddict:to_list/1",
              "Convert a dictionary to a list of pairs"],
             ["fun","stdlib","orddict:update/3",
              "Update a value in a dictionary"],
             ["fun","stdlib","orddict:update/4",
              "Update a value in a dictionary"],
             ["fun","stdlib","orddict:update_counter/3",
              "Increment a value in a dictionary"],
             ["fun","stdlib","ordsets:new/0","Return an empty set"],
             ["fun","stdlib","ordsets:is_set/1","Test for an <c>Ordset</c>"],
             ["fun","stdlib","ordsets:size/1",
              "Return the number of elements in a set"],
             ["fun","stdlib","ordsets:to_list/1",
              "Convert an <c>Ordset</c>into a list"],
             ["fun","stdlib","ordsets:from_list/1",
              "Convert a list into an <c>Ordset</c>"],
             ["fun","stdlib","ordsets:is_element/2",
              "Test for membership of an <c>Ordset</c>"],
             ["fun","stdlib","ordsets:add_element/2",
              "Add an element to an <c>Ordset</c>"],
             ["fun","stdlib","ordsets:del_element/2",
              "Remove an element from an <c>Ordset</c>"],
             ["fun","stdlib","ordsets:union/2",
              "Return the union of two <c>Ordsets</c>"],
             ["fun","stdlib","ordsets:union/1",
              "Return the union of a list of <c>Ordsets</c>"],
             ["fun","stdlib","ordsets:intersection/2",
              "Return the intersection of two <c>Ordsets</c>"],
             ["fun","stdlib","ordsets:intersection/1",
              "Return the intersection of a list of <c>Ordsets</c"],
             ["fun","stdlib","ordsets:is_disjoint/2",
              "Check whether two <c>Ordsets</c> are disjoint"],
             ["fun","stdlib","ordsets:subtract/2",
              "Return the difference of two <c>Ordsets</c>"],
             ["fun","stdlib","ordsets:is_subset/2","Test for subset"],
             ["fun","stdlib","ordsets:fold/3","Fold over set elements"],
             ["fun","stdlib","ordsets:filter/2","Filter set elements"],
             ["fun","stdlib","pg:create/1","Create an empty group"],
             ["fun","stdlib","pg:create/2",
              "Create an empty group on another node"],
             ["fun","stdlib","pg:join/2","Join a pid to a process group"],
             ["fun","stdlib","pg:send/2",
              "Send a message to all members of a process group"],
             ["fun","stdlib","pg:esend/2",
              "Send a message to all members of a process group, "],
             ["fun","stdlib","pg:members/1",
              "Return a list of all members of a process group"],
             ["fun","stdlib","pool:start/1","&gt;Start a new pool"],
             ["fun","stdlib","pool:start/2","&gt;Start a new pool"],
             ["fun","stdlib","pool:attach/1",
              "Ensure that a pool master is running"],
             ["fun","stdlib","pool:stop/0",
              "Stop the pool and kill all the slave nodes"],
             ["fun","stdlib","pool:get_nodes/0",
              "Return a list of the current member nodes of the p"],
             ["fun","stdlib","pool:pspawn/3",
              "Spawn a process on the pool node with expected low"],
             ["fun","stdlib","pool:pspawn_link/3",
              "Spawn and link to a process on the pool node with "],
             ["fun","stdlib","pool:get_node/0",
              "Return the node with the expected lowest future lo"],
             ["fun","stdlib","proc_lib:spawn/1","Spawn a new process."],
             ["fun","stdlib","proc_lib:spawn/2","Spawn a new process."],
             ["fun","stdlib","proc_lib:spawn/3","Spawn a new process."],
             ["fun","stdlib","proc_lib:spawn/4","Spawn a new process."],
             ["fun","stdlib","proc_lib:spawn_link/1",
              "Spawn and link to a new process."],
             ["fun","stdlib","proc_lib:spawn_link/2",
              "Spawn and link to a new process."],
             ["fun","stdlib","proc_lib:spawn_link/3",
              "Spawn and link to a new process."],
             ["fun","stdlib","proc_lib:spawn_link/4",
              "Spawn and link to a new process."],
             ["fun","stdlib","proc_lib:spawn_opt/2",
              "Spawn a new process with given options."],
             ["fun","stdlib","proc_lib:spawn_opt/3",
              "Spawn a new process with given options."],
             ["fun","stdlib","proc_lib:spawn_opt/4",
              "Spawn a new process with given options."],
             ["fun","stdlib","proc_lib:spawn_opt/5",
              "Spawn a new process with given options."],
             ["fun","stdlib","proc_lib:start/3",
              "Start a new process synchronously."],
             ["fun","stdlib","proc_lib:start/4",
              "Start a new process synchronously."],
             ["fun","stdlib","proc_lib:start/5",
              "Start a new process synchronously."],
             ["fun","stdlib","proc_lib:start_link/3",
              "Start a new process synchronously."],
             ["fun","stdlib","proc_lib:start_link/4",
              "Start a new process synchronously."],
             ["fun","stdlib","proc_lib:start_link/5",
              "Start a new process synchronously."],
             ["fun","stdlib","proc_lib:init_ack/2",
              "Used by a process when it has started."],
             ["fun","stdlib","proc_lib:init_ack/1",
              "Used by a process when it has started."],
             ["fun","stdlib","proc_lib:format/1","Format a crash report."],
             ["fun","stdlib","proc_lib:initial_call/1",
              "Extract the initial call of a <c>proc_lib</c>spawn"],
             ["fun","stdlib","proc_lib:translate_initial_call/1",
              "Extract and translate the initial call of a <c>pro"],
             ["fun","stdlib","proc_lib:hibernate/3",
              "Hibernate a process until a message is sent to it"],
             ["fun","stdlib","proplists:append_values/2",[]],
             ["fun","stdlib","proplists:compact/1",[]],
             ["fun","stdlib","proplists:delete/2",[]],
             ["fun","stdlib","proplists:expand/2",[]],
             ["fun","stdlib","proplists:get_all_values/2",[]],
             ["fun","stdlib","proplists:get_bool/2",[]],
             ["fun","stdlib","proplists:get_keys/1",[]],
             ["fun","stdlib","proplists:get_value/2",[]],
             ["fun","stdlib","proplists:get_value/3",[]],
             ["fun","stdlib","proplists:is_defined/2",[]],
             ["fun","stdlib","proplists:lookup/2",[]],
             ["fun","stdlib","proplists:lookup_all/2",[]],
             ["fun","stdlib","proplists:normalize/2",[]],
             ["fun","stdlib","proplists:property/1",[]],
             ["fun","stdlib","proplists:property/2",[]],
             ["fun","stdlib","proplists:split/2",[]],
             ["fun","stdlib","proplists:substitute_aliases/2",[]],
             ["fun","stdlib","proplists:substitute_negations/2",[]],
             ["fun","stdlib","proplists:unfold/1",[]],
             ["fun","stdlib","qlc:append/1","Return a query handle."],
             ["fun","stdlib","qlc:append/2","Return a query handle."],
             ["fun","stdlib","qlc:cursor/2","Create a query cursor."],
             ["fun","stdlib","qlc:delete_cursor/1","Delete a query cursor."],
             ["fun","stdlib","qlc:eval/2","Return all answers to a query."],
             ["fun","stdlib","qlc:e/2","Return all answers to a query."],
             ["fun","stdlib","qlc:fold/4",
              "Fold a function over the answers to a query."],
             ["fun","stdlib","qlc:format_error/1",
              "Return an English description of a an error tuple."],
             ["fun","stdlib","qlc:info/2",
              "Return code describing a query handle."],
             ["fun","stdlib","qlc:keysort/3","Return a query handle."],
             ["fun","stdlib","qlc:next_answers/2",
              "Return some or all answers to a query."],
             ["fun","stdlib","qlc:q/2",
              "Return a handle for a query list comprehension."],
             ["fun","stdlib","qlc:sort/2","Return a query handle."],
             ["fun","stdlib","qlc:string_to_handle/3",
              "Return a handle for a query list comprehension."],
             ["fun","stdlib","qlc:table/2",
              "Return a query handle for a table."],
             ["fun","stdlib","queue:new/0","Create an empty queue"],
             ["fun","stdlib","queue:is_queue/1","Test if a term is a queue"],
             ["fun","stdlib","queue:is_empty/1","Test if a queue is empty"],
             ["fun","stdlib","queue:len/1","Get the length of a queue"],
             ["fun","stdlib","queue:in/2",
              "Insert an item at the rear of a queue"],
             ["fun","stdlib","queue:in_r/2",
              "Insert an item at the front of a queue"],
             ["fun","stdlib","queue:out/1",
              "Remove the front item from a queue"],
             ["fun","stdlib","queue:out_r/1",
              "Remove the rear item from a queue"],
             ["fun","stdlib","queue:from_list/1","Convert a list to a queue"],
             ["fun","stdlib","queue:to_list/1","Convert a queue to a list"],
             ["fun","stdlib","queue:reverse/1","Reverse a queue"],
             ["fun","stdlib","queue:split/2","Split a queue in two"],
             ["fun","stdlib","queue:join/2","Join two queues"],
             ["fun","stdlib","queue:filter/2","Filter a queue"],
             ["fun","stdlib","queue:member/2","Test if an item is in a queue"],
             ["fun","stdlib","random:seed/0",
              "Seeds random number generation with default values"],
             ["fun","stdlib","random:seed/3","Seeds random number generator"],
             ["fun","stdlib","random:seed/3","Seeds random number generator"],
             ["fun","stdlib","random:seed0/0",
              "Return default state for random number generation"],
             ["fun","stdlib","random:uniform/0","Return a random float"],
             ["fun","stdlib","random:uniform/1","Return a random integer"],
             ["fun","stdlib","random:uniform_s/1","Return a random float"],
             ["fun","stdlib","random:uniform_s/2","Return a random integer"],
             ["fun","stdlib","re:compile/1",
              "Compile a regular expression into a match program"],
             ["fun","stdlib","re:compile/2",
              "Compile a regular expression into a match program"],
             ["fun","stdlib","re:run/2",
              "Match a subject against regular expression and cap"],
             ["fun","stdlib","re:run/3",
              "Match a subject against regular expression and cap"],
             ["fun","stdlib","re:replace/3",
              "Match a subject against regular expression and rep"],
             ["fun","stdlib","re:replace/4",
              "Match a subject against regular expression and rep"],
             ["fun","stdlib","re:split/2",
              "Split a string by tokens specified as a regular ex"],
             ["fun","stdlib","re:split/3",
              "Split a string by tokens specified as a regular ex"],
             ["fun","stdlib","regexp:match/2","Match a regular expression"],
             ["fun","stdlib","regexp:first_match/2",
              "Match a regular expression"],
             ["fun","stdlib","regexp:matches/2","Match a regular expression"],
             ["fun","stdlib","regexp:sub/3",
              "Substitute the first occurrence of a regular expre"],
             ["fun","stdlib","regexp:gsub/3",
              "Substitute all occurrences of a regular expression"],
             ["fun","stdlib","regexp:split/2","Split a string into fields"],
             ["fun","stdlib","regexp:sh_to_awk/1",
              "Convert an <c>sh</c>regular expression into an <c>"],
             ["fun","stdlib","regexp:parse/1","Parse a regular expression"],
             ["fun","stdlib","regexp:format_error/1",
              "Format an error descriptor"],
             ["fun","stdlib","sets:new/0","Return an empty set"],
             ["fun","stdlib","sets:is_set/1","Test for an <c>Set</c>"],
             ["fun","stdlib","sets:size/1",
              "Return the number of elements in a set"],
             ["fun","stdlib","sets:to_list/1",
              "Convert an <c>Set</c>into a list"],
             ["fun","stdlib","sets:from_list/1",
              "Convert a list into an <c>Set</c>"],
             ["fun","stdlib","sets:is_element/2",
              "Test for membership of an <c>Set</c>"],
             ["fun","stdlib","sets:add_element/2",
              "Add an element to an <c>Set</c>"],
             ["fun","stdlib","sets:del_element/2",
              "Remove an element from an <c>Set</c>"],
             ["fun","stdlib","sets:union/2",
              "Return the union of two <c>Sets</c>"],
             ["fun","stdlib","sets:union/1",
              "Return the union of a list of <c>Sets</c>"],
             ["fun","stdlib","sets:intersection/2",
              "Return the intersection of two <c>Sets</c>"],
             ["fun","stdlib","sets:intersection/1",
              "Return the intersection of a list of <c>Sets</c>"],
             ["fun","stdlib","sets:is_disjoint/2",
              "Check whether two <c>Sets</c> are disjoint"],
             ["fun","stdlib","sets:subtract/2",
              "Return the difference of two <c>Sets</c>"],
             ["fun","stdlib","sets:is_subset/2","Test for subset"],
             ["fun","stdlib","sets:fold/3","Fold over set elements"],
             ["fun","stdlib","sets:filter/2","Filter set elements"],
             ["fun","stdlib","shell:history/1",
              "Sets the number of previous commands to keep"],
             ["fun","stdlib","shell:results/1",
              "Sets the number of previous results to keep"],
             ["fun","stdlib","shell:catch_exception/1",
              "Sets the exception handling of the shell"],
             ["fun","stdlib","shell:start_restricted/1",
              "Exits a normal shell and starts a restricted shell"],
             ["fun","stdlib","shell:stop_restricted/0",
              "Exits a restricted shell and starts a normal shell"],
             ["fun","stdlib","slave:start/1","Start a slave node on a host"],
             ["fun","stdlib","slave:start/2","Start a slave node on a host"],
             ["fun","stdlib","slave:start/3","Start a slave node on a host"],
             ["fun","stdlib","slave:start_link/1",
              "Start and link to a slave node on a host"],
             ["fun","stdlib","slave:start_link/2",
              "Start and link to a slave node on a host"],
             ["fun","stdlib","slave:start_link/3",
              "Start and link to a slave node on a host"],
             ["fun","stdlib","slave:stop/1","Stop (kill) a node"],
             ["fun","stdlib","slave:pseudo/1",
              "Start a number of pseudo servers"],
             ["fun","stdlib","slave:pseudo/2",
              "Start a number of pseudo servers"],
             ["fun","stdlib","slave:relay/1","Run a pseudo server"],
             ["fun","stdlib","sofs:a_function/2","Create a function."],
             ["fun","stdlib","sofs:canonical_relation/1",
              "Return the canonical map."],
             ["fun","stdlib","sofs:composite/2",
              "Return the composite of two functions."],
             ["fun","stdlib","sofs:constant_function/2",
              "Create the function that maps each element of a \n "],
             ["fun","stdlib","sofs:converse/1",
              "Return the converse of a binary relation."],
             ["fun","stdlib","sofs:difference/2",
              "Return the difference of two sets."],
             ["fun","stdlib","sofs:digraph_to_family/2",
              "Create a family from a directed graph."],
             ["fun","stdlib","sofs:domain/1",
              "Return the domain of a binary relation."],
             ["fun","stdlib","sofs:drestriction/2",
              "Return a restriction of a binary relation."],
             ["fun","stdlib","sofs:drestriction/3",
              "Return a restriction of a relation."],
             ["fun","stdlib","sofs:empty_set/0",
              "Return the untyped empty set."],
             ["fun","stdlib","sofs:extension/3",
              "Extend the domain of a binary relation."],
             ["fun","stdlib","sofs:family/2","Create a family of subsets."],
             ["fun","stdlib","sofs:family_difference/2",
              "Return the difference of two families."],
             ["fun","stdlib","sofs:family_domain/1",
              "Return a family of domains."],
             ["fun","stdlib","sofs:family_field/1",
              "Return a family of fields."],
             ["fun","stdlib","sofs:family_intersection/1",
              "Return the intersection of a family\n         of se"],
             ["fun","stdlib","sofs:family_intersection/2",
              "Return the intersection of two families."],
             ["fun","stdlib","sofs:family_projection/2",
              "Return a family of modified subsets."],
             ["fun","stdlib","sofs:family_range/1",
              "Return a family of ranges."],
             ["fun","stdlib","sofs:family_specification/2",
              "Select a subset of a family using a predicate."],
             ["fun","stdlib","sofs:family_to_digraph/2",
              "Create a directed graph from a family."],
             ["fun","stdlib","sofs:family_to_relation/1",
              "Create a binary relation from a family."],
             ["fun","stdlib","sofs:family_union/1",
              "Return the union of a family of sets of sets."],
             ["fun","stdlib","sofs:family_union/2",
              "Return the union of two families."],
             ["fun","stdlib","sofs:field/1",
              "Return the field of a binary relation."],
             ["fun","stdlib","sofs:from_external/2","Create a set."],
             ["fun","stdlib","sofs:from_sets/1",
              "Create a set out of a list of sets."],
             ["fun","stdlib","sofs:from_sets/1",
              "Create an ordered set out of a tuple of sets."],
             ["fun","stdlib","sofs:from_term/2","Create a set."],
             ["fun","stdlib","sofs:image/2",
              "Return the image of a set under a binary relation."],
             ["fun","stdlib","sofs:intersection/1",
              "Return the intersection of a set of sets."],
             ["fun","stdlib","sofs:intersection/2",
              "Return the intersection of two sets."],
             ["fun","stdlib","sofs:intersection_of_family/1",
              "Return the intersection of a family."],
             ["fun","stdlib","sofs:inverse/1",
              "Return the inverse of a function."],
             ["fun","stdlib","sofs:inverse_image/2",
              "Return the inverse image of a set under \n        a"],
             ["fun","stdlib","sofs:is_a_function/1","Test for a function."],
             ["fun","stdlib","sofs:is_disjoint/2","Test for disjoint sets."],
             ["fun","stdlib","sofs:is_empty_set/1","Test for an empty set."],
             ["fun","stdlib","sofs:is_equal/2","Test two sets for equality."],
             ["fun","stdlib","sofs:is_set/1","Test for an unordered set."],
             ["fun","stdlib","sofs:is_sofs_set/1",
              "Test for an unordered set."],
             ["fun","stdlib","sofs:is_subset/2","Test two sets for subset."],
             ["fun","stdlib","sofs:is_type/1","Test for a type."],
             ["fun","stdlib","sofs:join/4",
              "Return the join of two relations."],
             ["fun","stdlib","sofs:multiple_relative_product/2",
              "Return the multiple relative product of a tuple of"],
             ["fun","stdlib","sofs:no_elements/1",
              "Return the number of elements of a set."],
             ["fun","stdlib","sofs:partition/1",
              "Return the coarsest partition given a set of sets."],
             ["fun","stdlib","sofs:partition/2",
              "Return a partition of a set."],
             ["fun","stdlib","sofs:partition/3",
              "Return a partition of a set."],
             ["fun","stdlib","sofs:partition_family/2",
              "Return a family indexing a partition."],
             ["fun","stdlib","sofs:product/1",
              "Return the Cartesian product of a tuple of sets."],
             ["fun","stdlib","sofs:product/2",
              "Return the Cartesian product of two sets."],
             ["fun","stdlib","sofs:projection/2",
              "Return a set of substituted elements."],
             ["fun","stdlib","sofs:range/1",
              "Return the range of a binary relation."],
             ["fun","stdlib","sofs:relation/2","Create a relation."],
             ["fun","stdlib","sofs:relation_to_family/1",
              "Create a family from a binary relation."],
             ["fun","stdlib","sofs:relative_product/2",
              "Return the relative product of a tuple of binary r"],
             ["fun","stdlib","sofs:relative_product/2",
              "Return the relative product of \n        two binary"],
             ["fun","stdlib","sofs:relative_product1/2",
              "Return the relative_product of \n        two binary"],
             ["fun","stdlib","sofs:restriction/2",
              "Return a restriction of a binary relation."],
             ["fun","stdlib","sofs:restriction/3",
              "Return a restriction of a set."],
             ["fun","stdlib","sofs:set/2",
              "Create a set of atoms or any type of sets."],
             ["fun","stdlib","sofs:specification/2",
              "Select a subset using a predicate."],
             ["fun","stdlib","sofs:strict_relation/1",
              "Return the strict relation corresponding to \n     "],
             ["fun","stdlib","sofs:substitution/2",
              "Return a function with a given set as domain."],
             ["fun","stdlib","sofs:symdiff/2",
              "Return the symmetric difference of two sets."],
             ["fun","stdlib","sofs:symmetric_partition/2",
              "Return a partition of two sets."],
             ["fun","stdlib","sofs:to_external/1",
              "Return the elements of a set."],
             ["fun","stdlib","sofs:to_sets/1",
              "Return a list or a tuple of the elements of set."],
             ["fun","stdlib","sofs:type/1","Return the type of a set."],
             ["fun","stdlib","sofs:union/1",
              "Return the union of a set of sets."],
             ["fun","stdlib","sofs:union/2","Return the union of two sets."],
             ["fun","stdlib","sofs:union_of_family/1",
              "Return the union of a family."],
             ["fun","stdlib","sofs:weak_relation/1",
              "Return the weak relation corresponding to \n       "],
             ["fun","stdlib","string:len/1","Return the length of a string"],
             ["fun","stdlib","string:equal/2","Test string equality"],
             ["fun","stdlib","string:concat/2","Concatenate two strings"],
             ["fun","stdlib","string:chr/2",
              "Return the index of the first/last occurrence of<c"],
             ["fun","stdlib","string:rchr/2",
              "Return the index of the first/last occurrence of<c"],
             ["fun","stdlib","string:str/2","Find the index of a substring"],
             ["fun","stdlib","string:rstr/2","Find the index of a substring"],
             ["fun","stdlib","string:span/2",
              "Span characters at start of string"],
             ["fun","stdlib","string:cspan/2",
              "Span characters at start of string"],
             ["fun","stdlib","string:substr/2",
              "Return a substring of <c>String</c>"],
             ["fun","stdlib","string:substr/3",
              "Return a substring of <c>String</c>"],
             ["fun","stdlib","string:tokens/2","Split string into tokens"],
             ["fun","stdlib","string:join/2",
              "Join a list of strings with separator"],
             ["fun","stdlib","string:chars/2",
              "Returns a string consisting of numbers of characte"],
             ["fun","stdlib","string:chars/3",
              "Returns a string consisting of numbers of characte"],
             ["fun","stdlib","string:copies/2","Copy a string"],
             ["fun","stdlib","string:words/1","Count blank separated words"],
             ["fun","stdlib","string:words/2","Count blank separated words"],
             ["fun","stdlib","string:sub_word/2","Extract subword"],
             ["fun","stdlib","string:sub_word/3","Extract subword"],
             ["fun","stdlib","string:strip/1",
              "Strip leading or trailing characters"],
             ["fun","stdlib","string:strip/2",
              "Strip leading or trailing characters"],
             ["fun","stdlib","string:strip/3",
              "Strip leading or trailing characters"],
             ["fun","stdlib","string:left/2","Adjust left end of string"],
             ["fun","stdlib","string:left/3","Adjust left end of string"],
             ["fun","stdlib","string:right/2","Adjust right end of string"],
             ["fun","stdlib","string:right/3","Adjust right end of string"],
             ["fun","stdlib","string:centre/2","Center a string"],
             ["fun","stdlib","string:centre/3","Center a string"],
             ["fun","stdlib","string:sub_string/2","Extract a substring"],
             ["fun","stdlib","string:sub_string/3","Extract a substring"],
             ["fun","stdlib","string:to_float/1",
              "Returns a float whose text representation is the i"],
             ["fun","stdlib","string:to_integer/1",
              "Returns an integer whose text representation is th"],
             ["fun","stdlib","string:to_lower/1",
              "Convert case of string (ISO/IEC 8859-1)"],
             ["fun","stdlib","string:to_lower/1",
              "Convert case of string (ISO/IEC 8859-1)"],
             ["fun","stdlib","string:to_upper/1",
              "Convert case of string (ISO/IEC 8859-1)"],
             ["fun","stdlib","string:to_upper/1",
              "Convert case of string (ISO/IEC 8859-1)"],
             ["fun","stdlib","supervisor:start_link/2",
              "Create a supervisor process."],
             ["fun","stdlib","supervisor:start_link/3",
              "Create a supervisor process."],
             ["fun","stdlib","supervisor:start_child/2",
              "Dynamically add a child process to a supervisor."],
             ["fun","stdlib","supervisor:terminate_child/2",
              "Terminate a child process belonging to a superviso"],
             ["fun","stdlib","supervisor:delete_child/2",
              "Delete a child specification from a supervisor."],
             ["fun","stdlib","supervisor:restart_child/2",
              "Restart a terminated child process belonging to a "],
             ["fun","stdlib","supervisor:which_children/1",
              "Return information about all children specificatio"],
             ["fun","stdlib","supervisor:check_childspecs/1",
              "Check if children specifications are syntactically"],
             ["fun","stdlib","supervisor_bridge:start_link/2",
              "Create a supervisor bridge process."],
             ["fun","stdlib","supervisor_bridge:start_link/3",
              "Create a supervisor bridge process."],
             ["fun","stdlib","sys:log/2","Log system events in memory"],
             ["fun","stdlib","sys:log/3","Log system events in memory"],
             ["fun","stdlib","sys:log_to_file/2",
              "Log system events to the specified file"],
             ["fun","stdlib","sys:log_to_file/3",
              "Log system events to the specified file"],
             ["fun","stdlib","sys:statistics/2",
              "Enable or disable the collections of statistics"],
             ["fun","stdlib","sys:statistics/3",
              "Enable or disable the collections of statistics"],
             ["fun","stdlib","sys:trace/2",
              "Print all system events on <c>standard_io</c>"],
             ["fun","stdlib","sys:trace/3",
              "Print all system events on <c>standard_io</c>"],
             ["fun","stdlib","sys:no_debug/1","Turn off debugging"],
             ["fun","stdlib","sys:no_debug/2","Turn off debugging"],
             ["fun","stdlib","sys:suspend/1","Suspend the process"],
             ["fun","stdlib","sys:suspend/2","Suspend the process"],
             ["fun","stdlib","sys:resume/1","Resume a suspended process"],
             ["fun","stdlib","sys:resume/2","Resume a suspended process"],
             ["fun","stdlib","sys:change_code/4",
              "Send the code change system message to the process"],
             ["fun","stdlib","sys:change_code/5",
              "Send the code change system message to the process"],
             ["fun","stdlib","sys:get_status/1",
              "Get the status of the process"],
             ["fun","stdlib","sys:get_status/2",
              "Get the status of the process"],
             ["fun","stdlib","sys:install/3",
              "Install a debug function in the process"],
             ["fun","stdlib","sys:install/4",
              "Install a debug function in the process"],
             ["fun","stdlib","sys:remove/2",
              "Remove a debug function from the process"],
             ["fun","stdlib","sys:remove/3",
              "Remove a debug function from the process"],
             ["fun","stdlib","timer:start/0",
              "Start a global timer server (named <c>timer_server"],
             ["fun","stdlib","timer:apply_after/4",
              "Apply <c>Module:Function(Arguments)</c>after a  sp"],
             ["fun","stdlib","timer:send_after/3",
              "Send <c>Message</c>to <c>Pid</c>after a specified "],
             ["fun","stdlib","timer:send_after/2",
              "Send <c>Message</c>to <c>Pid</c>after a specified "],
             ["fun","stdlib","timer:exit_after/3",
              "Send an exit signal with <c>Reason</c>after a spec"],
             ["fun","stdlib","timer:exit_after/2",
              "Send an exit signal with <c>Reason</c>after a spec"],
             ["fun","stdlib","timer:kill_after/2",
              "Send an exit signal with <c>Reason</c>after a spec"],
             ["fun","stdlib","timer:kill_after/1",
              "Send an exit signal with <c>Reason</c>after a spec"],
             ["fun","stdlib","timer:apply_interval/4",
              "Evaluate <c>Module:Function(Arguments)</c>repeated"],
             ["fun","stdlib","timer:send_interval/3",
              "Send <c>Message</c>repeatedly at intervals of <c>T"],
             ["fun","stdlib","timer:send_interval/2",
              "Send <c>Message</c>repeatedly at intervals of <c>T"],
             ["fun","stdlib","timer:cancel/1",
              "Cancel a previously requested timeout identified b"],
             ["fun","stdlib","timer:sleep/1",
              "Suspend the calling process for <c>Time</c>amount "],
             ["fun","stdlib","timer:tc/3",
              "Measure the real time it takes to evaluate <c>appl"],
             ["fun","stdlib","timer:now_diff/2",
              "Calculate time difference between <c>now/0</c>time"],
             ["fun","stdlib","timer:seconds/1",
              "Convert <c>Seconds</c>to <c>Milliseconds</c>."],
             ["fun","stdlib","timer:minutes/1",
              "Converts <c>Minutes</c>to <c>Milliseconds</c>."],
             ["fun","stdlib","timer:hours/1",
              "Convert <c>Hours</c>to <c>Milliseconds</c>."],
             ["fun","stdlib","timer:hms/3",
              "Convert <c>Hours</c>+<c>Minutes</c>+<c>Seconds</c>"],
             ["fun","stdlib","unicode:bom_to_encoding/1",
              "Identify UTF byte order marks in a binary."],
             ["fun","stdlib","unicode:characters_to_list/1",
              "Convert a collection of characters to list of Unic"],
             ["fun","stdlib","unicode:characters_to_list/2",
              "Convert a collection of characters to list of Unic"],
             ["fun","stdlib","unicode:characters_to_binary/1",
              "Convert a collection of characters to an UTF-8 bin"],
             ["fun","stdlib","unicode:characters_to_binary/2",
              "Convert a collection of characters to an UTF-8 bin"],
             ["fun","stdlib","unicode:characters_to_binary/3",
              "Convert a collection of characters to an UTF-8 bin"],
             ["fun","stdlib","unicode:encoding_to_bom/1",
              "Create a binary UTF byte order mark from encoding."],
             ["fun","stdlib","win32reg:change_key/2",
              "Move to a key in the registry"],
             ["fun","stdlib","win32reg:change_key_create/2",
              "Move to a key, create it if it is not there"],
             ["fun","stdlib","win32reg:close/1","Close the registry."],
             ["fun","stdlib","win32reg:current_key/1",
              "Return the path to the current key."],
             ["fun","stdlib","win32reg:delete_key/1","Delete the current key"],
             ["fun","stdlib","win32reg:delete_value/2",
              "Delete the named value on the current key."],
             ["fun","stdlib","win32reg:expand/1",
              "Expand a string with environment variables"],
             ["fun","stdlib","win32reg:format_error/1",
              "Convert an POSIX errorcode to a string"],
             ["fun","stdlib","win32reg:open/1",
              "Open the registry for reading or writing"],
             ["fun","stdlib","win32reg:set_value/3",
              "Set value at the current registry key with specifi"],
             ["fun","stdlib","win32reg:sub_keys/1",
              "Get subkeys to the current key."],
             ["fun","stdlib","win32reg:value/2",
              "Get the named value on the current key."],
             ["fun","stdlib","win32reg:values/1",
              "Get all values on the current key."],
             ["fun","stdlib","zip:zip/2","Create a zip archive with options"],
             ["fun","stdlib","zip:zip/3","Create a zip archive with options"],
             ["fun","stdlib","zip:create/2",
              "Create a zip archive with options"],
             ["fun","stdlib","zip:create/3",
              "Create a zip archive with options"],
             ["fun","stdlib","zip:unzip/1","Extract files from a zip archive"],
             ["fun","stdlib","zip:unzip/2","Extract files from a zip archive"],
             ["fun","stdlib","zip:extract/1",
              "Extract files from a zip archive"],
             ["fun","stdlib","zip:extract/2",
              "Extract files from a zip archive"],
             ["fun","stdlib","zip:list_dir/1",
              "Retrieve the name of all files in a zip archive"],
             ["fun","stdlib","zip:list_dir/2",
              "Retrieve the name of all files in a zip archive"],
             ["fun","stdlib","zip:table/1",
              "Retrieve the name of all files in a zip archive"],
             ["fun","stdlib","zip:table/2",
              "Retrieve the name of all files in a zip archive"],
             ["fun","stdlib","zip:t/1",
              "Print the name of each file in a zip archive"],
             ["fun","stdlib","zip:tt/1",
              "Print name and information for each file in a zip "],
             ["fun","stdlib","zip:zip_open/1",
              "Open an archive and return a handle to it"],
             ["fun","stdlib","zip:zip_open/2",
              "Open an archive and return a handle to it"],
             ["fun","stdlib","zip:zip_list_dir/1",
              "Return a table of files in open zip archive"],
             ["fun","stdlib","zip:zip_get/1",
              "Extract files from an open archive"],
             ["fun","stdlib","zip:zip_get/2",
              "Extract files from an open archive"],
             ["fun","stdlib","zip:zip_close/1","Close an open archive"],
             ["fun","ssl","new_ssl:cipher_suites/0",
              " Returns a list of supported cipher suites"],
             ["fun","ssl","new_ssl:cipher_suites/1",
              " Returns a list of supported cipher suites"],
             ["fun","ssl","new_ssl:connect/2",
              " Upgrades a gen_tcp, or\n\tequivalent, connected soc"],
             ["fun","ssl","new_ssl:connect/3",
              " Upgrades a gen_tcp, or\n\tequivalent, connected soc"],
             ["fun","ssl","new_ssl:connect/3",
              "Opens an ssl connection to Host, Port. "],
             ["fun","ssl","new_ssl:connect/4",
              "Opens an ssl connection to Host, Port. "],
             ["fun","ssl","new_ssl:close/1","Close a ssl connection"],
             ["fun","ssl","new_ssl:controlling_process/2",
              "Assigns a new controlling process to the\n\tssl-sock"],
             ["fun","ssl","new_ssl:connection_info/1",
              "Returns the negotiated protocol version and cipher"],
             ["fun","ssl","new_ssl:getopts/1",
              "Get the value of the specified options."],
             ["fun","ssl","new_ssl:getopts/2",
              "Get the value of the specified options."],
             ["fun","ssl","new_ssl:listen/2","Creates a ssl listen socket."],
             ["fun","ssl","new_ssl:peercert/1","Return the peer certificate."],
             ["fun","ssl","new_ssl:peercert/2","Return the peer certificate."],
             ["fun","ssl","new_ssl:peername/1",
              "Return peer address and port."],
             ["fun","ssl","new_ssl:recv/2","Receive data on a socket."],
             ["fun","ssl","new_ssl:recv/3","Receive data on a socket."],
             ["fun","ssl","new_ssl:send/2","Write data to a socket."],
             ["fun","ssl","new_ssl:setopts/2","Set socket options."],
             ["fun","ssl","new_ssl:shutdown/2","Immediately close a socket"],
             ["fun","ssl","new_ssl:ssl_accept/1",
              "Perform server-side SSL handshake"],
             ["fun","ssl","new_ssl:ssl_accept/2",
              "Perform server-side SSL handshake"],
             ["fun","ssl","new_ssl:ssl_accept/2",
              "Perform server-side SSL handshake"],
             ["fun","ssl","new_ssl:ssl_accept/3",
              "Perform server-side SSL handshake"],
             ["fun","ssl","new_ssl:sockname/1",
              "Return the local address and port."],
             ["fun","ssl","new_ssl:start/0","Starts the Ssl application. "],
             ["fun","ssl","new_ssl:start/1","Starts the Ssl application. "],
             ["fun","ssl","new_ssl:stop/0","Stops the Ssl application."],
             ["fun","ssl","new_ssl:transport_accept/1",
              "Accept an incoming connection and\n\tprepare for <c>"],
             ["fun","ssl","new_ssl:transport_accept/2",
              "Accept an incoming connection and\n\tprepare for <c>"],
             ["fun","ssl","new_ssl:versions/0",
              "Returns version information relevant for the\n\tssl "],
             ["fun","ssl","ssl:ciphers/0","Get supported ciphers."],
             ["fun","ssl","ssl:close/1",
              "Close a socket returned by <c>transport_accept/[1,"],
             ["fun","ssl","ssl:connect/3",
              "Connect to <c>Port</c>at <c>Address</c>."],
             ["fun","ssl","ssl:connect/4",
              "Connect to <c>Port</c>at <c>Address</c>."],
             ["fun","ssl","ssl:connection_info/1",
              "Get current protocol version and cipher."],
             ["fun","ssl","ssl:controlling_process/2",
              "Assign a new controlling process to the socket."],
             ["fun","ssl","ssl:format_error/1","Return an error string."],
             ["fun","ssl","ssl:getopts/2","Get options set for socket"],
             ["fun","ssl","ssl:listen/2",
              "Set up a socket to listen on a port on the local h"],
             ["fun","ssl","ssl:peercert/1","Return the peer certificate."],
             ["fun","ssl","ssl:peercert/2","Return the peer certificate."],
             ["fun","ssl","ssl:peername/1","Return peer address and port."],
             ["fun","ssl","ssl:pid/1","Return the pid of the socket process."],
             ["fun","ssl","ssl:recv/2","Receive data on socket."],
             ["fun","ssl","ssl:recv/3","Receive data on socket."],
             ["fun","ssl","ssl:seed/1","Seed the ssl random generator."],
             ["fun","ssl","ssl:send/2","Write data to a socket."],
             ["fun","ssl","ssl:setopts/2","Set socket options."],
             ["fun","ssl","ssl:ssl_accept/1",
              "Perform server-side SSL handshake and key exchange"],
             ["fun","ssl","ssl:ssl_accept/2",
              "Perform server-side SSL handshake and key exchange"],
             ["fun","ssl","ssl:sockname/1",
              "Return the local address and port."],
             ["fun","ssl","ssl:transport_accept/1",
              "Accept an incoming connection and prepare for <c>s"],
             ["fun","ssl","ssl:transport_accept/2",
              "Accept an incoming connection and prepare for <c>s"],
             ["fun","ssl","ssl:version/0","Return the version of SSL."],
             ["fun","ssh","ssh:close/1","Closes a ssh connection"],
             ["fun","ssh","ssh:connect/3","Connect to an ssh server."],
             ["fun","ssh","ssh:connect/4","Connect to an ssh server."],
             ["fun","ssh","ssh:connection_info/2",
              " Retrieves information about a connection. "],
             ["fun","ssh","ssh:daemon/1",
              "Starts a server listening for SSH connections \n   "],
             ["fun","ssh","ssh:daemon/2",
              "Starts a server listening for SSH connections \n   "],
             ["fun","ssh","ssh:daemon/3",
              "Starts a server listening for SSH connections \n   "],
             ["fun","ssh","ssh:shell/1",[]],
             ["fun","ssh","ssh:shell/2",[]],
             ["fun","ssh","ssh:shell/3",[]],
             ["fun","ssh","ssh:start/0","Starts the Ssh application. "],
             ["fun","ssh","ssh:start/1","Starts the Ssh application. "],
             ["fun","ssh","ssh:stop/0","Stops the Ssh application."],
             ["fun","ssh","ssh:stop_daemon/1",
              "Stops the listener and all connections started by "],
             ["fun","ssh","ssh:stop_daemon/2",
              "Stops the listener and all connections started by "],
             ["fun","ssh","ssh:stop_listener/1",
              "Stops the listener, but leaves existing connection"],
             ["fun","ssh","ssh:stop_listener/2",
              "Stops the listener, but leaves existing connection"],
             ["fun","ssh","ssh_channel:call/2",
              " Makes a synchronous call to a channel."],
             ["fun","ssh","ssh_channel:call/3",
              " Makes a synchronous call to a channel."],
             ["fun","ssh","ssh_channel:cast/2",
              "Sends an asynchronous message to the channel\n\tChan"],
             ["fun","ssh","ssh_channel:enter_loop/1",
              " Makes an existing process into a ssh_channel proc"],
             ["fun","ssh","ssh_channel:init/1",
              " Initiates a ssh_channel process."],
             ["fun","ssh","ssh_channel:reply/2","Send a reply to a client."],
             ["fun","ssh","ssh_channel:start/4",
              " Starts a processes that handles a ssh channel. "],
             ["fun","ssh","ssh_channel:start_link/4",
              " Starts a processes that handles a ssh channel. "],
             ["fun","ssh","ssh_connection:adjust_window/3",
              "Adjusts the ssh flowcontrol window. "],
             ["fun","ssh","ssh_connection:close/2",
              "Sends a close message on the channel <c>ChannelId<"],
             ["fun","ssh","ssh_connection:exec/4",
              "Will request that the server start the\n     execut"],
             ["fun","ssh","ssh_connection:exit_status/3",
              "Sends the exit status of a command to the client."],
             ["fun","ssh","ssh_connection:reply_request/4",
              "Send status replies to requests that want such rep"],
             ["fun","ssh","ssh_connection:send/3","Sends channel data "],
             ["fun","ssh","ssh_connection:send/4","Sends channel data "],
             ["fun","ssh","ssh_connection:send/4","Sends channel data "],
             ["fun","ssh","ssh_connection:send/5","Sends channel data "],
             ["fun","ssh","ssh_connection:send_eof/2",
              "Sends eof on the channel <c>ChannelId</c>.  "],
             ["fun","ssh","ssh_connection:session_channel/2",
              "Opens a channel for a ssh session. A session is a\n"],
             ["fun","ssh","ssh_connection:session_channel/4",
              "Opens a channel for a ssh session. A session is a\n"],
             ["fun","ssh","ssh_connection:setenv/5",
              " Environment variables may be passed to the\n      "],
             ["fun","ssh","ssh_connection:shell/2",
              " Will request that the user's default shell (typic"],
             ["fun","ssh","ssh_connection:subsystem/4",[]],
             ["fun","ssh","ssh_sftp:start_channel/1","Starts a sftp client"],
             ["fun","ssh","ssh_sftp:start_channel/2","Starts a sftp client"],
             ["fun","ssh","ssh_sftp:start_channel/2","Starts a sftp client"],
             ["fun","ssh","ssh_sftp:start_channel/3","Starts a sftp client"],
             ["fun","ssh","ssh_sftp:stop_channel/1",
              "Stops the sftp client channel."],
             ["fun","ssh","ssh_sftp:read_file/2","Read a file"],
             ["fun","ssh","ssh_sftp:read_file/3","Read a file"],
             ["fun","ssh","ssh_sftp:write_file/3","Write a file"],
             ["fun","ssh","ssh_sftp:write_file/4","Write a file"],
             ["fun","ssh","ssh_sftp:list_dir/2","List directory"],
             ["fun","ssh","ssh_sftp:list_dir/3","List directory"],
             ["fun","ssh","ssh_sftp:open/3","Open a file and return a handle"],
             ["fun","ssh","ssh_sftp:open/4","Open a file and return a handle"],
             ["fun","ssh","ssh_sftp:opendir/2",
              "Open a directory and return a handle"],
             ["fun","ssh","ssh_sftp:opendir/3",
              "Open a directory and return a handle"],
             ["fun","ssh","ssh_sftp:close/2","Close an open handle"],
             ["fun","ssh","ssh_sftp:close/3","Close an open handle"],
             ["fun","ssh","ssh_sftp:read/3","Read from an open file"],
             ["fun","ssh","ssh_sftp:read/4","Read from an open file"],
             ["fun","ssh","ssh_sftp:pread/4","Read from an open file"],
             ["fun","ssh","ssh_sftp:pread/5","Read from an open file"],
             ["fun","ssh","ssh_sftp:aread/3",
              "Read asynchronously from an open file"],
             ["fun","ssh","ssh_sftp:apread/4",
              "Read asynchronously from an open file"],
             ["fun","ssh","ssh_sftp:write/3","Write to an open file"],
             ["fun","ssh","ssh_sftp:write/4","Write to an open file"],
             ["fun","ssh","ssh_sftp:pwrite/4","Write to an open file"],
             ["fun","ssh","ssh_sftp:pwrite/5","Write to an open file"],
             ["fun","ssh","ssh_sftp:awrite/3",
              "Write asynchronously to an open file"],
             ["fun","ssh","ssh_sftp:apwrite/4",
              "Write asynchronously to an open file"],
             ["fun","ssh","ssh_sftp:position/3","Seek position in open file"],
             ["fun","ssh","ssh_sftp:position/4","Seek position in open file"],
             ["fun","ssh","ssh_sftp:read_file_info/2",
              "Get information about a file"],
             ["fun","ssh","ssh_sftp:read_file_info/3",
              "Get information about a file"],
             ["fun","ssh","ssh_sftp:read_link_info/2",
              "Get information about a symbolic link"],
             ["fun","ssh","ssh_sftp:read_link_info/3",
              "Get information about a symbolic link"],
             ["fun","ssh","ssh_sftp:write_file_info/3",
              "Write information for a file"],
             ["fun","ssh","ssh_sftp:write_file_info/4",
              "Write information for a file"],
             ["fun","ssh","ssh_sftp:read_link/2","Read symbolic link"],
             ["fun","ssh","ssh_sftp:read_link/3","Read symbolic link"],
             ["fun","ssh","ssh_sftp:make_symlink/3","Create symbolic link"],
             ["fun","ssh","ssh_sftp:make_symlink/4","Create symbolic link"],
             ["fun","ssh","ssh_sftp:rename/3","Rename a file"],
             ["fun","ssh","ssh_sftp:rename/4","Rename a file"],
             ["fun","ssh","ssh_sftp:delete/2","Delete a file"],
             ["fun","ssh","ssh_sftp:delete/3","Delete a file"],
             ["fun","ssh","ssh_sftp:make_dir/2","Create a directory"],
             ["fun","ssh","ssh_sftp:make_dir/3","Create a directory"],
             ["fun","ssh","ssh_sftp:del_dir/2","Delete an empty directory"],
             ["fun","ssh","ssh_sftp:del_dir/3","Delete an empty directory"],
             ["fun","ssh","ssh_sftpd:subsystem_spec/1",
              "Returns the subsystem specification that allows an"],
             ["fun","snmp","snmp:config/0",
              "Configure with a simple interactive tool"],
             ["fun","snmp","snmp:start/0","Start the SNMP application"],
             ["fun","snmp","snmp:start/1","Start the SNMP application"],
             ["fun","snmp","snmp:start_agent/0",
              "Start the agent part of the SNMP application"],
             ["fun","snmp","snmp:start_agent/1",
              "Start the agent part of the SNMP application"],
             ["fun","snmp","snmp:start_manager/0",
              "Start the manager part of the SNMP application"],
             ["fun","snmp","snmp:start_manager/1",
              "Start the manager part of the SNMP application"],
             ["fun","snmp","snmp:date_and_time/0",
              "Return the current date and time as an OCTET STRIN"],
             ["fun","snmp","snmp:date_and_time_to_universal_time_dst/1",
              "Convert a DateAndTime value to a list of possible "],
             ["fun","snmp","snmp:date_and_time_to_string/1",
              "Convert a DateAndTime value to a string"],
             ["fun","snmp","snmp:date_and_time_to_string/2",
              "Convert a DateAndTime value to a string"],
             ["fun","snmp","snmp:date_and_time_to_string2/1",
              "Convert a DateAndTime value to a string"],
             ["fun","snmp","snmp:local_time_to_date_and_time_dst/1",
              "Convert a Local time value to a list of possible D"],
             ["fun","snmp","snmp:universal_time_to_date_and_time/1",
              "Convert a UTC value to DateAndTime"],
             ["fun","snmp","snmp:validate_date_and_time/1",
              "Check if a DateAndTime value is correct"],
             ["fun","snmp","snmp:validate_date_and_time/2",
              "Check if a DateAndTime value is correct"],
             ["fun","snmp","snmp:passwd2localized_key/3",
              "Generates an localized key"],
             ["fun","snmp","snmp:octet_string_to_bits/1",
              "Convert an OCTET-STRING to BITS"],
             ["fun","snmp","snmp:bits_to_octet_string/1",
              "Convert an OCTET-STRING to BITS"],
             ["fun","snmp","snmp:read_mib/1",[]],
             ["fun","snmp","snmp:log_to_txt/5",
              "Convert an Audit Trail Log to text format"],
             ["fun","snmp","snmp:log_to_txt/6",
              "Convert an Audit Trail Log to text format"],
             ["fun","snmp","snmp:log_to_txt/7",
              "Convert an Audit Trail Log to text format"],
             ["fun","snmp","snmp:change_log_size/2",
              "Change the size of the Audit Trail Log"],
             ["fun","snmp","snmp:print_version_info/0",
              "Formatted print of result of the versions function"],
             ["fun","snmp","snmp:print_version_info/1",
              "Formatted print of result of the versions function"],
             ["fun","snmp","snmp:versions1/0",
              "Retrieve various system and application info"],
             ["fun","snmp","snmp:versions2/0",
              "Retrieve various system and application info"],
             ["fun","snmp","snmp:print_versions/1",
              "Formatted print of result of the versions function"],
             ["fun","snmp","snmp:print_versions/2",
              "Formatted print of result of the versions function"],
             ["fun","snmp","snmp:enable_trace/0","Starts a tracer"],
             ["fun","snmp","snmp:disable_trace/0","Stop the tracer"],
             ["fun","snmp","snmp:set_trace/1","Set trace target"],
             ["fun","snmp","snmp:reset_trace/1","Reset trace target"],
             ["fun","snmp","snmp:set_trace/2","Set trace target"],
             ["fun","snmp","snmp_community_mib:configure/1",
              "Configure the SNMP-COMMUNITY-MIB"],
             ["fun","snmp","snmp_community_mib:reconfigure/1",
              "Configure the SNMP-COMMUNITY-MIB"],
             ["fun","snmp","snmp_community_mib:add_community/5",
              "Added one community"],
             ["fun","snmp","snmp_community_mib:delete_community/1",
              "Delete one community"],
             ["fun","snmp","snmp_framework_mib:configure/1",
              "Configure the SNMP-FRAMEWORK-MIB"],
             ["fun","snmp","snmp_framework_mib:init/0",
              "Initialize the SNMP-FRAMEWORK-MIB"],
             ["fun","snmp","snmp_framework_mib:add_context/1",
              "Added one context"],
             ["fun","snmp","snmp_framework_mib:delete_context/1",
              "Delete one context"],
             ["fun","snmp","snmp_generic:get_status_col/2",
              "Get the value of the status column from <c>Cols</c"],
             ["fun","snmp","snmp_generic:get_status_col/2",
              "Get the value of the status column from <c>Cols</c"],
             ["fun","snmp","snmp_generic:get_index_types/1",
              "Get the index types of <c>Name</c>"],
             ["fun","snmp","snmp_generic:table_func/2",
              "Default instrumentation function for tables"],
             ["fun","snmp","snmp_generic:table_func/4",
              "Default instrumentation function for tables"],
             ["fun","snmp","snmp_generic:table_get_elements/3",
              "Get elements in a table row"],
             ["fun","snmp","snmp_generic:table_next/2",
              "Find the next row in the table"],
             ["fun","snmp","snmp_generic:table_row_exists/2",
              "Check if a row in a table exists"],
             ["fun","snmp","snmp_generic:table_set_elements/3",
              "Set elements in a table row"],
             ["fun","snmp","snmp_generic:variable_func/2",
              "Default instrumentation function for tables"],
             ["fun","snmp","snmp_generic:variable_func/3",
              "Default instrumentation function for tables"],
             ["fun","snmp","snmp_generic:variable_get/1",
              "Get the value of a variable"],
             ["fun","snmp","snmp_generic:variable_set/2",
              "Set a value for a variable"],
             ["fun","snmp","snmp_index:delete/1","Delete an index table"],
             ["fun","snmp","snmp_index:delete/2",
              "Delete an item from the index"],
             ["fun","snmp","snmp_index:get/2",
              "Get the item with <c>KeyOid</c>"],
             ["fun","snmp","snmp_index:get_last/1",
              "Get the last item in the index structure"],
             ["fun","snmp","snmp_index:get_next/2","Get the next item"],
             ["fun","snmp","snmp_index:insert/3",
              "Insert an item into the index"],
             ["fun","snmp","snmp_index:key_to_oid/2",
              "Convert a key to an OBJECT IDENTIFIER"],
             ["fun","snmp","snmp_index:new/1",
              "Create a new snmp index structure"],
             ["fun","snmp","snmp_notification_mib:configure/1",
              "Configure the SNMP-NOTIFICATION-MIB"],
             ["fun","snmp","snmp_notification_mib:reconfigure/1",
              "Configure the SNMP-NOTIFICATION-MIB"],
             ["fun","snmp","snmp_notification_mib:add_notify/3",
              "Added one notify definition"],
             ["fun","snmp","snmp_notification_mib:delete_notify/1",
              "Delete one notify definition"],
             ["fun","snmp","snmp_pdus:dec_message/1","Decode an SNMP Message"],
             ["fun","snmp","snmp_pdus:dec_message_only/1",
              "Decode an SNMP Message, but not the data part"],
             ["fun","snmp","snmp_pdus:dec_pdu/1","Decode an SNMP Pdu"],
             ["fun","snmp","snmp_pdus:dec_scoped_pdu/1",
              "Decode an SNMP ScopedPdu"],
             ["fun","snmp","snmp_pdus:dec_scoped_pdu_data/1",
              "Decode an SNMP ScopedPduData"],
             ["fun","snmp","snmp_pdus:dec_usm_security_parameters/1",
              "Decode SNMP UsmSecurityParameters"],
             ["fun","snmp","snmp_pdus:enc_encrypted_scoped_pdu/1",
              "Encode an encrypted SNMP scopedPDU"],
             ["fun","snmp","snmp_pdus:enc_message/1","Encode an SNMP Message"],
             ["fun","snmp","snmp_pdus:enc_message_only/1",
              "Encode an SNMP Message, but not the data part"],
             ["fun","snmp","snmp_pdus:enc_pdu/1","Encode an SNMP Pdu"],
             ["fun","snmp","snmp_pdus:enc_scoped_pdu/1",
              "Encode an SNMP scopedPDU"],
             ["fun","snmp","snmp_pdus:enc_usm_security_parameters/1",
              "Encode SNMP UsmSecurityParameters"],
             ["fun","snmp","snmp_standard_mib:configure/1",
              "Configure the STANDARD-MIB and SNMPv2-MIB"],
             ["fun","snmp","snmp_standard_mib:inc/1",
              "Increment a variable in the MIB"],
             ["fun","snmp","snmp_standard_mib:inc/2",
              "Increment a variable in the MIB"],
             ["fun","snmp","snmp_standard_mib:reconfigure/1",
              "Configure the STANDARD-MIB and SNMPv2-MIB"],
             ["fun","snmp","snmp_standard_mib:reset/0",
              "Reset all <c>snmp</c>counters to 0"],
             ["fun","snmp","snmp_standard_mib:sys_up_time/0",
              "Get the system up time"],
             ["fun","snmp","snmp_target_mib:configure/1",
              "Configure the SNMP-TARGET-MIB"],
             ["fun","snmp","snmp_target_mib:reconfigure/1",
              "Configure the SNMP-TARGET-MIB"],
             ["fun","snmp","snmp_target_mib:set_target_engine_id/2",
              "Set the engine id for a targetAddr row."],
             ["fun","snmp","snmp_target_mib:add_addr/10",
              "Add one target address definition"],
             ["fun","snmp","snmp_target_mib:delete_addr/1",
              "Delete one target address definition"],
             ["fun","snmp","snmp_target_mib:add_params/5",
              "Add one target parameter definition"],
             ["fun","snmp","snmp_target_mib:delete_params/1",
              "Delete one target parameter definition"],
             ["fun","snmp","snmp_user_based_sm_mib:configure/1",
              "Configure the SNMP-USER-BASED-SM-MIB"],
             ["fun","snmp","snmp_user_based_sm_mib:reconfigure/1",
              "Configure the SNMP-USER-BASED-SM-MIB"],
             ["fun","snmp","snmp_user_based_sm_mib:add_user/13",
              "Add one user"],
             ["fun","snmp","snmp_user_based_sm_mib:delete_user/1",
              "Delete one user"],
             ["fun","snmp","snmp_view_based_acm_mib:configure/1",
              "Configure the SNMP-VIEW-BASED-ACM-MIB"],
             ["fun","snmp","snmp_view_based_acm_mib:reconfigure/1",
              "Configure the SNMP-VIEW-BASED-ACM-MIB"],
             ["fun","snmp","snmp_view_based_acm_mib:add_sec2group/3",
              "Add one security to group definition"],
             ["fun","snmp","snmp_view_based_acm_mib:delete_sec2group/1",
              "Delete one security to group definition"],
             ["fun","snmp","snmp_view_based_acm_mib:add_access/8",
              "Add one access definition"],
             ["fun","snmp","snmp_view_based_acm_mib:delete_access/1",
              "Delete one access definition"],
             ["fun","snmp","snmp_view_based_acm_mib:add_view_tree_fam/4",
              "Add one view tree family definition"],
             ["fun","snmp","snmp_view_based_acm_mib:delete_view_tree_fam/1",
              "Delete one view tree family definition"],
             ["fun","snmp","snmpa:add_agent_caps/2",
              "Add an AGENT-CAPABILITY definition to the agent"],
             ["fun","snmp","snmpa:del_agent_caps/1",
              "Delete an AGENT-CAPABILITY definition from the age"],
             ["fun","snmp","snmpa:get_agent_caps/0",
              "Return all AGENT-CAPABILITY definitions in the age"],
             ["fun","snmp","snmpa:get/2",
              "Perform a get operation on the agent"],
             ["fun","snmp","snmpa:get/3",
              "Perform a get operation on the agent"],
             ["fun","snmp","snmpa:get_next/2",
              "Perform a get-next operation on the agent"],
             ["fun","snmp","snmpa:get_next/3",
              "Perform a get-next operation on the agent"],
             ["fun","snmp","snmpa:backup/1","Backup agent data"],
             ["fun","snmp","snmpa:backup/2","Backup agent data"],
             ["fun","snmp","snmpa:info/0",
              "Return information about the agent"],
             ["fun","snmp","snmpa:info/1",
              "Return information about the agent"],
             ["fun","snmp","snmpa:old_info_format/1",
              "Return information about the agent"],
             ["fun","snmp","snmpa:load_mibs/1","Load MIBs into the agent"],
             ["fun","snmp","snmpa:load_mibs/2","Load MIBs into the agent"],
             ["fun","snmp","snmpa:unload_mibs/1","Unload MIBs from the agent"],
             ["fun","snmp","snmpa:unload_mibs/2","Unload MIBs from the agent"],
             ["fun","snmp","snmpa:which_mibs/0",
              "Get a list of all the loaded mibs"],
             ["fun","snmp","snmpa:which_mibs/1",
              "Get a list of all the loaded mibs"],
             ["fun","snmp","snmpa:whereis_mib/1",
              "Get the path to the mib file"],
             ["fun","snmp","snmpa:whereis_mib/2",
              "Get the path to the mib file"],
             ["fun","snmp","snmpa:current_request_id/0",
              "Get the request-id, context, community and address"],
             ["fun","snmp","snmpa:current_context/0",
              "Get the request-id, context, community and address"],
             ["fun","snmp","snmpa:current_community/0",
              "Get the request-id, context, community and address"],
             ["fun","snmp","snmpa:current_address/0",
              "Get the request-id, context, community and address"],
             ["fun","snmp","snmpa:enum_to_int/2",
              "Convert an enum value to an integer"],
             ["fun","snmp","snmpa:enum_to_int/3",
              "Convert an enum value to an integer"],
             ["fun","snmp","snmpa:int_to_enum/2",
              "Convert an integer to an enum value"],
             ["fun","snmp","snmpa:int_to_enum/3",
              "Convert an integer to an enum value"],
             ["fun","snmp","snmpa:name_to_oid/1",
              "Convert a symbolic name to an OID"],
             ["fun","snmp","snmpa:name_to_oid/2",
              "Convert a symbolic name to an OID"],
             ["fun","snmp","snmpa:oid_to_name/1",
              "Convert an OID to a symbolic name"],
             ["fun","snmp","snmpa:oid_to_name/2",
              "Convert an OID to a symbolic name"],
             ["fun","snmp","snmpa:which_aliasnames/0",
              "Get all alias-names known to the agent"],
             ["fun","snmp","snmpa:which_tables/0",
              "Get all tables known to the agent"],
             ["fun","snmp","snmpa:which_variables/0",
              "Get all variables known to the agent"],
             ["fun","snmp","snmpa:which_notifications/0",
              "Get all notifications known to the agent"],
             ["fun","snmp","snmpa:log_to_txt/2",
              "Convert an Audit Trail Log to text format"],
             ["fun","snmp","snmpa:log_to_txt/3",
              "Convert an Audit Trail Log to text format"],
             ["fun","snmp","snmpa:log_to_txt/4",
              "Convert an Audit Trail Log to text format"],
             ["fun","snmp","snmpa:log_to_txt/5",
              "Convert an Audit Trail Log to text format"],
             ["fun","snmp","snmpa:log_to_txt/6",
              "Convert an Audit Trail Log to text format"],
             ["fun","snmp","snmpa:log_to_txt/7",
              "Convert an Audit Trail Log to text format"],
             ["fun","snmp","snmpa:change_log_size/1",
              "Change the size of the Audit Trail Log"],
             ["fun","snmp","snmpa:set_log_type/1",
              "Change the type of the Audit Trail Log"],
             ["fun","snmp","snmpa:set_log_type/2",
              "Change the type of the Audit Trail Log"],
             ["fun","snmp","snmpa:mib_of/1","Which mib an Oid belongs to"],
             ["fun","snmp","snmpa:mib_of/2","Which mib an Oid belongs to"],
             ["fun","snmp","snmpa:me_of/1","Retrieve the mib-entry of an Oid"],
             ["fun","snmp","snmpa:me_of/2","Retrieve the mib-entry of an Oid"],
             ["fun","snmp","snmpa:invalidate_mibs_cache/0",
              "Invalidate the mib server cache"],
             ["fun","snmp","snmpa:invalidate_mibs_cache/1",
              "Invalidate the mib server cache"],
             ["fun","snmp","snmpa:enable_mibs_cache/0",
              "Enable the mib server cache"],
             ["fun","snmp","snmpa:enable_mibs_cache/1",
              "Enable the mib server cache"],
             ["fun","snmp","snmpa:disable_mibs_cache/0",
              "Disable the mib server cache"],
             ["fun","snmp","snmpa:disable_mibs_cache/1",
              "Disable the mib server cache"],
             ["fun","snmp","snmpa:gc_mibs_cache/0",
              "Perform mib server cache gc"],
             ["fun","snmp","snmpa:gc_mibs_cache/1",
              "Perform mib server cache gc"],
             ["fun","snmp","snmpa:gc_mibs_cache/1",
              "Perform mib server cache gc"],
             ["fun","snmp","snmpa:gc_mibs_cache/2",
              "Perform mib server cache gc"],
             ["fun","snmp","snmpa:gc_mibs_cache/2",
              "Perform mib server cache gc"],
             ["fun","snmp","snmpa:gc_mibs_cache/3",
              "Perform mib server cache gc"],
             ["fun","snmp","snmpa:enable_mibs_cache_autogc/0",
              "Enable automatic gc of the mib server cache"],
             ["fun","snmp","snmpa:enable_mibs_cache_autogc/1",
              "Enable automatic gc of the mib server cache"],
             ["fun","snmp","snmpa:disable_mibs_cache_autogc/0",
              "Disable automatic gc of the mib server cache"],
             ["fun","snmp","snmpa:disable_mibs_cache_autogc/1",
              "Disable automatic gc of the mib server cache"],
             ["fun","snmp","snmpa:update_mibs_cache_age/1",
              "Change the mib server cache age property"],
             ["fun","snmp","snmpa:update_mibs_cache_age/2",
              "Change the mib server cache age property"],
             ["fun","snmp","snmpa:update_mibs_cache_gclimit/1",
              "Change the mib server cache gclimit property"],
             ["fun","snmp","snmpa:update_mibs_cache_gclimit/2",
              "Change the mib server cache gclimit property"],
             ["fun","snmp","snmpa:register_notification_filter/3",
              "Register a notification filter"],
             ["fun","snmp","snmpa:register_notification_filter/4",
              "Register a notification filter"],
             ["fun","snmp","snmpa:register_notification_filter/4",
              "Register a notification filter"],
             ["fun","snmp","snmpa:register_notification_filter/5",
              "Register a notification filter"],
             ["fun","snmp","snmpa:unregister_notification_filter/1",
              "Unregister a notification filter"],
             ["fun","snmp","snmpa:unregister_notification_filter/2",
              "Unregister a notification filter"],
             ["fun","snmp","snmpa:which_notification_filter/0",
              "Which notification filter"],
             ["fun","snmp","snmpa:which_notification_filter/1",
              "Which notification filter"],
             ["fun","snmp","snmpa:set_request_limit/1",
              "Change the request limit"],
             ["fun","snmp","snmpa:set_request_limit/2",
              "Change the request limit"],
             ["fun","snmp","snmpa:register_subagent/3",
              "Register a sub-agent under a sub-tree"],
             ["fun","snmp","snmpa:unregister_subagent/2",
              "Unregister a sub-agent"],
             ["fun","snmp","snmpa:send_notification/3","Send a notification"],
             ["fun","snmp","snmpa:send_notification/4","Send a notification"],
             ["fun","snmp","snmpa:send_notification/5","Send a notification"],
             ["fun","snmp","snmpa:send_notification/6","Send a notification"],
             ["fun","snmp","snmpa:send_trap/3","Send a trap"],
             ["fun","snmp","snmpa:send_trap/4","Send a trap"],
             ["fun","snmp","snmpa:discovery/2",
              "Initiate the discovery process with a manager"],
             ["fun","snmp","snmpa:discovery/3",
              "Initiate the discovery process with a manager"],
             ["fun","snmp","snmpa:discovery/3",
              "Initiate the discovery process with a manager"],
             ["fun","snmp","snmpa:discovery/4",
              "Initiate the discovery process with a manager"],
             ["fun","snmp","snmpa:discovery/4",
              "Initiate the discovery process with a manager"],
             ["fun","snmp","snmpa:discovery/5",
              "Initiate the discovery process with a manager"],
             ["fun","snmp","snmpa:discovery/6",
              "Initiate the discovery process with a manager"],
             ["fun","snmp","snmpa:convert_config/1",
              "Convert old snmp config to new agent config"],
             ["fun","snmp","snmpa:restart_worker/0",
              "Restart the worker process of a multi-threaded age"],
             ["fun","snmp","snmpa:restart_worker/1",
              "Restart the worker process of a multi-threaded age"],
             ["fun","snmp","snmpa:restart_set_worker/0",
              "Restart the set worker process of a multi-threaded"],
             ["fun","snmp","snmpa:restart_set_worker/1",
              "Restart the set worker process of a multi-threaded"],
             ["fun","snmp","snmpa:verbosity/2",
              "Assign a new verbosity for the process"],
             ["fun","snmp","snmpa_conf:agent_entry/2","Create an agent entry"],
             ["fun","snmp","snmpa_conf:write_agent_config/2",
              "Write the agent config to the config file"],
             ["fun","snmp","snmpa_conf:write_agent_config/3",
              "Write the agent config to the config file"],
             ["fun","snmp","snmpa_conf:append_agent_config/2",
              "Append the agent config to the config file"],
             ["fun","snmp","snmpa_conf:read_agent_config/1",
              "Read the agent config from the config file"],
             ["fun","snmp","snmpa_conf:standard_entry/2",
              "Create an standard entry"],
             ["fun","snmp","snmpa_conf:write_standard_config/2",
              "Write the agent standard config to the config file"],
             ["fun","snmp","snmpa_conf:write_standard_config/3",
              "Write the agent standard config to the config file"],
             ["fun","snmp","snmpa_conf:append_standard_config/2",
              "Append the agent standard config to the config fil"],
             ["fun","snmp","snmpa_conf:read_standard_config/1",
              "Read the agent standard config from the config fil"],
             ["fun","snmp","snmpa_conf:context_entry/1",
              "Create an context entry"],
             ["fun","snmp","snmpa_conf:write_context_config/2",
              "Write the agent context(s) to the config file"],
             ["fun","snmp","snmpa_conf:write_context_config/3",
              "Write the agent context(s) to the config file"],
             ["fun","snmp","snmpa_conf:append_context_config/2",
              "Append the agent context(s) to the config file"],
             ["fun","snmp","snmpa_conf:read_context_config/1",
              "Read the agent context config from the config file"],
             ["fun","snmp","snmpa_conf:community_entry/1",
              "Create an community entry"],
             ["fun","snmp","snmpa_conf:community_entry/5",
              "Create an community entry"],
             ["fun","snmp","snmpa_conf:write_community_config/2",
              "Write the agent community config to the config fil"],
             ["fun","snmp","snmpa_conf:write_community_config/3",
              "Write the agent community config to the config fil"],
             ["fun","snmp","snmpa_conf:append_community_config/2",
              "Append the agent community config to the config fi"],
             ["fun","snmp","snmpa_conf:read_community_config/1",
              "Read the agent community config from the config fi"],
             ["fun","snmp","snmpa_conf:target_addr_entry/5",
              "Create an target_addr entry"],
             ["fun","snmp","snmpa_conf:target_addr_entry/6",
              "Create an target_addr entry"],
             ["fun","snmp","snmpa_conf:target_addr_entry/8",
              "Create an target_addr entry"],
             ["fun","snmp","snmpa_conf:target_addr_entry/10",
              "Create an target_addr entry"],
             ["fun","snmp","snmpa_conf:write_target_addr_config/2",
              "Write the agent target_addr config to the config f"],
             ["fun","snmp","snmpa_conf:write_target_addr_config/3",
              "Write the agent target_addr config to the config f"],
             ["fun","snmp","snmpa_conf:append_target_addr_config/2",
              "Append the agent target_addr config to the config "],
             ["fun","snmp","snmpa_conf:read_target_addr_config/1",
              "Read the agent target_addr config from the config "],
             ["fun","snmp","snmpa_conf:target_params_entry/2",
              "Create an target_params entry"],
             ["fun","snmp","snmpa_conf:target_params_entry/4",
              "Create an target_params entry"],
             ["fun","snmp","snmpa_conf:target_params_entry/5",
              "Create an target_params entry"],
             ["fun","snmp","snmpa_conf:write_target_params_config/2",
              "Write the agent target_params config to the config"],
             ["fun","snmp","snmpa_conf:write_target_params_config/3",
              "Write the agent target_params config to the config"],
             ["fun","snmp","snmpa_conf:append_target_params_config/2",
              "Append the agent target_params config to the confi"],
             ["fun","snmp","snmpa_conf:read_target_params_config/1",
              "Read the agent target_params config from the confi"],
             ["fun","snmp","snmpa_conf:vacm_s2g_entry/3",
              "Create an vacm entry"],
             ["fun","snmp","snmpa_conf:vacm_acc_entry/8",
              "Create an vacm entry"],
             ["fun","snmp","snmpa_conf:vacm_vtf_entry/2",
              "Create an vacm entry"],
             ["fun","snmp","snmpa_conf:vacm_vtf_entry/4",
              "Create an vacm entry"],
             ["fun","snmp","snmpa_conf:write_vacm_config/2",
              "Write the agent vacm config to the config file"],
             ["fun","snmp","snmpa_conf:write_vacm_config/3",
              "Write the agent vacm config to the config file"],
             ["fun","snmp","snmpa_conf:append_vacm_config/2",
              "Append the agent vacm config to the config file"],
             ["fun","snmp","snmpa_conf:read_vacm_config/1",
              "Read the agent vacm config from the config file"],
             ["fun","snmp","snmpa_conf:usm_entry/1","Create an usm entry"],
             ["fun","snmp","snmpa_conf:usm_entry/13","Create an usm entry"],
             ["fun","snmp","snmpa_conf:write_usm_config/2",
              "Write the agent usm config to the config file"],
             ["fun","snmp","snmpa_conf:write_usm_config/3",
              "Write the agent usm config to the config file"],
             ["fun","snmp","snmpa_conf:append_usm_config/2",
              "Append the agent usm config to the config file"],
             ["fun","snmp","snmpa_conf:read_usm_config/1",
              "Read the agent usm config from the config file"],
             ["fun","snmp","snmpa_conf:notify_entry/3",
              "Create an notify entry"],
             ["fun","snmp","snmpa_conf:write_notify_config/2",
              "Write the agent notify config to the config file"],
             ["fun","snmp","snmpa_conf:write_notify_config/3",
              "Write the agent notify config to the config file"],
             ["fun","snmp","snmpa_conf:append_notify_config/2",
              "Append the agent notify config to the config file"],
             ["fun","snmp","snmpa_conf:read_notify_config/1",
              "Read the agent notify config from the config file"],
             ["fun","snmp","snmpa_discovery_handler:stage1_finish/3",
              "Discovery stage 1 finish"],
             ["fun","snmp","snmpa_error:config_err/2",
              "Called if a configuration error occurs"],
             ["fun","snmp","snmpa_error:user_err/2",
              "Called if a user related error occurs"],
             ["fun","snmp","snmpa_error_io:config_err/2",
              "Called if a configuration error occurs"],
             ["fun","snmp","snmpa_error_io:user_err/2",
              "Called if a user related error occurs"],
             ["fun","snmp","snmpa_error_logger:config_err/2",
              "Called if a configuration error occurs"],
             ["fun","snmp","snmpa_error_logger:user_err/2",
              "Called if a user related error occurs"],
             ["fun","snmp","snmpa_error_report:config_err/2",
              "Called if a configuration error occurs"],
             ["fun","snmp","snmpa_error_report:user_err/2",
              "Called if a user related error occurs"],
             ["fun","snmp","snmpa_local_db:dump/0",
              "Dump the database to disk"],
             ["fun","snmp","snmpa_local_db:match/2",
              "Perform a match on the table"],
             ["fun","snmp","snmpa_local_db:print/0",
              "Print the database to screen"],
             ["fun","snmp","snmpa_local_db:print/1",
              "Print the database to screen"],
             ["fun","snmp","snmpa_local_db:print/2",
              "Print the database to screen"],
             ["fun","snmp","snmpa_local_db:table_create/1","Create a table"],
             ["fun","snmp","snmpa_local_db:table_create_row/3",
              "Create a row in a table"],
             ["fun","snmp","snmpa_local_db:table_delete/1","Delete a table"],
             ["fun","snmp","snmpa_local_db:table_delete_row/2",
              "Delete the row in the table"],
             ["fun","snmp","snmpa_local_db:table_exists/1",
              "Check if a table exists"],
             ["fun","snmp","snmpa_local_db:table_get_row/2",
              "Get a row from the table"],
             ["fun","snmp","snmpa_mpd:init/1","Initialize the MPD module"],
             ["fun","snmp","snmpa_mpd:process_packet/4",
              "Process a packet received from the network"],
             ["fun","snmp","snmpa_mpd:generate_response_msg/4",
              "Generate a response packet to be sent to the netwo"],
             ["fun","snmp","snmpa_mpd:generate_msg/4",
              "Generate a request message to be sent to the netwo"],
             ["fun","snmp","snmpa_mpd:discarded_pdu/1",
              "Increment the variable associated with a discarded"],
             ["fun","snmp","snmpa_network_interface:start_link/4",
              "Start-link the network interface process"],
             ["fun","snmp","snmpa_network_interface:info/1",
              "Return information about the running network inter"],
             ["fun","snmp","snmpa_network_interface:verbosity/2",
              "Change the verbosity of a running network interfac"],
             ["fun","snmp","snmpa_network_interface:get_log_type/1",
              "Get the Audit Trail Log type"],
             ["fun","snmp","snmpa_network_interface:set_log_type/2",
              "Change the Audit Trail Log type"],
             ["fun","snmp","snmpa_network_interface_filter:accept_recv/2",
              "Shall the received message be accepted"],
             ["fun","snmp","snmpa_network_interface_filter:accept_send/2",
              "Shall the message be sent"],
             ["fun","snmp","snmpa_network_interface_filter:accept_recv_pdu/3",
              "Shall the received pdu be accepted"],
             ["fun","snmp","snmpa_network_interface_filter:accept_send_pdu/2",
              "Shall the pdu be sent"],
             ["fun","snmp",
              "snmpa_notification_delivery_info_receiver:delivery_targets/3",
              "Inform about target addresses"],
             ["fun","snmp",
              "snmpa_notification_delivery_info_receiver:delivery_info/4",
              "Inform about delivery result"],
             ["fun","snmp","snmpa_notification_filter:handle_notification/2",
              "Handle a notification"],
             ["fun","snmp","snmpa_supervisor:start_sub_sup/1",
              "Start the SNMP supervisor for sub-agents only"],
             ["fun","snmp","snmpa_supervisor:start_master_sup/1",
              "Start the SNMP supervisor for all agents"],
             ["fun","snmp","snmpa_supervisor:start_sub_agent/3",
              "Start a sub-agent"],
             ["fun","snmp","snmpa_supervisor:stop_sub_agent/1",
              "Stop a sub-agent"],
             ["fun","snmp","snmpc:compile/1","Compile the specified MIB"],
             ["fun","snmp","snmpc:compile/2","Compile the specified MIB"],
             ["fun","snmp","snmpc:is_consistent/1",
              "Check for OID conflicts between MIBs"],
             ["fun","snmp","snmpc:mib_to_hrl/1",
              "Generate constants for the objects in the MIB"],
             ["fun","snmp","snmpm:monitor/0","Monitor the snmp manager"],
             ["fun","snmp","snmpm:demonitor/1",
              "Turn off monitoring of the snmp manager"],
             ["fun","snmp","snmpm:notify_started/1",
              "Request to be notified when manager started"],
             ["fun","snmp","snmpm:cancel_notify_started/1",
              "Cancel request to be notified when manager started"],
             ["fun","snmp","snmpm:register_user/3",
              "Register a user of the manager"],
             ["fun","snmp","snmpm:register_user/4",
              "Register a user of the manager"],
             ["fun","snmp","snmpm:register_user_monitor/3",
              "Register a monitored user of the manager"],
             ["fun","snmp","snmpm:register_user_monitor/4",
              "Register a monitored user of the manager"],
             ["fun","snmp","snmpm:unregister_user/1","Unregister the user"],
             ["fun","snmp","snmpm:which_users/0","Get a list of all users"],
             ["fun","snmp","snmpm:register_agent/3","Register this agent"],
             ["fun","snmp","snmpm:unregister_agent/2","Unregister the user"],
             ["fun","snmp","snmpm:agent_info/2","Retrieve agent config"],
             ["fun","snmp","snmpm:update_agent_info/4","Update agent config"],
             ["fun","snmp","snmpm:which_agents/0",
              "List the registered agents"],
             ["fun","snmp","snmpm:which_agents/1",
              "List the registered agents"],
             ["fun","snmp","snmpm:register_usm_user/3",
              "Register this USM user"],
             ["fun","snmp","snmpm:unregister_usm_user/2",
              "Unregister this USM user"],
             ["fun","snmp","snmpm:usm_user_info/3","Retrieve usm user config"],
             ["fun","snmp","snmpm:update_usm_user_info/4",
              "Update agent config"],
             ["fun","snmp","snmpm:which_usm_users/0",
              "List all the registered usm users"],
             ["fun","snmp","snmpm:which_usm_users/1",
              "List the registered usm users"],
             ["fun","snmp","snmpm:sync_get/3",
              "Synchronous <c>get-request</c>"],
             ["fun","snmp","snmpm:sync_get/4",
              "Synchronous <c>get-request</c>"],
             ["fun","snmp","snmpm:sync_get/4",
              "Synchronous <c>get-request</c>"],
             ["fun","snmp","snmpm:sync_get/5",
              "Synchronous <c>get-request</c>"],
             ["fun","snmp","snmpm:sync_get/6",
              "Synchronous <c>get-request</c>"],
             ["fun","snmp","snmpm:async_get/3",
              "Asynchronous <c>get-request</c>"],
             ["fun","snmp","snmpm:async_get/4",
              "Asynchronous <c>get-request</c>"],
             ["fun","snmp","snmpm:async_get/4",
              "Asynchronous <c>get-request</c>"],
             ["fun","snmp","snmpm:async_get/5",
              "Asynchronous <c>get-request</c>"],
             ["fun","snmp","snmpm:async_get/6",
              "Asynchronous <c>get-request</c>"],
             ["fun","snmp","snmpm:sync_get_next/3",
              "Synchronous <c>get-next-request</c>"],
             ["fun","snmp","snmpm:sync_get_next/4",
              "Synchronous <c>get-next-request</c>"],
             ["fun","snmp","snmpm:sync_get_next/4",
              "Synchronous <c>get-next-request</c>"],
             ["fun","snmp","snmpm:sync_get_next/5",
              "Synchronous <c>get-next-request</c>"],
             ["fun","snmp","snmpm:sync_get_next/6",
              "Synchronous <c>get-next-request</c>"],
             ["fun","snmp","snmpm:async_get_next/3",
              "Asynchronous <c>get-next-request</c>"],
             ["fun","snmp","snmpm:async_get_next/4",
              "Asynchronous <c>get-next-request</c>"],
             ["fun","snmp","snmpm:async_get_next/4",
              "Asynchronous <c>get-next-request</c>"],
             ["fun","snmp","snmpm:async_get_next/5",
              "Asynchronous <c>get-next-request</c>"],
             ["fun","snmp","snmpm:async_get_next/6",
              "Asynchronous <c>get-next-request</c>"],
             ["fun","snmp","snmpm:sync_set/3",
              "Synchronous <c>set-request</c>"],
             ["fun","snmp","snmpm:sync_set/4",
              "Synchronous <c>set-request</c>"],
             ["fun","snmp","snmpm:sync_set/4",
              "Synchronous <c>set-request</c>"],
             ["fun","snmp","snmpm:sync_set/5",
              "Synchronous <c>set-request</c>"],
             ["fun","snmp","snmpm:sync_set/6",
              "Synchronous <c>set-request</c>"],
             ["fun","snmp","snmpm:async_set/3",
              "Asynchronous <c>set-request</c>"],
             ["fun","snmp","snmpm:async_set/4",
              "Asynchronous <c>set-request</c>"],
             ["fun","snmp","snmpm:async_set/4",
              "Asynchronous <c>set-request</c>"],
             ["fun","snmp","snmpm:async_set/5",
              "Asynchronous <c>set-request</c>"],
             ["fun","snmp","snmpm:async_set/6",
              "Asynchronous <c>set-request</c>"],
             ["fun","snmp","snmpm:sync_get_bulk/5",
              "Synchronous <c>get-bulk-request</c>"],
             ["fun","snmp","snmpm:sync_get_bulk/6",
              "Synchronous <c>get-bulk-request</c>"],
             ["fun","snmp","snmpm:sync_get_bulk/6",
              "Synchronous <c>get-bulk-request</c>"],
             ["fun","snmp","snmpm:sync_get_bulk/7",
              "Synchronous <c>get-bulk-request</c>"],
             ["fun","snmp","snmpm:sync_get_bulk/8",
              "Synchronous <c>get-bulk-request</c>"],
             ["fun","snmp","snmpm:async_get_bulk/5",
              "Asynchronous <c>get-bulk-request</c>"],
             ["fun","snmp","snmpm:async_get_bulk/6",
              "Asynchronous <c>get-bulk-request</c>"],
             ["fun","snmp","snmpm:async_get_bulk/6",
              "Asynchronous <c>get-bulk-request</c>"],
             ["fun","snmp","snmpm:async_get_bulk/7",
              "Asynchronous <c>get-bulk-request</c>"],
             ["fun","snmp","snmpm:async_get_bulk/8",
              "Asynchronous <c>get-bulk-request</c>"],
             ["fun","snmp","snmpm:cancel_async_request/2",
              "Cancel a asynchronous request"],
             ["fun","snmp","snmpm:log_to_txt/2",
              "Convert an Audit Trail Log to text format"],
             ["fun","snmp","snmpm:log_to_txt/3",
              "Convert an Audit Trail Log to text format"],
             ["fun","snmp","snmpm:log_to_txt/4",
              "Convert an Audit Trail Log to text format"],
             ["fun","snmp","snmpm:log_to_txt/5",
              "Convert an Audit Trail Log to text format"],
             ["fun","snmp","snmpm:log_to_txt/6",
              "Convert an Audit Trail Log to text format"],
             ["fun","snmp","snmpm:log_to_txt/7",
              "Convert an Audit Trail Log to text format"],
             ["fun","snmp","snmpm:change_log_size/1",
              "Change the size of the Audit Trail Log"],
             ["fun","snmp","snmpm:set_log_type/1",
              "Change the Audit Trail Log type"],
             ["fun","snmp","snmpm:load_mib/1","Load a MIB into the manager"],
             ["fun","snmp","snmpm:unload_mib/1",
              "Unload a MIB from the manager"],
             ["fun","snmp","snmpm:which_mibs/0",
              "Which mibs are loaded into the manager"],
             ["fun","snmp","snmpm:name_to_oid/1",
              "Get all the possible oid's for an alias-name"],
             ["fun","snmp","snmpm:oid_to_name/1",
              "Get the alias-name of the oid "],
             ["fun","snmp","snmpm:oid_to_type/1",
              "Get the type of the the oid"],
             ["fun","snmp","snmpm:backup/1","Backup manager data"],
             ["fun","snmp","snmpm:info/0",
              "Return information about the manager"],
             ["fun","snmp","snmpm:verbosity/2",
              "Assign a new verbosity for the process"],
             ["fun","snmp","snmpm:format_reason/1",
              "Assign a new verbosity for the process"],
             ["fun","snmp","snmpm:format_reason/2",
              "Assign a new verbosity for the process"],
             ["fun","snmp","snmpm_conf:manager_entry/2",
              "Create an manager entry"],
             ["fun","snmp","snmpm_conf:write_manager_config/2",
              "Write the manager config to the config file"],
             ["fun","snmp","snmpm_conf:write_manager_config/3",
              "Write the manager config to the config file"],
             ["fun","snmp","snmpm_conf:append_manager_config/2",
              "Append the manager config to the config file"],
             ["fun","snmp","snmpm_conf:read_manager_config/1",
              "Read the manager config from the config file"],
             ["fun","snmp","snmpm_conf:users_entry/1","Create an users entry"],
             ["fun","snmp","snmpm_conf:users_entry/2","Create an users entry"],
             ["fun","snmp","snmpm_conf:users_entry/3","Create an users entry"],
             ["fun","snmp","snmpm_conf:write_users_config/2",
              "Write the manager users config to the config file"],
             ["fun","snmp","snmpm_conf:write_users_config/3",
              "Write the manager users config to the config file"],
             ["fun","snmp","snmpm_conf:append_users_config/2",
              "Append the manager users config to the config file"],
             ["fun","snmp","snmpm_conf:read_users_config/1",
              "Read the manager users config from the config file"],
             ["fun","snmp","snmpm_conf:agents_entry/12",
              "Create an agents entry"],
             ["fun","snmp","snmpm_conf:write_agents_config/2",
              "Write the manager agents to the config file"],
             ["fun","snmp","snmpm_conf:write_agents_config/3",
              "Write the manager agents to the config file"],
             ["fun","snmp","snmpm_conf:append_agents_config/2",
              "Append the manager agents to the config file"],
             ["fun","snmp","snmpm_conf:read_agents_config/1",
              "Read the manager agents config from the config fil"],
             ["fun","snmp","snmpm_conf:usm_entry/6","Create an usm entry"],
             ["fun","snmp","snmpm_conf:usm_entry/7","Create an usm entry"],
             ["fun","snmp","snmpm_conf:write_usm_config/2",
              "Write the manager usm config to the config file"],
             ["fun","snmp","snmpm_conf:write_usm_config/3",
              "Write the manager usm config to the config file"],
             ["fun","snmp","snmpm_conf:append_usm_config/2",
              "Append the manager usm  config to the config file"],
             ["fun","snmp","snmpm_conf:read_usm_config/1",
              "Read the manager usm config from the config file"],
             ["fun","snmp","snmpm_mpd:init_mpd/1","Initialize the MPD module"],
             ["fun","snmp","snmpm_mpd:process_msg/7",
              "Process a message received from the network"],
             ["fun","snmp","snmpm_mpd:generate_msg/5",
              "Generate a request message to be sent to the netwo"],
             ["fun","snmp","snmpm_mpd:generate_response_msg/4",
              "Generate a response packet to be sent to the netwo"],
             ["fun","snmp","snmpm_network_interface:start_link/2",
              "Start-link the network interface process"],
             ["fun","snmp","snmpm_network_interface:stop/1",
              "Stop the network interface process"],
             ["fun","snmp","snmpm_network_interface:send_pdu/7",
              "Request the network interface process to send this"],
             ["fun","snmp","snmpm_network_interface:inform_response/4",
              "Send the inform-request ack"],
             ["fun","snmp","snmpm_network_interface:note_store/2",
              "Change the verbosity of the network interface proc"],
             ["fun","snmp","snmpm_network_interface:info/1",
              "Return information about the running network inter"],
             ["fun","snmp","snmpm_network_interface:verbosity/2",
              "Change the verbosity of the network interface proc"],
             ["fun","snmp","snmpm_network_interface:get_log_type/1",
              "Get the Audit Trail Log type"],
             ["fun","snmp","snmpm_network_interface:set_log_type/2",
              "Change the Audit Trail Log type"],
             ["fun","snmp","snmpm_network_interface_filter:accept_recv/2",
              "Shall the received message be accepted"],
             ["fun","snmp","snmpm_network_interface_filter:accept_send/2",
              "Shall the message be sent"],
             ["fun","snmp","snmpm_network_interface_filter:accept_recv_pdu/3",
              "Shall the received pdu be accepted"],
             ["fun","snmp","snmpm_network_interface_filter:accept_send_pdu/3",
              "Shall the pdu be sent"],
             ["fun","snmp","snmpm_user:handle_error/3","Handle error"],
             ["fun","snmp","snmpm_user:handle_agent/5","Handle agent"],
             ["fun","snmp","snmpm_user:handle_pdu/4",
              "Handle the reply to an asynchronous request"],
             ["fun","snmp","snmpm_user:handle_trap/3",
              "Handle a trap/notification message"],
             ["fun","snmp","snmpm_user:handle_inform/3",
              "Handle a inform message"],
             ["fun","snmp","snmpm_user:handle_report/3",
              "Handle a report message"],
             ["fun","sasl","alarm_handler:clear_alarm/1",
              "Clear the specified alarms"],
             ["fun","sasl","alarm_handler:get_alarms/0",
              "Get all active alarms"],
             ["fun","sasl","alarm_handler:set_alarm/1",
              "Set an alarm with an id"],
             ["fun","sasl","overload:request/0",
              "Request to proceed with current job"],
             ["fun","sasl","overload:get_overload_info/0",
              "Return current overload information data"],
             ["fun","sasl","rb:grep/1",
              "Search the reports for a regular expression"],
             ["fun","sasl","rb:h/0","Print help information"],
             ["fun","sasl","rb:help/0","Print help information"],
             ["fun","sasl","rb:list/0","List all reports"],
             ["fun","sasl","rb:list/1","List all reports"],
             ["fun","sasl","rb:rescan/0","Rescan the report directory"],
             ["fun","sasl","rb:rescan/1","Rescan the report directory"],
             ["fun","sasl","rb:show/0","Show reports"],
             ["fun","sasl","rb:show/1","Show reports"],
             ["fun","sasl","rb:start/0","Start the RB server"],
             ["fun","sasl","rb:start/1","Start the RB server"],
             ["fun","sasl","rb:start_log/1",
              "Redirect all output to <c>FileName</c>"],
             ["fun","sasl","rb:stop/0","Stop the RB server"],
             ["fun","sasl","rb:stop_log/0","Stop logging to file"],
             ["fun","sasl","release_handler:check_install_release/1",
              "Check installation of a release in the system."],
             ["fun","sasl","release_handler:create_RELEASES/4",
              "Create an initial RELEASES file."],
             ["fun","sasl","release_handler:install_file/2",
              "Install a release file in the release structure."],
             ["fun","sasl","release_handler:install_release/1",
              "Install a release in the system."],
             ["fun","sasl","release_handler:install_release/2",
              "Install a release in the system."],
             ["fun","sasl","release_handler:make_permanent/1",
              "Make the specified release version permanent."],
             ["fun","sasl","release_handler:remove_release/1",
              "Remove a release from the system."],
             ["fun","sasl","release_handler:reboot_old_release/1",
              "Reboot the system from an old release."],
             ["fun","sasl","release_handler:set_removed/1",
              "Mark a release as removed."],
             ["fun","sasl","release_handler:set_unpacked/2",
              "Mark a release as unpacked."],
             ["fun","sasl","release_handler:unpack_release/1",
              "Unpack a release package."],
             ["fun","sasl","release_handler:which_releases/0",
              "Return all known releases"],
             ["fun","sasl","systools:make_relup/3",
              "Generate a release upgrade file <c>relup</c>."],
             ["fun","sasl","systools:make_relup/4",
              "Generate a release upgrade file <c>relup</c>."],
             ["fun","sasl","systools:make_script/1",
              "Generate a boot script <c>.script/.boot</c>."],
             ["fun","sasl","systools:make_script/2",
              "Generate a boot script <c>.script/.boot</c>."],
             ["fun","sasl","systools:make_tar/1","Create a release package."],
             ["fun","sasl","systools:make_tar/2","Create a release package."],
             ["fun","sasl","systools:script2boot/1",
              "Generate a binary version of a boot script."],
             ["fun","runtime_tools","dbg:fun2ms/1",
              "Pseudo function that transforms fun syntax to matc"],
             ["fun","runtime_tools","dbg:h/0",
              "Give a list of available help items on standard ou"],
             ["fun","runtime_tools","dbg:h/1","Give brief help for an item."],
             ["fun","runtime_tools","dbg:p/1",
              "Trace messages to and from Item."],
             ["fun","runtime_tools","dbg:p/2",
              "Trace Item according to Flags."],
             ["fun","runtime_tools","dbg:c/3",
              "Evaluate <c>apply(M,F,Args)</c>with <c>all</c>trac"],
             ["fun","runtime_tools","dbg:c/4",
              "Evaluate <c>apply(M,F,Args)</c>with <c>Flags</c>tr"],
             ["fun","runtime_tools","dbg:i/0",
              "Display information about all traced processes."],
             ["fun","runtime_tools","dbg:tp/2",
              "Set pattern for traced global function calls"],
             ["fun","runtime_tools","dbg:tp/3",
              "Set pattern for traced global function calls"],
             ["fun","runtime_tools","dbg:tp/4",
              "Set pattern for traced global function calls"],
             ["fun","runtime_tools","dbg:tp/4",
              "Set pattern for traced global function calls"],
             ["fun","runtime_tools","dbg:tpl/2",
              "Set pattern for traced local (as well as global) f"],
             ["fun","runtime_tools","dbg:tpl/3",
              "Set pattern for traced local (as well as global) f"],
             ["fun","runtime_tools","dbg:tpl/4",
              "Set pattern for traced local (as well as global) f"],
             ["fun","runtime_tools","dbg:tpl/4",
              "Set pattern for traced local (as well as global) f"],
             ["fun","runtime_tools","dbg:ctp/0",
              "Clear call trace pattern for the specified functio"],
             ["fun","runtime_tools","dbg:ctp/1",
              "Clear call trace pattern for the specified functio"],
             ["fun","runtime_tools","dbg:ctp/2",
              "Clear call trace pattern for the specified functio"],
             ["fun","runtime_tools","dbg:ctp/3",
              "Clear call trace pattern for the specified functio"],
             ["fun","runtime_tools","dbg:ctp/3",
              "Clear call trace pattern for the specified functio"],
             ["fun","runtime_tools","dbg:ctpl/0",
              "Clear call trace pattern for the specified functio"],
             ["fun","runtime_tools","dbg:ctpl/1",
              "Clear call trace pattern for the specified functio"],
             ["fun","runtime_tools","dbg:ctpl/2",
              "Clear call trace pattern for the specified functio"],
             ["fun","runtime_tools","dbg:ctpl/3",
              "Clear call trace pattern for the specified functio"],
             ["fun","runtime_tools","dbg:ctpl/3",
              "Clear call trace pattern for the specified functio"],
             ["fun","runtime_tools","dbg:ctpg/0",
              "Clear call trace pattern for the specified functio"],
             ["fun","runtime_tools","dbg:ctpg/1",
              "Clear call trace pattern for the specified functio"],
             ["fun","runtime_tools","dbg:ctpg/2",
              "&gt;Clear call trace pattern for the specified fun"],
             ["fun","runtime_tools","dbg:ctpg/3",
              "&gt;Clear call trace pattern for the specified fun"],
             ["fun","runtime_tools","dbg:ctpg/3",
              "Clear call trace pattern for the specified functio"],
             ["fun","runtime_tools","dbg:ltp/0",
              "List saved and built-in match specifications on th"],
             ["fun","runtime_tools","dbg:dtp/0",
              "Delete all saved match specifications."],
             ["fun","runtime_tools","dbg:dtp/1",
              "Delete a specific saved match_spec."],
             ["fun","runtime_tools","dbg:wtp/1",
              "Write all saved and built-in match specifications "],
             ["fun","runtime_tools","dbg:rtp/1",
              "Read saved match specifications from file."],
             ["fun","runtime_tools","dbg:n/1",
              "Add a remote node to the list of traced nodes"],
             ["fun","runtime_tools","dbg:cn/1",
              "Clear a node from the list of traced nodes."],
             ["fun","runtime_tools","dbg:ln/0",
              "Show the list of traced nodes on the console."],
             ["fun","runtime_tools","dbg:tracer/0",
              "Start a tracer server that handles trace messages."],
             ["fun","runtime_tools","dbg:tracer/2",
              "Start a tracer server with additional parameters"],
             ["fun","runtime_tools","dbg:tracer/3",
              "Start a tracer server on given node with additiona"],
             ["fun","runtime_tools","dbg:trace_port/2",
              "Create and returns a trace port generating<em>fun<"],
             ["fun","runtime_tools","dbg:flush_trace_port/0",
              "Equivalent to flush_trace_port(node())."],
             ["fun","runtime_tools","dbg:flush_trace_port/1",
              "Flush internal data buffers in a trace driver on t"],
             ["fun","runtime_tools","dbg:trace_port_control/1",
              "Equivalent to trace_port_control(node(),Operation)"],
             ["fun","runtime_tools","dbg:trace_port_control/2",
              "Perform a control operation on the active trace po"],
             ["fun","runtime_tools","dbg:trace_client/2",
              "Start a trace client that reads messages created b"],
             ["fun","runtime_tools","dbg:trace_client/3",
              "Start a trace client that reads messages created b"],
             ["fun","runtime_tools","dbg:stop_trace_client/1",
              "Stop a trace client gracefully."],
             ["fun","runtime_tools","dbg:get_tracer/0",
              "Equivalent to get_tracer(node())."],
             ["fun","runtime_tools","dbg:get_tracer/1",
              "Return the process or port to which all trace mess"],
             ["fun","runtime_tools","dbg:stop/0",
              "Stop the <c>dbg</c>server and the tracing of all p"],
             ["fun","runtime_tools","dbg:stop_clear/0",
              "Stop the <c>dbg</c>server and the tracing of all p"],
             ["fun","runtime_tools","erts_alloc_config:save_scenario/0",
              "Saves information about current runtime scenario"],
             ["fun","runtime_tools","erts_alloc_config:make_config/0",
              "Creates an erts_alloc configuration"],
             ["fun","runtime_tools","erts_alloc_config:make_config/1",
              "Creates an erts_alloc configuration"],
             ["fun","runtime_tools","erts_alloc_config:stop/0",[]],
             ["fun","reltool","reltool:create_target/2",
              "Create a target system"],
             ["fun","reltool","reltool:eval_target_spec/3",
              "Create a target system"],
             ["fun","reltool","reltool:get_config/1",
              "Get reltool configuration"],
             ["fun","reltool","reltool:get_config/3",
              "Get reltool configuration"],
             ["fun","reltool","reltool:get_rel/2",
              "Get contents of a release file"],
             ["fun","reltool","reltool:get_script/2",
              "Get contents of a boot script file"],
             ["fun","reltool","reltool:get_server/1",
              "Start server process with options"],
             ["fun","reltool","reltool:get_target_spec/1",
              "Return a specification of the target system"],
             ["fun","reltool","reltool:install/2","Install a target system"],
             ["fun","reltool","reltool:start/0","Start main window process"],
             ["fun","reltool","reltool:start/1",
              "Start main window process with options"],
             ["fun","reltool","reltool:start_link/1",
              "Start main window process with options"],
             ["fun","reltool","reltool:start_server/1",
              "Start server process with options"],
             ["fun","reltool","reltool:stop/1",
              "Stop a server or window process"],
             ["fun","public_key","public_key:decode_private_key/1",
              " Decodes an asn1 der encoded private key."],
             ["fun","public_key","public_key:decode_private_key/2",
              " Decodes an asn1 der encoded private key."],
             ["fun","public_key","public_key:pem_to_der/1",
              "Reads a PEM file and translates it into its asn1 d"],
             ["fun","public_key","public_key:pkix_decode_cert/2",
              " Decodes an asn1 der encoded pkix certificate. "],
             ["fun","pman","pman:start/0","Start Pman."],
             ["fun","pman","pman:start/1","Start Pman."],
             ["fun","pman","pman:start_notimeout/0","Start Pman."],
             ["fun","pman","pman:start_notimeout/1","Start Pman."],
             ["fun","pman","pman:proc/1","Start a Pman trace window."],
             ["fun","pman","pman:proc/3","Start a Pman trace window."],
             ["fun","percept","egd:color/1","Creates a color reference."],
             ["fun","percept","egd:create/1",
              "Creates an image area and returns its reference."],
             ["fun","percept","egd:destroy/1","Destroys the image."],
             ["fun","percept","egd:filledEllipse/1",
              "Creates a filled ellipse object."],
             ["fun","percept","egd:filledRectangle/1",
              "Creates a filled rectangle object."],
             ["fun","percept","egd:line/1",
              "Creates a line object from P1 to P2 in the image."],
             ["fun","percept","egd:rectangle/1","Creates a rectangle object."],
             ["fun","percept","egd:render/1",
              "Equivalent to render(Image, png, [{render_engine, "],
             ["fun","percept","egd:render/1",
              "Equivalent to render(Image, Type, [{render_engine,"],
             ["fun","percept","egd:render/1",
              "Renders a binary from the primitives specified by "],
             ["fun","percept","egd:save/1","Saves the binary to file."],
             ["fun","percept","egd:text/1","Creates a text object."],
             ["fun","parsetools","leex:file/1","Generate a lexical analyzer"],
             ["fun","parsetools","leex:file/2","Generate a lexical analyzer"],
             ["fun","parsetools","leex:format_error/1",
              "Return an English description of a an error tuple."],
             ["fun","parsetools","yecc:file/2",
              "Give information about resolved and unresolved par"],
             ["fun","parsetools","yecc:format_error/1",
              "Return an English description of a an error tuple."],
             ["fun","otp_mibs","otp_mib:load/1","Load the OTP-MIB"],
             ["fun","otp_mibs","otp_mib:unload/1","Unload the OTP-MIB"],
             ["fun","os_mon","cpu_sup:nprocs/0",
              "Get the number of UNIX processes running on this h"],
             ["fun","os_mon","cpu_sup:avg1/0",
              "Get the system load average for the last minute"],
             ["fun","os_mon","cpu_sup:avg5/0",
              "Get the system load average for the last five minu"],
             ["fun","os_mon","cpu_sup:avg15/0",
              "Get the system load average for the last fifteen m"],
             ["fun","os_mon","cpu_sup:util/0","Get the CPU utilization"],
             ["fun","os_mon","cpu_sup:util/1","Get the CPU utilization"],
             ["fun","os_mon","disksup:get_disk_data/0",
              "Get data for the disks in the system"],
             ["fun","os_mon","disksup:get_check_interval/0",
              "Get time interval, in milliseconds, for the period"],
             ["fun","os_mon","disksup:set_check_interval/1",
              "Set time interval, in minutes, for the periodic di"],
             ["fun","os_mon","disksup:get_almost_full_threshold/0",
              "Get threshold, in percent, for disk space utilizat"],
             ["fun","os_mon","disksup:set_almost_full_threshold/1",
              "Set threshold, as percentage represented by a floa"],
             ["fun","os_mon","memsup:get_memory_data/0",
              "Get data for the memory in the system"],
             ["fun","os_mon","memsup:get_system_memory_data/0",
              "Get system dependent memory data"],
             ["fun","os_mon","memsup:get_os_wordsize/0",
              "Get the wordsize of running os."],
             ["fun","os_mon","memsup:get_check_interval/0",
              "Get time interval, in milliseconds, for the period"],
             ["fun","os_mon","memsup:set_check_interval/1",
              "Set time interval, in minutes, for the periodic me"],
             ["fun","os_mon","memsup:get_procmem_high_watermark/0",
              "Get threshold, in percent, for process memory allo"],
             ["fun","os_mon","memsup:set_procmem_high_watermark/1",
              "Set threshold, as percentage represented by a floa"],
             ["fun","os_mon","memsup:get_sysmem_high_watermark/0",
              "Get threshold, in percent, for system memory alloc"],
             ["fun","os_mon","memsup:set_sysmem_high_watermark/1",
              "Set threshold, given as a float, for system memory"],
             ["fun","os_mon","memsup:get_helper_timeout/0",
              "Get the timeout value, in seconds, for memory chec"],
             ["fun","os_mon","memsup:set_helper_timeout/1",
              "Set the timeout value, in seconds, for memory chec"],
             ["fun","os_mon","nteventlog:start/2",
              "Start the NT eventlog server"],
             ["fun","os_mon","nteventlog:start_link/2",
              "Start the NT eventlog server"],
             ["fun","os_mon","nteventlog:stop/0",
              "Stop the NT eventlog server"],
             ["fun","os_mon","os_mon_mib:load/1","Load the OTP-OS-MON-MIB"],
             ["fun","os_mon","os_mon_mib:unload/1",
              "Unload the OTP-OS-MON-MIB"],
             ["fun","os_mon","os_sup:enable/0",
              "Enable the service (Solaris only)"],
             ["fun","os_mon","os_sup:enable/2",
              "Enable the service (Solaris only)"],
             ["fun","os_mon","os_sup:disable/0",
              "Disable the service (Solaris only)"],
             ["fun","os_mon","os_sup:disable/2",
              "Disable the service (Solaris only)"],
             ["fun","orber","CosNaming_BindingIterator:next_one/1",
              "Return a binding"],
             ["fun","orber","CosNaming_BindingIterator:next_n/2",
              "Return a binding list"],
             ["fun","orber","CosNaming_BindingIterator:destroy/1",
              "Destroy the iterator object"],
             ["fun","orber","CosNaming_NamingContext:bind/3",
              "Bind a Name to an Object"],
             ["fun","orber","CosNaming_NamingContext:rebind/3",
              "Bind an Object to the Name even if the Name alread"],
             ["fun","orber","CosNaming_NamingContext:bind_context/3",
              "Bind a Name to an NamingContext"],
             ["fun","orber","CosNaming_NamingContext:rebind_context/3",
              "Bind an NamingContext to the Name even if the Name"],
             ["fun","orber","CosNaming_NamingContext:resolve/2",
              "Retrieve an Object bound to Name"],
             ["fun","orber","CosNaming_NamingContext:unbind/2",
              "Remove the binding for a Name"],
             ["fun","orber","CosNaming_NamingContext:new_context/1",
              "Create a new NamingContext"],
             ["fun","orber","CosNaming_NamingContext:bind_new_context/2",
              "Create a new NamingContext and bind it to a Name"],
             ["fun","orber","CosNaming_NamingContext:destroy/1",
              "Destroy a NamingContext"],
             ["fun","orber","CosNaming_NamingContext:list/2",
              "List returns a all bindings in the context"],
             ["fun","orber","CosNaming_NamingContextExt:to_string/2",
              "Stringify a <c>Name</c>sequence to a string"],
             ["fun","orber","CosNaming_NamingContextExt:to_name/2",
              "Convert a stringified <c>Name</c>to a <c>Name</c>s"],
             ["fun","orber","CosNaming_NamingContextExt:to_url/3",
              "Return an URL string constructed from the given Ad"],
             ["fun","orber","CosNaming_NamingContextExt:resolve_str/2",
              "Return the object associated, if any, with the giv"],
             ["fun","orber","Module_Interface:typeID/0",
              "Return the Type ID related to this stub/skeleton"],
             ["fun","orber","Module_Interface:oe_create/0",
              "Start a Orber server."],
             ["fun","orber","Module_Interface:oe_create_link/0",
              "Start a linked Orber server."],
             ["fun","orber","Module_Interface:oe_create/1",
              "Start a Orber server."],
             ["fun","orber","Module_Interface:oe_create_link/1",
              "Start a linked Orber server."],
             ["fun","orber","Module_Interface:oe_create/2",
              "Start a Orber stub/skeleton"],
             ["fun","orber","Module_Interface:oe_create_link/2",
              "Start a Orber stub/skeleton"],
             ["fun","orber","Module_Interface:own_functions/4",
              "User defined function which is not a part of Orber"],
             ["fun","orber","Module_Interface:own_functions/5",
              "User defined function which is not a part of Orber"],
             ["fun","orber","any:create/0","Create an any record"],
             ["fun","orber","any:create/2","Create an any record"],
             ["fun","orber","any:set_typecode/2","Set the typecode field"],
             ["fun","orber","any:get_typecode/1","Fetch the typecode"],
             ["fun","orber","any:set_value/2","Set the value field"],
             ["fun","orber","any:get_value/1","Fetch the value"],
             ["fun","orber","corba:create/2",
              "Create and start a new server object"],
             ["fun","orber","corba:create/3",
              "Create and start a new server object"],
             ["fun","orber","corba:create/4",
              "Create and start a new server object"],
             ["fun","orber","corba:create_link/2",
              "Create and start a new server object"],
             ["fun","orber","corba:create_link/3",
              "Create and start a new server object"],
             ["fun","orber","corba:create_link/4",
              "Create and start a new server object"],
             ["fun","orber","corba:dispose/1","Stop a server object"],
             ["fun","orber","corba:create_nil_objref/0",
              "Stop a server object"],
             ["fun","orber","corba:create_subobject_key/2",
              "Add an Erlang term to a private key field"],
             ["fun","orber","corba:get_subobject_key/1",
              "Fetch the contents of the private key field"],
             ["fun","orber","corba:get_pid/1",
              "Get the process id from an object key"],
             ["fun","orber","corba:raise/1","Generate an Erlang throw"],
             ["fun","orber","corba:reply/2","Send explicit reply to client"],
             ["fun","orber","corba:resolve_initial_references/1",
              "Return the object reference for the given object i"],
             ["fun","orber","corba:resolve_initial_references/2",
              "Return the object reference for the given object i"],
             ["fun","orber","corba:add_initial_service/2",
              "Add a new initial service and associate it with th"],
             ["fun","orber","corba:remove_initial_service/1",
              "Remove association between the given id and servic"],
             ["fun","orber","corba:list_initial_services/0",
              "Return a list of supported object id's"],
             ["fun","orber","corba:resolve_initial_references_remote/2",
              "Return the object reference for the given object i"],
             ["fun","orber","corba:resolve_initial_references_remote/3",
              "Return the object reference for the given object i"],
             ["fun","orber","corba:list_initial_services_remote/1",
              "Return a list of supported object id's"],
             ["fun","orber","corba:list_initial_services_remote/2",
              "Return a list of supported object id's"],
             ["fun","orber","corba:object_to_string/1",
              "Convert the object reference to the external strin"],
             ["fun","orber","corba:string_to_object/1",
              "Convert the external string representation to an o"],
             ["fun","orber","corba:string_to_object/2",
              "Convert the external string representation to an o"],
             ["fun","orber","corba:print_object/2",
              "Print the supplied object"],
             ["fun","orber","corba:add_alternate_iiop_address/3",
              "Add ALTERNATE_IIOP_ADDRESS component to the suppli"],
             ["fun","orber","corba:orb_init/1",
              "Configure Orber before starting it"],
             ["fun","orber","corba_object:get_interface/1",
              "Fetch the interface description"],
             ["fun","orber","corba_object:is_nil/1",
              "Return true, if the given object is a NIL object r"],
             ["fun","orber","corba_object:is_a/2",
              "Return true if the target object is an, or inherit"],
             ["fun","orber","corba_object:is_a/3",
              "Return true if the target object is an, or inherit"],
             ["fun","orber","corba_object:is_remote/1",
              "Determine whether or not an object reference is re"],
             ["fun","orber","corba_object:non_existent/1",
              "Return false if the target object do not exist, ot"],
             ["fun","orber","corba_object:non_existent/2",
              "Return false if the target object do not exist, ot"],
             ["fun","orber","corba_object:not_existent/1",
              "Return false if the target object do not exist, ot"],
             ["fun","orber","corba_object:not_existent/2",
              "Return false if the target object do not exist, ot"],
             ["fun","orber","corba_object:is_equivalent/2",
              "Return true if the target object and the supplied "],
             ["fun","orber","corba_object:hash/2",
              "Return a hash value based on the target object"],
             ["fun","orber","fixed:create/3","Create a fixed type"],
             ["fun","orber","fixed:get_typecode/1",
              "Create TypeCode representing the supplied fixed ty"],
             ["fun","orber","fixed:add/2","Add the supplied Fixed types"],
             ["fun","orber","fixed:subtract/2","Subtract Fixed2 from Fixed1"],
             ["fun","orber","fixed:multiply/2","Multiply Fixed1 with Fixed2"],
             ["fun","orber","fixed:divide/2","Divide Fixed1 with Fixed2"],
             ["fun","orber","fixed:unary_minus/1",
              "Negate the supplied Fixed Type"],
             ["fun","orber","interceptors:new_in_connection/3",
              "Invoke when a new client ORB wants to setup a conn"],
             ["fun","orber","interceptors:new_in_connection/5",
              "Invoke when a new client ORB wants to setup a conn"],
             ["fun","orber","interceptors:new_out_connection/3",
              "Invoke when setting up a new connection to a serve"],
             ["fun","orber","interceptors:new_out_connection/5",
              "Invoke when setting up a new connection to a serve"],
             ["fun","orber","interceptors:closed_in_connection/1",
              "Invoke when an existing connection to a client sid"],
             ["fun","orber","interceptors:closed_out_connection/1",
              "Invoke when an existing connection to a server sid"],
             ["fun","orber","interceptors:in_reply/6",
              "Invoke when replies arrives at the client side ORB"],
             ["fun","orber","interceptors:in_reply_encoded/6",
              "Invoke when replies arrives at the client side ORB"],
             ["fun","orber","interceptors:in_request/6",
              "Invoke when requests arrive at the server side ORB"],
             ["fun","orber","interceptors:in_request_encoded/6",
              "Invoke when requests arrive at the server side ORB"],
             ["fun","orber","interceptors:out_reply/6",
              "Invoke after the target object replied"],
             ["fun","orber","interceptors:out_reply_encoded/6",
              "Invoke after the target object replied with the re"],
             ["fun","orber","interceptors:out_request/6",
              "Invoke on the client side ORB before encoding and "],
             ["fun","orber","interceptors:out_request_encoded/6",
              "Invoke on the client side ORB before sending the r"],
             ["fun","orber","lname:create/0","Create a new name"],
             ["fun","orber","lname:insert_component/3",
              "Insert a new name component in a name"],
             ["fun","orber","lname:get_component/2",
              "Get a name component from a name"],
             ["fun","orber","lname:delete_component/2",
              "Delete a name component from a name"],
             ["fun","orber","lname:num_component/1",
              "Count the number of name components in a name"],
             ["fun","orber","lname:equal/2","Test if two names are equal"],
             ["fun","orber","lname:less_than/2",
              "Test if one name is lesser than the other"],
             ["fun","orber","lname:to_idl_form/1",
              "Transform a pseudo name to an IDL name"],
             ["fun","orber","lname:from_idl_form/1",
              "Transform an IDL name to a pseudo name"],
             ["fun","orber","lname_component:create/0",
              "Create a new name component"],
             ["fun","orber","lname_component:get_id/1",
              "Get the id field of a name component"],
             ["fun","orber","lname_component:set_id/2",
              "Set the id field of a name component"],
             ["fun","orber","lname_component:get_kind/1",
              "Get the kind field of a name component"],
             ["fun","orber","lname_component:set_kind/2",
              "Set the kind field of a name component"],
             ["fun","orber","orber:start/0","Start the Orber application"],
             ["fun","orber","orber:start/1","Start the Orber application"],
             ["fun","orber","orber:jump_start/1",
              "Start the Orber application during tests"],
             ["fun","orber","orber:stop/0","Stop the Orber application"],
             ["fun","orber","orber:info/0",
              "Generate Info Report, which contain Orber's config"],
             ["fun","orber","orber:info/1",
              "Generate Info Report, which contain Orber's config"],
             ["fun","orber","orber:exception_info/1",
              "Return a printable string, which describes the sup"],
             ["fun","orber","orber:is_system_exception/1",
              "Return true if the supplied exception is a system "],
             ["fun","orber","orber:get_tables/0",
              "Get the Mnesia tables Orber uses."],
             ["fun","orber","orber:get_ORBInitRef/0",
              "Get the initial reference address."],
             ["fun","orber","orber:get_ORBDefaultInitRef/0",
              "Get the initial reference address."],
             ["fun","orber","orber:domain/0","Display the Orber domain name"],
             ["fun","orber","orber:iiop_port/0",
              "Display the IIOP port number"],
             ["fun","orber","orber:iiop_out_ports/0",
              "Display the ports Orber may use when connecting to"],
             ["fun","orber","orber:iiop_ssl_port/0",
              "Display the IIOP port number used for secure conne"],
             ["fun","orber","orber:iiop_timeout/0",
              "Display the IIOP timeout value"],
             ["fun","orber","orber:iiop_connection_timeout/0",
              "Display the IIOP connection timeout value"],
             ["fun","orber","orber:iiop_connections/0",
              "List all existing connections to/from other ORB's"],
             ["fun","orber","orber:iiop_connections/1",
              "List all existing connections to/from other ORB's"],
             ["fun","orber","orber:iiop_connections_pending/0",
              "List all connections to another ORB currently bein"],
             ["fun","orber","orber:iiop_in_connection_timeout/0",
              "Display the IIOP connection timeout value for inco"],
             ["fun","orber","orber:iiop_acl/0","Return the ACL configuration"],
             ["fun","orber","orber:activate_audit_trail/0",
              "Activate IIOP audit/trail"],
             ["fun","orber","orber:activate_audit_trail/1",
              "Activate IIOP audit/trail"],
             ["fun","orber","orber:deactivate_audit_trail/0",
              "Deactivate IIOP audit/trail"],
             ["fun","orber","orber:add_listen_interface/2",
              "Add a new listen process for incoming connection"],
             ["fun","orber","orber:add_listen_interface/3",
              "Add a new listen process for incoming connection"],
             ["fun","orber","orber:add_listen_interface/3",
              "Add a new listen process for incoming connection"],
             ["fun","orber","orber:remove_listen_interface/1",
              "Terminate listen process for incoming connection"],
             ["fun","orber","orber:close_connection/1",
              "Terminate outgoing connection(s)"],
             ["fun","orber","orber:close_connection/2",
              "Terminate outgoing connection(s)"],
             ["fun","orber","orber:secure/0",
              "Display the security mode Orber is running in"],
             ["fun","orber","orber:ssl_server_certfile/0",
              "Display  the path to the server certificate"],
             ["fun","orber","orber:ssl_client_certfile/0",
              "Display the path to the client certificate"],
             ["fun","orber","orber:set_ssl_client_certfile/1",
              "Set the value of the client certificate"],
             ["fun","orber","orber:ssl_server_verify/0",
              "Display the SSL verification type for incoming cal"],
             ["fun","orber","orber:ssl_client_verify/0",
              "Display the SSL verification type for outgoing cal"],
             ["fun","orber","orber:set_ssl_client_verify/1",
              "Set the value of the SSL verification type for out"],
             ["fun","orber","orber:ssl_server_depth/0",
              "Display the SSL verification depth for incoming ca"],
             ["fun","orber","orber:ssl_client_depth/0",
              "Display the SSL verification depth for outgoing ca"],
             ["fun","orber","orber:set_ssl_client_depth/1",
              "Sets the value of the SSL verification depth for o"],
             ["fun","orber","orber:objectkeys_gc_time/0",
              "Display the Object Keys GC time value"],
             ["fun","orber","orber:orber_nodes/0",
              "Displays which nodes that this orber domain consis"],
             ["fun","orber","orber:install/1","Install the Orber application"],
             ["fun","orber","orber:install/2","Install the Orber application"],
             ["fun","orber","orber:uninstall/0",
              "Uninstall the Orber application"],
             ["fun","orber","orber:add_node/2",
              "Add a new node to a group of Orber nodes."],
             ["fun","orber","orber:remove_node/1",
              "Removes a node from a group of Orber nodes."],
             ["fun","orber","orber:configure/2","Change Orber configuration."],
             ["fun","orber","orber_acl:match/2",
              "Verify if the IP address versus the current config"],
             ["fun","orber","orber_acl:match/3",
              "Verify if the IP address versus the current config"],
             ["fun","orber","orber_acl:verify/3",
              "Verify if the IP address versus the Filter"],
             ["fun","orber","orber_acl:range/2","Get range of Filter"],
             ["fun","orber","orber_diagnostics:nameservice/0",
              "Display all objects stored in the Name Service"],
             ["fun","orber","orber_diagnostics:nameservice/1",
              "Display all objects stored in the Name Service"],
             ["fun","orber","orber_diagnostics:missing_modules/0",
              "Echo missing modules required by Orber"],
             ["fun","orber","orber_ifr:init/2","Intialize the IFR"],
             ["fun","orber","orber_ifr:find_repository/0",
              "Find the IFR object reference for the Repository"],
             ["fun","orber","orber_tc:null/0","Return the IDL typecode"],
             ["fun","orber","orber_tc:void/0","Return the IDL typecode"],
             ["fun","orber","orber_tc:short/0","Return the IDL typecode"],
             ["fun","orber","orber_tc:unsigned_short/0",
              "Return the IDL typecode"],
             ["fun","orber","orber_tc:long/0","Return the IDL typecode"],
             ["fun","orber","orber_tc:unsigned_long/0",
              "Return the IDL typecode"],
             ["fun","orber","orber_tc:long_long/0","Return the IDL typecode"],
             ["fun","orber","orber_tc:unsigned_long_long/0",
              "Return the IDL typecode"],
             ["fun","orber","orber_tc:wchar/0","Return the IDL typecode"],
             ["fun","orber","orber_tc:float/0","Return the IDL typecode"],
             ["fun","orber","orber_tc:double/0","Return the IDL typecode"],
             ["fun","orber","orber_tc:boolean/0","Return the IDL typecode"],
             ["fun","orber","orber_tc:char/0","Return the IDL typecode"],
             ["fun","orber","orber_tc:octet/0","Return the IDL typecode"],
             ["fun","orber","orber_tc:any/0","Return the IDL typecode"],
             ["fun","orber","orber_tc:typecode/0","Return the IDL typecode"],
             ["fun","orber","orber_tc:principal/0","Return the IDL typecode"],
             ["fun","orber","orber_tc:object_reference/2",
              "Return the object_reference IDL typecode"],
             ["fun","orber","orber_tc:struct/3",
              "Return the struct IDL typecode"],
             ["fun","orber","orber_tc:union/5",
              "Return the union IDL typecode"],
             ["fun","orber","orber_tc:enum/3","Return the enum IDL typecode"],
             ["fun","orber","orber_tc:string/1",
              "Return the string IDL typecode"],
             ["fun","orber","orber_tc:wstring/1",
              "Return the wstring IDL typecode"],
             ["fun","orber","orber_tc:fixed/2",
              "Return the fixed IDL typecode"],
             ["fun","orber","orber_tc:sequence/2",
              "Return the sequence IDL typecode"],
             ["fun","orber","orber_tc:array/2",
              "Return the array IDL typecode"],
             ["fun","orber","orber_tc:alias/3",
              "Return the alias IDL typecode"],
             ["fun","orber","orber_tc:exception/3",
              "Return the exception IDL typecode"],
             ["fun","orber","orber_tc:get_tc/1","Fetch typecode"],
             ["fun","orber","orber_tc:get_tc/1","Fetch typecode"],
             ["fun","orber","orber_tc:check_tc/1",
              "Check syntax of an IDL typecode"],
             ["fun","odbc","odbc:commit/2",
              "Commits or rollbacks a transaction. "],
             ["fun","odbc","odbc:commit/3",
              "Commits or rollbacks a transaction. "],
             ["fun","odbc","odbc:connect/2",
              "Opens a connection to the database. "],
             ["fun","odbc","odbc:disconnect/1",
              "Closes a connection to a database. "],
             ["fun","odbc","odbc:describe_table/2",
              "Queries the database to find out the data types of"],
             ["fun","odbc","odbc:describe_table/3",
              "Queries the database to find out the data types of"],
             ["fun","odbc","odbc:first/1",
              "Returns the first row of the result set and positi"],
             ["fun","odbc","odbc:first/2",
              "Returns the first row of the result set and positi"],
             ["fun","odbc","odbc:last/1",
              "Returns the last row of the result set and positio"],
             ["fun","odbc","odbc:last/2",
              "Returns the last row of the result set and positio"],
             ["fun","odbc","odbc:next/1",
              "Returns the next row of the result set relative th"],
             ["fun","odbc","odbc:next/2",
              "Returns the next row of the result set relative th"],
             ["fun","odbc","odbc:param_query/3",
              "Executes a parameterized SQL query."],
             ["fun","odbc","odbc:param_query/4",
              "Executes a parameterized SQL query."],
             ["fun","odbc","odbc:prev/1",
              "Returns the previous row of the result set relativ"],
             ["fun","odbc","odbc:prev/2",
              "Returns the previous row of the result set relativ"],
             ["fun","odbc","odbc:start/0","Starts the odb application. "],
             ["fun","odbc","odbc:start/1","Starts the odb application. "],
             ["fun","odbc","odbc:stop/0"," Stops the odbc application."],
             ["fun","odbc","odbc:sql_query/2",
              "Executes a SQL query or a batch of SQL queries. If"],
             ["fun","odbc","odbc:sql_query/3",
              "Executes a SQL query or a batch of SQL queries. If"],
             ["fun","odbc","odbc:select_count/2",
              "Executes a SQL SELECT query and associates the res"],
             ["fun","odbc","odbc:select_count/3",
              "Executes a SQL SELECT query and associates the res"],
             ["fun","odbc","odbc:select/3",
              "Selects <c>N</c>consecutive rows of the result set"],
             ["fun","odbc","odbc:select/4",
              "Selects <c>N</c>consecutive rows of the result set"],
             ["fun","observer","crashdump:start/0",
              "Start the crashdump_viewer"],
             ["fun","observer","crashdump:stop/0","Stop the crashdump_viewer"],
             ["fun","observer","etop:config/2","Change tool's configuration"],
             ["fun","observer","etop:dump/1",
              "Dump the current display to a file."],
             ["fun","observer","etop:stop/0","Terminate etop"],
             ["fun","observer","ttb:tracer/0",
              "This is equivalent to tracer(node())."],
             ["fun","observer","ttb:tracer/1",
              "This is equivalent to tracer(Nodes,[])."],
             ["fun","observer","ttb:tracer/2",
              "Start a trace port on each given node."],
             ["fun","observer","ttb:p/2",
              "Sets the given trace flags on the given processes."],
             ["fun","observer","ttb:list_history/0",
              "Returns all calls stored in history"],
             ["fun","observer","ttb:run_history/1",
              "Executes one entry of the history"],
             ["fun","observer","ttb:write_config/2",
              "Equivalent to write_config(ConfigFile,Config,[])."],
             ["fun","observer","ttb:write_config/3","Creates a config file."],
             ["fun","observer","ttb:run_config/1",
              "Executes all entries in a config file."],
             ["fun","observer","ttb:run_config/2",
              "Executes selected entries from a config file."],
             ["fun","observer","ttb:list_config/1",
              "Lists all entries in a config file."],
             ["fun","observer","ttb:write_trace_info/2",
              "Writes any information to the <c>.ti</c>file."],
             ["fun","observer","ttb:seq_trigger_ms/0",
              "Equivalent to seq_trigger_ms(all)"],
             ["fun","observer","ttb:seq_trigger_ms/1",
              "Returns a match_spec() which starts sequential tra"],
             ["fun","observer","ttb:stop/0","Equivalent to stop([])"],
             ["fun","observer","ttb:stop/1",
              "Stop tracing and fetch/format logs from all nodes"],
             ["fun","observer","ttb:format/1",
              "Same as <c>format(File,[])</c>."],
             ["fun","observer","ttb:format/2","Format a binary trace log"],
             ["fun","mnesia","mnesia:abort/1",
              "Abort the current transaction."],
             ["fun","mnesia","mnesia:activate_checkpoint/1",
              "Activate a checkpoint."],
             ["fun","mnesia","mnesia:activity/3",
              "Execute <c>Fun</c>in <c>AccessContext</c>."],
             ["fun","mnesia","mnesia:activity/4",
              "Execute <c>Fun</c>in <c>AccessContext</c>."],
             ["fun","mnesia","mnesia:add_table_copy/3",
              "Copy a table to a remote node."],
             ["fun","mnesia","mnesia:add_table_index/2",
              "Create an index for a table. "],
             ["fun","mnesia","mnesia:all_keys/1",
              "Return all keys in a table."],
             ["fun","mnesia","mnesia:async_dirty/3",
              "Call the Fun in a context which is not protected b"],
             ["fun","mnesia","mnesia:backup/2",
              "Back up all tables in the database."],
             ["fun","mnesia","mnesia:backup_checkpoint/3",
              "Back up all tables in a checkpoint."],
             ["fun","mnesia","mnesia:change_config/2",
              "Change a configuration parameter."],
             ["fun","mnesia","mnesia:change_table_access_mode/2",
              "Change the access mode for the table."],
             ["fun","mnesia","mnesia:change_table_copy_type/3",
              "Change the storage type of a table."],
             ["fun","mnesia","mnesia:change_table_load_order/2",
              "Change the load order priority for the table."],
             ["fun","mnesia","mnesia:clear_table/1",
              "Deletes all entries in a table."],
             ["fun","mnesia","mnesia:create_schema/1",
              "Create a brand new schema on the specified nodes."],
             ["fun","mnesia","mnesia:create_table/2",
              "Create a Mnesia table called <c>Name</c>with prope"],
             ["fun","mnesia","mnesia:deactivate_checkpoint/1",
              "Deactivate a checkpoint."],
             ["fun","mnesia","mnesia:del_table_copy/2",
              "Delete the replica of table <c>Tab</c>at node <c>N"],
             ["fun","mnesia","mnesia:del_table_index/2",
              "Delete an index in a table. "],
             ["fun","mnesia","mnesia:delete/2",
              "Delete all records in table <c>Tab</c>with the key"],
             ["fun","mnesia","mnesia:delete/3",
              "Delete all records in table <c>Tab</c>with the key"],
             ["fun","mnesia","mnesia:delete_object/1","Delete a record"],
             ["fun","mnesia","mnesia:delete_object/3","Delete a record"],
             ["fun","mnesia","mnesia:delete_schema/1",
              "Delete the schema on the given nodes"],
             ["fun","mnesia","mnesia:delete_table/1",
              "Delete permanently all replicas of table <c>Tab</c"],
             ["fun","mnesia","mnesia:dirty_all_keys/1",
              "Dirty search for all record keys in table."],
             ["fun","mnesia","mnesia:dirty_delete/2",
              "Dirty delete of a record."],
             ["fun","mnesia","mnesia:dirty_delete/2",
              "Dirty delete of a record. "],
             ["fun","mnesia","mnesia:dirty_delete_object/1",
              "Dirty delete of a record."],
             ["fun","mnesia","mnesia:dirty_delete_object/2",
              "Dirty delete of a record. "],
             ["fun","mnesia","mnesia:dirty_first/1",
              "Return the key for the first record in a table."],
             ["fun","mnesia","mnesia:dirty_index_match_object/2",
              "Dirty pattern match using index."],
             ["fun","mnesia","mnesia:dirty_index_match_object/3",
              "Dirty pattern match using index."],
             ["fun","mnesia","mnesia:dirty_index_read/3",
              "Dirty read using index."],
             ["fun","mnesia","mnesia:dirty_last/1",
              "Return the key for the last record in a table."],
             ["fun","mnesia","mnesia:dirty_match_object/1",
              "Dirty pattern match pattern."],
             ["fun","mnesia","mnesia:dirty_match_object/2",
              "Dirty pattern match pattern."],
             ["fun","mnesia","mnesia:dirty_next/2",
              "Return the next key in a table. "],
             ["fun","mnesia","mnesia:dirty_prev/2",
              "Return the previous key in a table. "],
             ["fun","mnesia","mnesia:dirty_read/2","Dirty read of records."],
             ["fun","mnesia","mnesia:dirty_read/2","Dirty read of records."],
             ["fun","mnesia","mnesia:dirty_select/2",
              "Dirty match the objects in <c>Tab</c>against <c>Ma"],
             ["fun","mnesia","mnesia:dirty_slot/2",
              "Return the list of records that are associated wit"],
             ["fun","mnesia","mnesia:dirty_update_counter/3",
              "Dirty update of a counter record."],
             ["fun","mnesia","mnesia:dirty_update_counter/3",
              "Dirty update of a counter record."],
             ["fun","mnesia","mnesia:dirty_write/1",
              "Dirty write of a record."],
             ["fun","mnesia","mnesia:dirty_write/2",
              "Dirty write of a record."],
             ["fun","mnesia","mnesia:dump_log/0",
              "Perform a user initiated dump of the local log fil"],
             ["fun","mnesia","mnesia:dump_tables/1",
              "Dump all RAM tables to disc."],
             ["fun","mnesia","mnesia:dump_to_textfile/1",
              "Dump local tables into a text file."],
             ["fun","mnesia","mnesia:error_description/1",
              "Return a string describing a particular Mnesia err"],
             ["fun","mnesia","mnesia:ets/3",
              "Call the Fun in a raw context which is not protect"],
             ["fun","mnesia","mnesia:first/1",
              "Return the key for the first record in a table."],
             ["fun","mnesia","mnesia:foldl/3",
              "Call Function for each record in Table "],
             ["fun","mnesia","mnesia:foldr/3",
              "Call Function for each record in Table  "],
             ["fun","mnesia","mnesia:force_load_table/1",
              "Force a table to be loaded into the system "],
             ["fun","mnesia","mnesia:index_match_object/2",
              "Match records and utilizes index information."],
             ["fun","mnesia","mnesia:index_match_object/4",
              "Match records and utilizes index information."],
             ["fun","mnesia","mnesia:index_read/3",
              "Read records via index table. "],
             ["fun","mnesia","mnesia:info/0",
              "Print some information about the system on the tty"],
             ["fun","mnesia","mnesia:install_fallback/1",
              "Install a backup as fallback."],
             ["fun","mnesia","mnesia:install_fallback/1",
              "Install a backup as fallback."],
             ["fun","mnesia","mnesia:install_fallback/2",
              "Install a backup as fallback."],
             ["fun","mnesia","mnesia:is_transaction/0",
              "Check if code is running in a transaction."],
             ["fun","mnesia","mnesia:last/1",
              "Return the key for the last record in a table."],
             ["fun","mnesia","mnesia:load_textfile/1",
              "Load tables from a text file."],
             ["fun","mnesia","mnesia:lock/2","Explicit grab lock."],
             ["fun","mnesia","mnesia:match_object/1",
              "Match <c>Pattern</c>for records.   "],
             ["fun","mnesia","mnesia:match_object/3",
              "Match <c>Pattern</c>for records. "],
             ["fun","mnesia","mnesia:move_table_copy/3",
              "Move the copy of table <c>Tab</c>from node<c>From<"],
             ["fun","mnesia","mnesia:next/2",
              "Return the next key in a table. "],
             ["fun","mnesia","mnesia:prev/2",
              "Return the previous key in a table. "],
             ["fun","mnesia","mnesia:read/2",
              "Read records(s) with a given key. "],
             ["fun","mnesia","mnesia:read/2",
              "Read records(s) with a given key. "],
             ["fun","mnesia","mnesia:read/3",
              "Read records(s) with a given key. "],
             ["fun","mnesia","mnesia:read_lock_table/1",
              "Set a read lock on an entire table."],
             ["fun","mnesia","mnesia:report_event/1",
              "Report a user event to Mnesia's event handler."],
             ["fun","mnesia","mnesia:restore/2","Online restore of backup."],
             ["fun","mnesia","mnesia:s_delete/2",
              "Set sticky lock and delete records."],
             ["fun","mnesia","mnesia:s_delete_object/1",
              "Set sticky lock and delete record."],
             ["fun","mnesia","mnesia:s_write/1",
              "Write <c>Record</c>and sets stick lock."],
             ["fun","mnesia","mnesia:schema/0",
              "Print information about all table definitions on t"],
             ["fun","mnesia","mnesia:schema/1",
              "Print information about one table definition on th"],
             ["fun","mnesia","mnesia:select/3",
              "Match the objects in <c>Tab</c>against <c>MatchSpe"],
             ["fun","mnesia","mnesia:select/4",
              "Match the objects in <c>Tab</c>against <c>MatchSpe"],
             ["fun","mnesia","mnesia:select/1",
              "Continues selecting objects.   "],
             ["fun","mnesia","mnesia:set_debug_level/1",
              "Change the internal debug level of Mnesia"],
             ["fun","mnesia","mnesia:set_master_nodes/1",
              "Set the master nodes for all tables"],
             ["fun","mnesia","mnesia:set_master_nodes/2",
              "Set the master nodes for a table"],
             ["fun","mnesia","mnesia:snmp_close_table/1",
              "Remove the possibility for SNMP to manipulate the "],
             ["fun","mnesia","mnesia:snmp_get_mnesia_key/2",
              "Get the corresponding Mnesia key from an SNMP inde"],
             ["fun","mnesia","mnesia:snmp_get_next_index/2",
              "Get the index of the next lexicographical row."],
             ["fun","mnesia","mnesia:snmp_get_row/2",
              "Retrieve a row indexed by an SNMP index."],
             ["fun","mnesia","mnesia:snmp_open_table/2",
              "Organize a Mnesia table  as an SNMP table."],
             ["fun","mnesia","mnesia:start/0","Start a local Mnesia system."],
             ["fun","mnesia","mnesia:stop/0","Stop Mnesia locally."],
             ["fun","mnesia","mnesia:subscribe/1",
              "Subscribe to events of type <c>EventCategory</c>."],
             ["fun","mnesia","mnesia:sync_dirty/3",
              "Call the Fun in a context which is not protected b"],
             ["fun","mnesia","mnesia:sync_transaction/4",
              "Synchronously execute a transaction."],
             ["fun","mnesia","mnesia:system_info/1",
              "Return information about the Mnesia system"],
             ["fun","mnesia","mnesia:table/2","Return a QLC query handle."],
             ["fun","mnesia","mnesia:table_info/2",
              "Return local information about table."],
             ["fun","mnesia","mnesia:transaction/3","Execute a transaction."],
             ["fun","mnesia","mnesia:transform_table/4",
              "Change format on all records in table. <c>Tab</c>"],
             ["fun","mnesia","mnesia:transform_table/3",
              "Change format on all records in table. <c>Tab</c>"],
             ["fun","mnesia","mnesia:traverse_backup/6",
              "Traversal of a backup."],
             ["fun","mnesia","mnesia:uninstall_fallback/0",
              "Uninstall a fallback."],
             ["fun","mnesia","mnesia:uninstall_fallback/1",
              "Uninstall a fallback."],
             ["fun","mnesia","mnesia:unsubscribe/1",
              "Subscribe to events of type <c>EventCategory</c>."],
             ["fun","mnesia","mnesia:wait_for_tables/2",
              "Wait for tables to be accessible."],
             ["fun","mnesia","mnesia:wread/2","Read records with given key."],
             ["fun","mnesia","mnesia:write/1",
              "Writes a record into the database."],
             ["fun","mnesia","mnesia:write/3",
              "Write an record into the database."],
             ["fun","mnesia","mnesia:write_lock_table/1",
              "Set write lock on an entire table."],
             ["fun","mnesia","mnesia_frag_hash:init_state/2",
              "Initiate the hash state for a new table"],
             ["fun","mnesia","mnesia_frag_hash:add_frag/1",
              "This function is invoked when a new fragment is ad"],
             ["fun","mnesia","mnesia_frag_hash:del_frag/1",
              "This function is invoked when a fragment is delete"],
             ["fun","mnesia","mnesia_frag_hash:key_to_frag_number/2",
              "Resolves the key of a record into a fragment numbe"],
             ["fun","mnesia","mnesia_frag_hash:match_spec_to_frag_numbers/2",
              "Resolves a MatchSpec into a list of fragment numbe"],
             ["fun","mnesia","mnesia_registry:create_table/1",
              "Creates a registry table in Mnesia."],
             ["fun","mnesia","mnesia_registry:create_table/2",
              "Creates a customized registry table in Mnesia. "],
             ["fun","megaco","megaco:start/0","Starts the Megaco application"],
             ["fun","megaco","megaco:stop/0","Stops the Megaco application"],
             ["fun","megaco","megaco:start_user/2",
              "Initial configuration of a user"],
             ["fun","megaco","megaco:stop_user/1",
              "Delete the configuration of a user"],
             ["fun","megaco","megaco:user_info/1","Lookup user information"],
             ["fun","megaco","megaco:user_info/2","Lookup user information"],
             ["fun","megaco","megaco:update_user_info/3",
              "Update information about a user"],
             ["fun","megaco","megaco:conn_info/1",
              "Lookup information about an active connection"],
             ["fun","megaco","megaco:conn_info/2",
              "Lookup information about an active connection"],
             ["fun","megaco","megaco:update_conn_info/3",
              "Update information about an active connection"],
             ["fun","megaco","megaco:system_info/0",
              "Lookup system information"],
             ["fun","megaco","megaco:system_info/1",
              "Lookup system information"],
             ["fun","megaco","megaco:info/0",
              "All the information of the application"],
             ["fun","megaco","megaco:connect/4",
              "Establish a \"virtual\" connection"],
             ["fun","megaco","megaco:connect/5",
              "Establish a \"virtual\" connection"],
             ["fun","megaco","megaco:disconnect/2",
              "Tear down a \"virtual\" connection"],
             ["fun","megaco","megaco:call/3",
              "Sends one or more transaction request(s) and waits"],
             ["fun","megaco","megaco:cast/3",
              "Sends one or more transaction request(s) but does "],
             ["fun","megaco","megaco:encode_actions/3",
              "Encode action requests for one or more transaction"],
             ["fun","megaco","megaco:token_tag2string/1",
              "Convert a token tag to a string"],
             ["fun","megaco","megaco:token_tag2string/2",
              "Convert a token tag to a string"],
             ["fun","megaco","megaco:token_tag2string/3",
              "Convert a token tag to a string"],
             ["fun","megaco","megaco:cancel/2",
              "Cancel all outstanding messages for this connectio"],
             ["fun","megaco","megaco:process_received_message/4",
              "Process a received message"],
             ["fun","megaco","megaco:process_received_message/5",
              "Process a received message"],
             ["fun","megaco","megaco:receive_message/4",
              "Process a received message"],
             ["fun","megaco","megaco:receive_message/5",
              "Process a received message"],
             ["fun","megaco","megaco:parse_digit_map/1",
              "Parses a digit map body"],
             ["fun","megaco","megaco:eval_digit_map/1",
              "Collect digit map letters according to the digit m"],
             ["fun","megaco","megaco:eval_digit_map/2",
              "Collect digit map letters according to the digit m"],
             ["fun","megaco","megaco:report_digit_event/2",
              "Send one or more events to the event collector pro"],
             ["fun","megaco","megaco:test_digit_event/2",
              "Feed digit map collector with events and return th"],
             ["fun","megaco","megaco:encode_sdp/1","Encode an SDP construct"],
             ["fun","megaco","megaco:decode_sdp/1",
              "Decode an property parameter construct"],
             ["fun","megaco","megaco:get_sdp_record_from_PropertGroup/2",
              "Get all sdp records of a certain type from a prope"],
             ["fun","megaco","megaco:versions1/0",
              "Retreive various system and application info"],
             ["fun","megaco","megaco:versions2/0",
              "Retreive various system and application info"],
             ["fun","megaco","megaco:print_version_info/0",
              "Formated print of result of the versions functions"],
             ["fun","megaco","megaco:print_version_info/1",
              "Formated print of result of the versions functions"],
             ["fun","megaco","megaco:enable_trace/2","Start megaco tracing"],
             ["fun","megaco","megaco:disable_trace/0","Stop megaco tracing"],
             ["fun","megaco","megaco:set_trace/1","Change megaco trace level"],
             ["fun","megaco","megaco:get_stats/0",[]],
             ["fun","megaco","megaco:get_stats/1",[]],
             ["fun","megaco","megaco:get_stats/1",[]],
             ["fun","megaco","megaco:get_stats/2",[]],
             ["fun","megaco","megaco:reset_stats/0",[]],
             ["fun","megaco","megaco:reset_stats/1",[]],
             ["fun","megaco","megaco:test_request/5",
              "Tests if the Actions argument is correct"],
             ["fun","megaco","megaco:test_reply/5",
              "Tests if the Reply argument is correct"],
             ["fun","megaco","megaco_codec_meas:start/0",[]],
             ["fun","megaco","megaco_codec_meas:start/1",[]],
             ["fun","megaco","megaco_codec_mstone1:start/0",[]],
             ["fun","megaco","megaco_codec_mstone1:start/1",[]],
             ["fun","megaco","megaco_codec_mstone1:start/2",[]],
             ["fun","megaco","megaco_codec_mstone1:start_flex/0",[]],
             ["fun","megaco","megaco_codec_mstone1:start_flex/1",[]],
             ["fun","megaco","megaco_codec_mstone1:start_flex/2",[]],
             ["fun","megaco","megaco_codec_mstone1:start_only_drv/0",[]],
             ["fun","megaco","megaco_codec_mstone1:start_only_drv/1",[]],
             ["fun","megaco","megaco_codec_mstone1:start_only_drv/2",[]],
             ["fun","megaco","megaco_codec_mstone1:start_no_drv/0",[]],
             ["fun","megaco","megaco_codec_mstone1:start_no_drv/1",[]],
             ["fun","megaco","megaco_codec_mstone1:start_no_drv/2",[]],
             ["fun","megaco","megaco_codec_mstone2:start/0",[]],
             ["fun","megaco","megaco_codec_mstone2:start/1",[]],
             ["fun","megaco","megaco_codec_transform:export_messages/0",[]],
             ["fun","megaco","megaco_codec_transform:export_messages/1",[]],
             ["fun","megaco","megaco_edist_compress:encode/2",
              "Encode (compress) a megaco component."],
             ["fun","megaco","megaco_edist_compress:decode/2",
              "Decode (decompress) a megaco component."],
             ["fun","megaco","megaco_encoder:encode_message/3",
              "Encode a megaco message."],
             ["fun","megaco","megaco_encoder:decode_message/3",
              "Decode a megaco message."],
             ["fun","megaco","megaco_encoder:decode_mini_message/3",
              "Perform a minimal decode of a megaco message."],
             ["fun","megaco","megaco_encoder:encode_transaction/3",
              "Encode a megaco transaction."],
             ["fun","megaco","megaco_encoder:encode_action_requests/3",
              "Encode megaco action requests."],
             ["fun","megaco","megaco_encoder:encode_action_reply/3",
              "Encode a megaco action reply."],
             ["fun","megaco","megaco_flex_scanner:start/0",[]],
             ["fun","megaco","megaco_flex_scanner:stop/1",[]],
             ["fun","megaco","megaco_flex_scanner:is_reentrant_enabled/0",[]],
             ["fun","megaco","megaco_flex_scanner:is_scanner_port/2",[]],
             ["fun","megaco","megaco_flex_scanner:scan/2",[]],
             ["fun","megaco","megaco_tcp:start_transport/0",[]],
             ["fun","megaco","megaco_tcp:listen/2",[]],
             ["fun","megaco","megaco_tcp:connect/2",[]],
             ["fun","megaco","megaco_tcp:close/1",[]],
             ["fun","megaco","megaco_tcp:socket/1",[]],
             ["fun","megaco","megaco_tcp:send_message/2",[]],
             ["fun","megaco","megaco_tcp:block/1",[]],
             ["fun","megaco","megaco_tcp:unblock/1",[]],
             ["fun","megaco","megaco_tcp:upgrade_receive_handle/1",[]],
             ["fun","megaco","megaco_tcp:get_stats/0",[]],
             ["fun","megaco","megaco_tcp:get_stats/1",[]],
             ["fun","megaco","megaco_tcp:get_stats/2",[]],
             ["fun","megaco","megaco_tcp:reset_stats/0",[]],
             ["fun","megaco","megaco_tcp:reset_stats/1",[]],
             ["fun","megaco","megaco_transport:send_message/2",
              "Send a megaco message."],
             ["fun","megaco","megaco_transport:send_message/3",
              "Send a megaco message."],
             ["fun","megaco","megaco_transport:resend_message/2",
              "Re-send a megaco message."],
             ["fun","megaco","megaco_udp:start_transport/0",[]],
             ["fun","megaco","megaco_udp:open/2",[]],
             ["fun","megaco","megaco_udp:close/2",[]],
             ["fun","megaco","megaco_udp:socket/1",[]],
             ["fun","megaco","megaco_udp:create_send_handle/3",[]],
             ["fun","megaco","megaco_udp:send_message/2",[]],
             ["fun","megaco","megaco_udp:block/1",[]],
             ["fun","megaco","megaco_udp:unblock/1",[]],
             ["fun","megaco","megaco_udp:upgrade_receive_handle/2",[]],
             ["fun","megaco","megaco_udp:get_stats/0",[]],
             ["fun","megaco","megaco_udp:get_stats/1",[]],
             ["fun","megaco","megaco_udp:get_stats/2",[]],
             ["fun","megaco","megaco_udp:reset_stats/0",[]],
             ["fun","megaco","megaco_udp:reset_stats/1",[]],
             ["fun","megaco","megaco_user:handle_connect/2",
              "Invoked when a new connection is established"],
             ["fun","megaco","megaco_user:handle_connect/3",
              "Invoked when a new connection is established"],
             ["fun","megaco","megaco_user:handle_disconnect/3",
              "Invoked when a connection is teared down"],
             ["fun","megaco","megaco_user:handle_syntax_error/3",
              "Invoked when a received message had syntax errors"],
             ["fun","megaco","megaco_user:handle_syntax_error/4",
              "Invoked when a received message had syntax errors"],
             ["fun","megaco","megaco_user:handle_message_error/3",
              "Invoked when a received message just contains an e"],
             ["fun","megaco","megaco_user:handle_message_error/4",
              "Invoked when a received message just contains an e"],
             ["fun","megaco","megaco_user:handle_trans_request/3",
              "Invoked for each transaction request"],
             ["fun","megaco","megaco_user:handle_trans_request/4",
              "Invoked for each transaction request"],
             ["fun","megaco","megaco_user:handle_trans_long_request/3",
              "Optionally invoked for a time consuming transactio"],
             ["fun","megaco","megaco_user:handle_trans_long_request/4",
              "Optionally invoked for a time consuming transactio"],
             ["fun","megaco","megaco_user:handle_trans_reply/4",
              "Optionally invoked for a transaction reply"],
             ["fun","megaco","megaco_user:handle_trans_reply/5",
              "Optionally invoked for a transaction reply"],
             ["fun","megaco","megaco_user:handle_trans_ack/4",
              "Optionally invoked for a transaction acknowledgeme"],
             ["fun","megaco","megaco_user:handle_trans_ack/5",
              "Optionally invoked for a transaction acknowledgeme"],
             ["fun","megaco","megaco_user:handle_unexpected_trans/3",
              "Invoked when an unexpected message is received"],
             ["fun","megaco","megaco_user:handle_unexpected_trans/4",
              "Invoked when an unexpected message is received"],
             ["fun","megaco","megaco_user:handle_trans_request_abort/4",
              "Invoked when an transaction request has been abort"],
             ["fun","megaco","megaco_user:handle_trans_request_abort/5",
              "Invoked when an transaction request has been abort"],
             ["fun","megaco","megaco_user:handle_segment_reply/5",
              "Segment Reply Indication"],
             ["fun","megaco","megaco_user:handle_segment_reply/6",
              "Segment Reply Indication"],
             ["fun","kernel","application:get_all_env/0",
              "Get the configuration parameters for an applicatio"],
             ["fun","kernel","application:get_all_env/1",
              "Get the configuration parameters for an applicatio"],
             ["fun","kernel","application:get_all_key/0",
              "Get the application specification keys"],
             ["fun","kernel","application:get_all_key/1",
              "Get the application specification keys"],
             ["fun","kernel","application:get_application/0",
              "Get the name of an application containing a certai"],
             ["fun","kernel","application:get_application/1",
              "Get the name of an application containing a certai"],
             ["fun","kernel","application:get_env/1",
              "Get the value of a configuration parameter"],
             ["fun","kernel","application:get_env/2",
              "Get the value of a configuration parameter"],
             ["fun","kernel","application:get_key/1",
              "Get the value of an application specification key"],
             ["fun","kernel","application:get_key/2",
              "Get the value of an application specification key"],
             ["fun","kernel","application:load/1","Load an application"],
             ["fun","kernel","application:load/2","Load an application"],
             ["fun","kernel","application:loaded_applications/0",
              "Get the currently loaded applications"],
             ["fun","kernel","application:permit/2",
              "Change an application's permission to run on a nod"],
             ["fun","kernel","application:set_env/3",
              "Set the value of a configuration parameter"],
             ["fun","kernel","application:set_env/4",
              "Set the value of a configuration parameter"],
             ["fun","kernel","application:start/1",
              "Load and start an application"],
             ["fun","kernel","application:start/2",
              "Load and start an application"],
             ["fun","kernel","application:start_type/0",
              "Get the start type of an ongoing application start"],
             ["fun","kernel","application:stop/1","Stop an application"],
             ["fun","kernel","application:takeover/2",
              "Take over a distributed application"],
             ["fun","kernel","application:unload/1","Unload an application"],
             ["fun","kernel","application:unset_env/2",
              "Unset the value of a configuration parameter"],
             ["fun","kernel","application:unset_env/3",
              "Unset the value of a configuration parameter"],
             ["fun","kernel","application:which_applications/0",
              "Get the currently running applications"],
             ["fun","kernel","application:which_applications/1",
              "Get the currently running applications"],
             ["fun","kernel","auth:is_auth/1",
              "Status of communication authorization (deprecated)"],
             ["fun","kernel","auth:cookie/0",
              "Magic cookie for local node (deprecated)"],
             ["fun","kernel","auth:cookie/1",
              "Set the magic for the local node (deprecated)"],
             ["fun","kernel","auth:node_cookie/2",
              "Set the magic cookie for a node and verify authori"],
             ["fun","kernel","auth:node_cookie/2",
              "Set the magic cookie for a node and verify authori"],
             ["fun","kernel","code:set_path/1",
              "Set the code server search path"],
             ["fun","kernel","code:get_path/0",
              "Return the code server search path"],
             ["fun","kernel","code:add_path/1",
              "Add a directory to the end of the code path"],
             ["fun","kernel","code:add_pathz/1",
              "Add a directory to the end of the code path"],
             ["fun","kernel","code:add_patha/1",
              "Add a directory to the beginning of the code path"],
             ["fun","kernel","code:add_paths/1",
              "Add directories to the end of the code path"],
             ["fun","kernel","code:add_pathsz/1",
              "Add directories to the end of the code path"],
             ["fun","kernel","code:add_pathsa/1",
              "Add directories to the beginning of the code path"],
             ["fun","kernel","code:del_path/1",
              "Delete a directory from the code path"],
             ["fun","kernel","code:replace_path/2",
              "Replace a directory with another in the code path"],
             ["fun","kernel","code:load_file/1","Load a module"],
             ["fun","kernel","code:load_abs/1",
              "Load a module, residing in a given file"],
             ["fun","kernel","code:ensure_loaded/1",
              "Ensure that a module is loaded"],
             ["fun","kernel","code:load_binary/3",
              "Load object code for a module"],
             ["fun","kernel","code:delete/1",
              "Removes current code for a module"],
             ["fun","kernel","code:purge/1","Removes old code for a module"],
             ["fun","kernel","code:soft_purge/1",
              "Removes old code for a module, unless no process u"],
             ["fun","kernel","code:is_loaded/1","Check if a module is loaded"],
             ["fun","kernel","code:all_loaded/0","Get all loaded modules"],
             ["fun","kernel","code:which/1",
              "The object code file of a module"],
             ["fun","kernel","code:get_object_code/1",
              "Get the object code for a module"],
             ["fun","kernel","code:root_dir/0","Root directory of Erlang/OTP"],
             ["fun","kernel","code:lib_dir/0",
              "Library directory of Erlang/OTP"],
             ["fun","kernel","code:lib_dir/1",
              "Library directory for an application"],
             ["fun","kernel","code:lib_dir/2",
              "subdirectory for an application"],
             ["fun","kernel","code:compiler_dir/0",
              "Library directory for the compiler"],
             ["fun","kernel","code:priv_dir/1",
              "Priv directory for an application"],
             ["fun","kernel","code:objfile_extension/0",
              "Object code file extension"],
             ["fun","kernel","code:stick_dir/1","Mark a directory as sticky"],
             ["fun","kernel","code:unstick_dir/1",
              "Remove a sticky directory mark"],
             ["fun","kernel","code:is_sticky/1",
              "Test whether a module is sticky"],
             ["fun","kernel","code:rehash/0",
              "Rehash or create code path cache"],
             ["fun","kernel","code:where_is_file/1",
              "Full name of a file located in the code path"],
             ["fun","kernel","code:clash/0",
              "Search for modules with identical names."],
             ["fun","kernel","code:is_module_native/1",
              "Test whether a module has native code"],
             ["fun","kernel","disk_log:accessible_logs/0",
              "Return the accessible disk logs on the  current no"],
             ["fun","kernel","disk_log:alog/2",
              "Asynchronously log an item onto a disk log."],
             ["fun","kernel","disk_log:balog/2",
              "Asynchronously log an item onto a disk log."],
             ["fun","kernel","disk_log:alog_terms/2",
              "Asynchronously log several items onto a disk log."],
             ["fun","kernel","disk_log:balog_terms/2",
              "Asynchronously log several items onto a disk log."],
             ["fun","kernel","disk_log:block/1","Block a disk log."],
             ["fun","kernel","disk_log:block/2","Block a disk log."],
             ["fun","kernel","disk_log:change_header/2",
              "Change the head or head_func option for an owner o"],
             ["fun","kernel","disk_log:change_notify/3",
              "Change the notify option for an owner of a  disk l"],
             ["fun","kernel","disk_log:change_size/2",
              "Change the size of an open disk log."],
             ["fun","kernel","disk_log:chunk/2",
              "Read a chunk of items written to a disk log."],
             ["fun","kernel","disk_log:chunk/3",
              "Read a chunk of items written to a disk log."],
             ["fun","kernel","disk_log:bchunk/2",
              "Read a chunk of items written to a disk log."],
             ["fun","kernel","disk_log:bchunk/3",
              "Read a chunk of items written to a disk log."],
             ["fun","kernel","disk_log:chunk_info/1",
              "Return information about a chunk continuation of  "],
             ["fun","kernel","disk_log:chunk_step/3",
              "Step forward or backward among the wrap log files "],
             ["fun","kernel","disk_log:close/1","Close a disk log."],
             ["fun","kernel","disk_log:format_error/1",
              "Return an English description of a disk log  error"],
             ["fun","kernel","disk_log:inc_wrap_file/1",
              "Change to the next wrap log file of a disk log."],
             ["fun","kernel","disk_log:info/1",
              "Return information about a disk log."],
             ["fun","kernel","disk_log:lclose/1",
              "Close a disk log on one node."],
             ["fun","kernel","disk_log:lclose/2",
              "Close a disk log on one node."],
             ["fun","kernel","disk_log:log/2","Log an item onto a disk log."],
             ["fun","kernel","disk_log:blog/2","Log an item onto a disk log."],
             ["fun","kernel","disk_log:log_terms/2",
              "Log several items onto a disk log."],
             ["fun","kernel","disk_log:blog_terms/2",
              "Log several items onto a disk log."],
             ["fun","kernel","disk_log:open/1","Open a disk log file."],
             ["fun","kernel","disk_log:pid2name/1",
              "Return the name of the disk log handled by a pid."],
             ["fun","kernel","disk_log:reopen/2",
              "Reopen a disk log and save the old log."],
             ["fun","kernel","disk_log:reopen/3",
              "Reopen a disk log and save the old log."],
             ["fun","kernel","disk_log:breopen/3",
              "Reopen a disk log and save the old log."],
             ["fun","kernel","disk_log:sync/1",
              "Flush the contents of a disk log to the disk."],
             ["fun","kernel","disk_log:truncate/1","Truncate a disk log."],
             ["fun","kernel","disk_log:truncate/2","Truncate a disk log."],
             ["fun","kernel","disk_log:btruncate/2","Truncate a disk log."],
             ["fun","kernel","disk_log:unblock/1","Unblock a disk log."],
             ["fun","kernel","erl_boot_server:start/1",
              "Start the boot server"],
             ["fun","kernel","erl_boot_server:start_link/1",
              "Start the boot server and links the caller"],
             ["fun","kernel","erl_boot_server:add_slave/1",
              "Add a slave to the list of allowed slaves"],
             ["fun","kernel","erl_boot_server:delete_slave/1",
              "Delete a slave from the list of allowed slaves"],
             ["fun","kernel","erl_boot_server:which_slaves/0",
              "Return the current list of allowed slave hosts"],
             ["fun","kernel","erl_ddll:demonitor/1",
              "Remove a monitor for a driver"],
             ["fun","kernel","erl_ddll:info/0",
              "Retrieve information about all drivers"],
             ["fun","kernel","erl_ddll:info/1",
              "Retrieve information about one driver"],
             ["fun","kernel","erl_ddll:info/2",
              "Retrieve specific information about one driver"],
             ["fun","kernel","erl_ddll:load/2","Load a driver"],
             ["fun","kernel","erl_ddll:load_driver/2","Load a driver"],
             ["fun","kernel","erl_ddll:monitor/2",
              "Create a monitor for a driver"],
             ["fun","kernel","erl_ddll:reload/2","Replace a driver"],
             ["fun","kernel","erl_ddll:reload_driver/2","Replace a driver"],
             ["fun","kernel","erl_ddll:try_load/3","Load a driver"],
             ["fun","kernel","erl_ddll:try_unload/2","Unload a driver"],
             ["fun","kernel","erl_ddll:unload/1","Unload a driver"],
             ["fun","kernel","erl_ddll:unload_driver/1","Unload a driver"],
             ["fun","kernel","erl_ddll:loaded_drivers/0",
              "List loaded drivers"],
             ["fun","kernel","erl_ddll:format_error/1",
              "Format an error descriptor"],
             ["fun","kernel","error_handler:undefined_function/3",
              "Called when an undefined function is encountered"],
             ["fun","kernel","error_handler:undefined_lambda/3",
              "Called when an undefined lambda (fun) is encounter"],
             ["fun","kernel","error_logger:error_msg/1",
              "Send an standard error event to the error logger"],
             ["fun","kernel","error_logger:error_msg/2",
              "Send an standard error event to the error logger"],
             ["fun","kernel","error_logger:format/2",
              "Send an standard error event to the error logger"],
             ["fun","kernel","error_logger:error_report/1",
              "Send a standard error report event to the error lo"],
             ["fun","kernel","error_logger:error_report/2",
              "Send a user defined error report event to the erro"],
             ["fun","kernel","error_logger:warning_map/0",
              "Return the current mapping for warning events"],
             ["fun","kernel","error_logger:warning_msg/1",
              "Send a standard warning event to the error logger"],
             ["fun","kernel","error_logger:warning_msg/2",
              "Send a standard warning event to the error logger"],
             ["fun","kernel","error_logger:warning_report/1",
              "Send a standard warning report event to the error "],
             ["fun","kernel","error_logger:warning_report/2",
              "Send a user defined warning report event to the er"],
             ["fun","kernel","error_logger:info_msg/1",
              "Send a standard information event to the error log"],
             ["fun","kernel","error_logger:info_msg/2",
              "Send a standard information event to the error log"],
             ["fun","kernel","error_logger:info_report/1",
              "Send a standard information report event to the er"],
             ["fun","kernel","error_logger:info_report/2",
              "Send a user defined information report event to th"],
             ["fun","kernel","error_logger:add_report_handler/1",
              "Add an event handler to the error logger"],
             ["fun","kernel","error_logger:add_report_handler/2",
              "Add an event handler to the error logger"],
             ["fun","kernel","error_logger:delete_report_handler/1",
              "Delete an event handler from the error logger"],
             ["fun","kernel","error_logger:tty/1",
              "Enable or disable printouts to the tty"],
             ["fun","kernel","error_logger:logfile/1",
              "Enable or disable error printouts to a file"],
             ["fun","kernel","file:change_group/2","Change group of a file"],
             ["fun","kernel","file:change_owner/2","Change owner of a file"],
             ["fun","kernel","file:change_owner/3",
              "Change owner and group of a file"],
             ["fun","kernel","file:change_time/2",
              "Change the modification time of a file"],
             ["fun","kernel","file:change_time/3",
              "Change the modification and last access time of a "],
             ["fun","kernel","file:close/1","Close a file"],
             ["fun","kernel","file:consult/1","Read Erlang terms from a file"],
             ["fun","kernel","file:copy/2","Copy file contents"],
             ["fun","kernel","file:copy/3","Copy file contents"],
             ["fun","kernel","file:del_dir/1","Delete a directory"],
             ["fun","kernel","file:delete/1","Delete a file"],
             ["fun","kernel","file:eval/1",
              "Evaluate Erlang expressions in a file"],
             ["fun","kernel","file:eval/2",
              "Evaluate Erlang expressions in a file"],
             ["fun","kernel","file:file_info/1",
              "Get information about a file (deprecated)"],
             ["fun","kernel","file:format_error/1",
              "Return a descriptive string for an error reason"],
             ["fun","kernel","file:get_cwd/0",
              "Get the current working directory"],
             ["fun","kernel","file:get_cwd/1",
              "Get the current working directory for the drive sp"],
             ["fun","kernel","file:list_dir/1","List files in a directory"],
             ["fun","kernel","file:make_dir/1","Make a directory"],
             ["fun","kernel","file:make_link/2","Make a hard link to a file"],
             ["fun","kernel","file:make_symlink/2",
              "Make a symbolic link to a file or directory"],
             ["fun","kernel","file:open/2","Open a file"],
             ["fun","kernel","file:path_consult/2",
              "Read Erlang terms from a file"],
             ["fun","kernel","file:path_eval/2",
              "Evaluate Erlang expressions in a file"],
             ["fun","kernel","file:path_open/3","Open a file"],
             ["fun","kernel","file:path_script/2",
              "Evaluate and return the value of Erlang expression"],
             ["fun","kernel","file:path_script/3",
              "Evaluate and return the value of Erlang expression"],
             ["fun","kernel","file:pid2name/1",
              "Return the name of the file handled by a pid"],
             ["fun","kernel","file:position/2","Set position in a file"],
             ["fun","kernel","file:pread/2",
              "Read from a file at certain positions"],
             ["fun","kernel","file:pread/3",
              "Read from a file at a certain position"],
             ["fun","kernel","file:pwrite/2",
              "Write to a file at certain positions"],
             ["fun","kernel","file:pwrite/3",
              "Write to a file at a certain position"],
             ["fun","kernel","file:read/2","Read from a file"],
             ["fun","kernel","file:read_file/1","Read a file"],
             ["fun","kernel","file:read_file_info/1",
              "Get information about a file"],
             ["fun","kernel","file:read_line/1","Read a line from a file"],
             ["fun","kernel","file:read_link/1",
              "See what a link is pointing to"],
             ["fun","kernel","file:read_link_info/1",
              "Get information about a link or file"],
             ["fun","kernel","file:rename/2","Rename a file"],
             ["fun","kernel","file:script/1",
              "Evaluate and return the value of Erlang expression"],
             ["fun","kernel","file:script/2",
              "Evaluate and return the value of Erlang expression"],
             ["fun","kernel","file:set_cwd/1",
              "Set the current working directory"],
             ["fun","kernel","file:sync/1",
              "Synchronizes the in-memory state of a file with th"],
             ["fun","kernel","file:truncate/1","Truncate a file"],
             ["fun","kernel","file:write/2","Write to a file"],
             ["fun","kernel","file:write_file/2","Write a file"],
             ["fun","kernel","file:write_file/3","Write a file"],
             ["fun","kernel","file:write_file_info/2",
              "Change information about a file"],
             ["fun","kernel","gen_sctp:abort/1",
              "Abnormally terminate the association given by Asso"],
             ["fun","kernel","gen_sctp:close/1",
              "Completely close the socket and all associations o"],
             ["fun","kernel","gen_sctp:connect/4",
              "Same as <c>connect(Socket, Addr, Port, Opts, infin"],
             ["fun","kernel","gen_sctp:connect/5",
              "Establish a new association for the socket <c>Sock"],
             ["fun","kernel","gen_sctp:controlling_process/1",
              "Assign a new controlling process pid to the socket"],
             ["fun","kernel","gen_sctp:eof/2",
              "Gracefully terminate the association given by Asso"],
             ["fun","kernel","gen_sctp:listen/2","Set up a socket to listen."],
             ["fun","kernel","gen_sctp:open/0",
              "Create an SCTP socket and bind it to local address"],
             ["fun","kernel","gen_sctp:open/1",
              "Create an SCTP socket and bind it to local address"],
             ["fun","kernel","gen_sctp:open/1",
              "Create an SCTP socket and bind it to local address"],
             ["fun","kernel","gen_sctp:open/2",
              "Create an SCTP socket and bind it to local address"],
             ["fun","kernel","gen_sctp:recv/1",
              "Receive a message from a socket"],
             ["fun","kernel","gen_sctp:recv/1",
              "Receive a message from a socket"],
             ["fun","kernel","gen_sctp:send/3",
              "Send a message using an <c>#sctp_sndrcvinfo{}</c>r"],
             ["fun","kernel","gen_sctp:send/4",
              "Send a message over an existing association and gi"],
             ["fun","kernel","gen_sctp:error_string/1",
              "Translate an SCTP error number into a string"],
             ["fun","kernel","gen_tcp:connect/3","Connect to a TCP port"],
             ["fun","kernel","gen_tcp:connect/4","Connect to a TCP port"],
             ["fun","kernel","gen_tcp:listen/2",
              "Set up a socket to listen on a port"],
             ["fun","kernel","gen_tcp:accept/1",
              "Accept an incoming connection request on a listen "],
             ["fun","kernel","gen_tcp:accept/2",
              "Accept an incoming connection request on a listen "],
             ["fun","kernel","gen_tcp:send/2","Send a packet"],
             ["fun","kernel","gen_tcp:recv/2",
              "Receive a packet from a passive socket"],
             ["fun","kernel","gen_tcp:recv/3",
              "Receive a packet from a passive socket"],
             ["fun","kernel","gen_tcp:controlling_process/2",
              "Change controlling process of a socket"],
             ["fun","kernel","gen_tcp:close/1","Close a TCP socket"],
             ["fun","kernel","gen_tcp:shutdown/2",
              "Immediately close a socket"],
             ["fun","kernel","gen_udp:open/1",
              "Associate a UDP port number with the process calli"],
             ["fun","kernel","gen_udp:open/2",
              "Associate a UDP port number with the process calli"],
             ["fun","kernel","gen_udp:send/4","Send a packet"],
             ["fun","kernel","gen_udp:recv/2",
              "Receive a packet from a passive socket"],
             ["fun","kernel","gen_udp:recv/3",
              "Receive a packet from a passive socket"],
             ["fun","kernel","gen_udp:controlling_process/2",
              "Change controlling process of a socket"],
             ["fun","kernel","gen_udp:close/1","Close a UDP socket"],
             ["fun","kernel","global:del_lock/1","Delete a lock"],
             ["fun","kernel","global:del_lock/2","Delete a lock"],
             ["fun","kernel","global:notify_all_name/3",
              "Name resolving function that notifies both pids"],
             ["fun","kernel","global:random_exit_name/3",
              "Name resolving function that kills one pid"],
             ["fun","kernel","global:random_notify_name/3",
              "Name resolving function that notifies one pid"],
             ["fun","kernel","global:register_name/2",
              "Globally register a name for a pid"],
             ["fun","kernel","global:register_name/3",
              "Globally register a name for a pid"],
             ["fun","kernel","global:registered_names/0",
              "All globally registered names"],
             ["fun","kernel","global:re_register_name/2",
              "Atomically re-register a name"],
             ["fun","kernel","global:re_register_name/3",
              "Atomically re-register a name"],
             ["fun","kernel","global:send/2",
              "Send a message to a globally registered pid"],
             ["fun","kernel","global:set_lock/1",
              "Set a lock on the specified nodes"],
             ["fun","kernel","global:set_lock/2",
              "Set a lock on the specified nodes"],
             ["fun","kernel","global:set_lock/3",
              "Set a lock on the specified nodes"],
             ["fun","kernel","global:sync/0",
              "Synchronize the global name server"],
             ["fun","kernel","global:trans/2","Micro transaction facility"],
             ["fun","kernel","global:trans/3","Micro transaction facility"],
             ["fun","kernel","global:trans/4","Micro transaction facility"],
             ["fun","kernel","global:unregister_name/1",
              "Remove a globally registered name for a pid"],
             ["fun","kernel","global:whereis_name/1",
              "Get the pid with a given globally registered name"],
             ["fun","kernel","global_group:global_groups/0",
              "Return the global group names"],
             ["fun","kernel","global_group:info/0",
              "Information about global groups"],
             ["fun","kernel","global_group:monitor_nodes/1",
              "Subscribe to node status changes"],
             ["fun","kernel","global_group:own_nodes/0",
              "Return the group nodes"],
             ["fun","kernel","global_group:registered_names/1",
              "Return globally registered names"],
             ["fun","kernel","global_group:send/2",
              "Send a message to a globally registered pid"],
             ["fun","kernel","global_group:send/3",
              "Send a message to a globally registered pid"],
             ["fun","kernel","global_group:sync/0",
              "Synchronize the group nodes"],
             ["fun","kernel","global_group:whereis_name/1",
              "Get the pid with a given globally registered name"],
             ["fun","kernel","global_group:whereis_name/2",
              "Get the pid with a given globally registered name"],
             ["fun","kernel","heart:set_cmd/1",
              "Set a temporary reboot command"],
             ["fun","kernel","heart:clear_cmd/0",
              "Clear the temporary boot command"],
             ["fun","kernel","heart:get_cmd/0",
              "Get the temporary reboot command"],
             ["fun","kernel","inet:close/1","Close a socket of any type"],
             ["fun","kernel","inet:get_rc/0",
              "Return a list of IP configuration parameters"],
             ["fun","kernel","inet:format_error/1",
              "Return a descriptive string for an error reason"],
             ["fun","kernel","inet:getaddr/2",
              "Return the IP-address for a host"],
             ["fun","kernel","inet:getaddrs/2",
              "Return the IP-addresses for a host"],
             ["fun","kernel","inet:gethostbyaddr/1",
              "Return a hostent record for the host with the give"],
             ["fun","kernel","inet:gethostbyname/1",
              "Return a hostent record for the host with the give"],
             ["fun","kernel","inet:gethostbyname/2",
              "Return a hostent record for the host with the give"],
             ["fun","kernel","inet:gethostname/0","Return the local hostname"],
             ["fun","kernel","inet:getopts/2",
              "Get one or more options for a socket"],
             ["fun","kernel","inet:getstat/1",
              "Get one or more statistic options for a socket"],
             ["fun","kernel","inet:getstat/2",
              "Get one or more statistic options for a socket"],
             ["fun","kernel","inet:peername/1",
              "Return the address and port for the other end of a"],
             ["fun","kernel","inet:port/1",
              "Return the local port number for a socket"],
             ["fun","kernel","inet:sockname/1",
              "Return the local address and port number for a soc"],
             ["fun","kernel","inet:setopts/2",
              "Set one or more options for a socket"],
             ["fun","kernel","inet_res:getbyname/2",
              "Resolve a DNS record of the given type for the giv"],
             ["fun","kernel","inet_res:getbyname/3",
              "Resolve a DNS record of the given type for the giv"],
             ["fun","kernel","inet_res:gethostbyaddr/1",
              "Return a hostent record for the host with the give"],
             ["fun","kernel","inet_res:gethostbyaddr/2",
              "Return a hostent record for the host with the give"],
             ["fun","kernel","inet_res:gethostbyname/1",
              "Return a hostent record for the host with the give"],
             ["fun","kernel","inet_res:gethostbyname/2",
              "Return a hostent record for the host with the give"],
             ["fun","kernel","inet_res:gethostbyname/3",
              "Return a hostent record for the host with the give"],
             ["fun","kernel","inet_res:lookup/3",
              "Resolve the DNS data for the record of the given t"],
             ["fun","kernel","inet_res:lookup/4",
              "Resolve the DNS data for the record of the given t"],
             ["fun","kernel","inet_res:lookup/5",
              "Resolve the DNS data for the record of the given t"],
             ["fun","kernel","inet_res:resolve/3",
              "Resolve a DNS record of the given type and class\n "],
             ["fun","kernel","inet_res:resolve/4",
              "Resolve a DNS record of the given type and class\n "],
             ["fun","kernel","inet_res:resolve/5",
              "Resolve a DNS record of the given type and class\n "],
             ["fun","kernel","net_adm:dns_hostname/1",
              "Official name of a host"],
             ["fun","kernel","net_adm:host_file/0",
              "Read the <c>.hosts.erlang</c>file"],
             ["fun","kernel","net_adm:localhost/0","Name of the local host"],
             ["fun","kernel","net_adm:names/0",
              "Names of Erlang nodes at a host"],
             ["fun","kernel","net_adm:names/1",
              "Names of Erlang nodes at a host"],
             ["fun","kernel","net_adm:ping/1","Set up a connection to a node"],
             ["fun","kernel","net_adm:world/0",
              "Lookup and connect to all nodes at all hosts in <c"],
             ["fun","kernel","net_adm:world/1",
              "Lookup and connect to all nodes at all hosts in <c"],
             ["fun","kernel","net_adm:world_list/1",
              "Lookup and connect to all nodes at specified hosts"],
             ["fun","kernel","net_adm:world_list/2",
              "Lookup and connect to all nodes at specified hosts"],
             ["fun","kernel","net_kernel:allow/1",
              "Limit access to a specified set of nodes"],
             ["fun","kernel","net_kernel:connect_node/1",
              "Establish a connection to a node"],
             ["fun","kernel","net_kernel:monitor_nodes/1",
              "Subscribe to node status change messages"],
             ["fun","kernel","net_kernel:monitor_nodes/2",
              "Subscribe to node status change messages"],
             ["fun","kernel","net_kernel:get_net_ticktime/0",
              "Get <c>net_ticktime</c>"],
             ["fun","kernel","net_kernel:set_net_ticktime/1",
              "Set <c>net_ticktime</c>"],
             ["fun","kernel","net_kernel:set_net_ticktime/2",
              "Set <c>net_ticktime</c>"],
             ["fun","kernel","net_kernel:start/1",
              "Turn an Erlang runtime system into a distributed n"],
             ["fun","kernel","net_kernel:start/2",
              "Turn an Erlang runtime system into a distributed n"],
             ["fun","kernel","net_kernel:start/3",
              "Turn an Erlang runtime system into a distributed n"],
             ["fun","kernel","net_kernel:stop/0",
              "Turn a node into a non-distributed Erlang runtime "],
             ["fun","kernel","os:cmd/1",
              "Execute a command in a shell of the target OS"],
             ["fun","kernel","os:find_executable/1",
              "Absolute filename of a program"],
             ["fun","kernel","os:find_executable/2",
              "Absolute filename of a program"],
             ["fun","kernel","os:getenv/0","List all environment variables"],
             ["fun","kernel","os:getenv/1",
              "Get the value of an environment variable"],
             ["fun","kernel","os:getpid/0",
              "Return the process identifier of the emulator proc"],
             ["fun","kernel","os:putenv/2",
              "Set a new value for an environment variable"],
             ["fun","kernel","os:timestamp/0",
              "Returna a timestamp from the OS in the erlang:now/"],
             ["fun","kernel","os:type/0",
              "Return the OS family and, in some cases, OS name o"],
             ["fun","kernel","os:version/0",
              "Return the Operating System version"],
             ["fun","kernel","pg2:create/1",
              "Create a new, empty process group"],
             ["fun","kernel","pg2:delete/1","Delete a process group"],
             ["fun","kernel","pg2:get_closest_pid/1",
              "Common dispatch function"],
             ["fun","kernel","pg2:get_members/1",
              "Return all processes in a group"],
             ["fun","kernel","pg2:get_local_members/1",
              "Return all local processes in a group"],
             ["fun","kernel","pg2:join/2","Join a process to a group"],
             ["fun","kernel","pg2:leave/2","Make a process leave a group"],
             ["fun","kernel","pg2:which_groups/0",
              "Return a list of all known groups"],
             ["fun","kernel","pg2:start/0","Start the pg2 server"],
             ["fun","kernel","pg2:start_link/0","Start the pg2 server"],
             ["fun","kernel","rpc:call/4",
              "Evaluate a function call on a node"],
             ["fun","kernel","rpc:call/5",
              "Evaluate a function call on a node"],
             ["fun","kernel","rpc:block_call/4",
              "Evaluate a function call on a node in the RPC serv"],
             ["fun","kernel","rpc:block_call/5",
              "Evaluate a function call on a node in the RPC serv"],
             ["fun","kernel","rpc:async_call/4",
              "Evaluate a function call on a node, asynchronous v"],
             ["fun","kernel","rpc:yield/1",
              "Deliver the result of evaluating a function call o"],
             ["fun","kernel","rpc:nb_yield/1",
              "Deliver the result of evaluating a function call o"],
             ["fun","kernel","rpc:nb_yield/2",
              "Deliver the result of evaluating a function call o"],
             ["fun","kernel","rpc:multicall/3",
              "Evaluate a function call on a number of nodes"],
             ["fun","kernel","rpc:multicall/4",
              "Evaluate a function call on a number of nodes"],
             ["fun","kernel","rpc:multicall/4",
              "Evaluate a function call on a number of nodes"],
             ["fun","kernel","rpc:multicall/5",
              "Evaluate a function call on a number of nodes"],
             ["fun","kernel","rpc:cast/4",
              "Run a function on a node ignoring the result"],
             ["fun","kernel","rpc:eval_everywhere/3",
              "Run a function on all nodes, ignoring the result"],
             ["fun","kernel","rpc:eval_everywhere/4",
              "Run a function on specific nodes, ignoring the res"],
             ["fun","kernel","rpc:abcast/2",
              "Broadcast a message asynchronously to a registered"],
             ["fun","kernel","rpc:abcast/3",
              "Broadcast a message asynchronously to a registered"],
             ["fun","kernel","rpc:sbcast/2",
              "Broadcast a message synchronously to a registered "],
             ["fun","kernel","rpc:sbcast/3",
              "Broadcast a message synchronously to a registered "],
             ["fun","kernel","rpc:server_call/4",
              "Interact with a server on a node"],
             ["fun","kernel","rpc:multi_server_call/2",
              "Interact with the servers on a number of nodes"],
             ["fun","kernel","rpc:multi_server_call/3",
              "Interact with the servers on a number of nodes"],
             ["fun","kernel","rpc:safe_multi_server_call/2",
              "Interact with the servers on a number of nodes (de"],
             ["fun","kernel","rpc:safe_multi_server_call/3",
              "Interact with the servers on a number of nodes (de"],
             ["fun","kernel","rpc:parallel_eval/1",
              "Evaluate several function calls on all nodes in pa"],
             ["fun","kernel","rpc:pmap/4",
              "Parallell evaluation of mapping a function over a "],
             ["fun","kernel","rpc:pinfo/1","Information about a process"],
             ["fun","kernel","rpc:pinfo/2","Information about a process"],
             ["fun","kernel","seq_trace:set_token/1","Set the trace token"],
             ["fun","kernel","seq_trace:set_token/2",
              "Set a component of the trace token"],
             ["fun","kernel","seq_trace:get_token/0",
              "Return the value of the trace token"],
             ["fun","kernel","seq_trace:get_token/1",
              "Return the value of a trace token component"],
             ["fun","kernel","seq_trace:print/1",
              "Put the Erlang term <c>TraceInfo</c>into the seque"],
             ["fun","kernel","seq_trace:print/2",
              "Put the Erlang term <c>TraceInfo</c>into the seque"],
             ["fun","kernel","seq_trace:reset_trace/0",
              "Stop all sequential tracing on the local node"],
             ["fun","kernel","seq_trace:set_system_tracer/1",
              "Set the system tracer"],
             ["fun","kernel","seq_trace:get_system_tracer/0",
              "Return the pid() or port() of the current system t"],
             ["fun","kernel","wrap_log_reader:chunk/1",
              "Read a chunk of objects written to a wrap log."],
             ["fun","kernel","wrap_log_reader:chunk/2",
              "Read a chunk of objects written to a wrap log."],
             ["fun","kernel","wrap_log_reader:close/1","Close a log"],
             ["fun","kernel","wrap_log_reader:open/1","Open a log file"],
             ["fun","kernel","wrap_log_reader:open/2","Open a log file"],
             ["fun","inviso","inviso:start/0",
              "Start a control component at the local node"],
             ["fun","inviso","inviso:start/1",
              "Start a control component at the local node"],
             ["fun","inviso","inviso:stop/0","Stop the control component"],
             ["fun","inviso","inviso:add_node/1",
              "Starts or adopts a runtime component at the local "],
             ["fun","inviso","inviso:add_node/2",
              "Starts or adopts a runtime component at the local "],
             ["fun","inviso","inviso:add_node_if_ref/1",
              "Start or adopt a runtime component at the local no"],
             ["fun","inviso","inviso:add_node_if_ref/2",
              "Start or adopt a runtime component at the local no"],
             ["fun","inviso","inviso:add_nodes/2",
              "Start or adopt runtime components at some nodes"],
             ["fun","inviso","inviso:add_nodes/3",
              "Start or adopt runtime components at some nodes"],
             ["fun","inviso","inviso:add_nodes_if_ref/2",
              "Start or adopt runtime components at some nodes, p"],
             ["fun","inviso","inviso:add_nodes_if_ref/3",
              "Start or adopt runtime components at some nodes, p"],
             ["fun","inviso","inviso:stop_nodes/0","Stop runtime components"],
             ["fun","inviso","inviso:stop_nodes/1","Stop runtime components"],
             ["fun","inviso","inviso:stop_all/0",
              "Stop both control and runtime components"],
             ["fun","inviso","inviso:change_options/1",
              "Change options for runtime components"],
             ["fun","inviso","inviso:change_options/2",
              "Change options for runtime components"],
             ["fun","inviso","inviso:init_tracing/1","Initiate tracing"],
             ["fun","inviso","inviso:init_tracing/1","Initiate tracing"],
             ["fun","inviso","inviso:init_tracing/2","Initiate tracing"],
             ["fun","inviso","inviso:stop_tracing/1","Stop tracing"],
             ["fun","inviso","inviso:stop_tracing/0","Stop tracing"],
             ["fun","inviso","inviso:clear/0",
              "Stop tracing and remove meta trace patterns"],
             ["fun","inviso","inviso:clear/2",
              "Stop tracing and remove meta trace patterns"],
             ["fun","inviso","inviso:clear/1",
              "Stop tracing and remove meta trace patterns"],
             ["fun","inviso","inviso:tp/6","Set global trace patterns"],
             ["fun","inviso","inviso:tp/5","Set global trace patterns"],
             ["fun","inviso","inviso:tp/5","Set global trace patterns"],
             ["fun","inviso","inviso:tp/4","Set global trace patterns"],
             ["fun","inviso","inviso:tp/2","Set global trace patterns"],
             ["fun","inviso","inviso:tp/1","Set global trace patterns"],
             ["fun","inviso","inviso:tpl/5","Set local trace patterns"],
             ["fun","inviso","inviso:tpl/6","Set local trace patterns"],
             ["fun","inviso","inviso:tpl/4","Set local trace patterns"],
             ["fun","inviso","inviso:tpl/5","Set local trace patterns"],
             ["fun","inviso","inviso:tpl/2","Set local trace patterns"],
             ["fun","inviso","inviso:tpl/1","Set local trace patterns"],
             ["fun","inviso","inviso:ctp/4","Clear global trace patterns"],
             ["fun","inviso","inviso:ctp/3","Clear global trace patterns"],
             ["fun","inviso","inviso:ctpl/4","Clear local trace patterns"],
             ["fun","inviso","inviso:ctpl/3","Clear local trace patterns"],
             ["fun","inviso","inviso:tf/3","Set process trace flags"],
             ["fun","inviso","inviso:tf/2","Set process trace flags"],
             ["fun","inviso","inviso:tf/2","Set process trace flags"],
             ["fun","inviso","inviso:tf/1","Set process trace flags"],
             ["fun","inviso","inviso:tf/1","Set process trace flags"],
             ["fun","inviso","inviso:ctf/3","Clear process trace flags"],
             ["fun","inviso","inviso:ctf/2","Clear process trace flags"],
             ["fun","inviso","inviso:ctf/2","Clear process trace flags"],
             ["fun","inviso","inviso:ctf/1","Clear process trace flags"],
             ["fun","inviso","inviso:ctf_all/1",
              "Clear all process trace flags"],
             ["fun","inviso","inviso:ctf_all/0",
              "Clear all process trace flags"],
             ["fun","inviso","inviso:init_tpm/4","Initialize meta tracing"],
             ["fun","inviso","inviso:init_tpm/5","Initialize meta tracing"],
             ["fun","inviso","inviso:init_tpm/7","Initialize meta tracing"],
             ["fun","inviso","inviso:init_tpm/8","Initialize meta tracing"],
             ["fun","inviso","inviso:tpm/4","Activate meta tracing"],
             ["fun","inviso","inviso:tpm/5","Activate meta tracing"],
             ["fun","inviso","inviso:tpm/5","Activate meta tracing"],
             ["fun","inviso","inviso:tpm/6","Activate meta tracing"],
             ["fun","inviso","inviso:tpm/8","Activate meta tracing"],
             ["fun","inviso","inviso:tpm/9","Activate meta tracing"],
             ["fun","inviso","inviso:tpm_tracer/4",
              "Activate meta tracing and at the same time append "],
             ["fun","inviso","inviso:tpm_tracer/5",
              "Activate meta tracing and at the same time append "],
             ["fun","inviso","inviso:tpm_tracer/5",
              "Activate meta tracing and at the same time append "],
             ["fun","inviso","inviso:tpm_tracer/6",
              "Activate meta tracing and at the same time append "],
             ["fun","inviso","inviso:tpm_tracer/8",
              "Activate meta tracing and at the same time append "],
             ["fun","inviso","inviso:tpm_tracer/9",
              "Activate meta tracing and at the same time append "],
             ["fun","inviso","inviso:tpm_ms/5","Add match specifications"],
             ["fun","inviso","inviso:tpm_ms/6","Add match specifications"],
             ["fun","inviso","inviso:tpm_ms_tracer/5",
              "Add match specifications and at the same time appe"],
             ["fun","inviso","inviso:tpm_ms_tracer/6",
              "Add match specifications and at the same time appe"],
             ["fun","inviso","inviso:ctpm_ms/4",
              "Remove a match specification"],
             ["fun","inviso","inviso:ctpm_ms/5",
              "Remove a match specification"],
             ["fun","inviso","inviso:ctpm/3","Remove a meta trace pattern"],
             ["fun","inviso","inviso:ctpm/4","Remove a meta trace pattern"],
             ["fun","inviso","inviso:tpm_localnames/0",
              "Set meta trace pattern on <c>register/2</c>"],
             ["fun","inviso","inviso:tpm_localnames/1",
              "Set meta trace pattern on <c>register/2</c>"],
             ["fun","inviso","inviso:ctpm_localnames/0",
              "Clear meta trace pattern on <c>register/2</c>"],
             ["fun","inviso","inviso:ctpm_localnames/1",
              "Clear meta trace pattern on <c>register/2</c>"],
             ["fun","inviso","inviso:tpm_globalnames/0",
              "Set meta trace pattern on <c>global:register_name/"],
             ["fun","inviso","inviso:tpm_globalnames/1",
              "Set meta trace pattern on <c>global:register_name/"],
             ["fun","inviso","inviso:ctpm_globalnames/0",
              "Clear meta trace pattern on <c>global:register_nam"],
             ["fun","inviso","inviso:ctpm_globalnames/1",
              "Clear meta trace pattern on <c>global:register_nam"],
             ["fun","inviso","inviso:ctp_all/0",
              "Clear all (global and local) trace patterns"],
             ["fun","inviso","inviso:ctp_all/1",
              "Clear all (global and local) trace patterns"],
             ["fun","inviso","inviso:suspend/1","Suspend runtime components"],
             ["fun","inviso","inviso:suspend/2","Suspend runtime components"],
             ["fun","inviso","inviso:cancel_suspension/0",
              "Reactivate suspended runtime components"],
             ["fun","inviso","inviso:cancel_suspend/1",
              "Reactivate suspended runtime components"],
             ["fun","inviso","inviso:get_status/0",
              "Get status of runtime components"],
             ["fun","inviso","inviso:get_status/1",
              "Get status of runtime components"],
             ["fun","inviso","inviso:get_tracerdata/0",
              "Get tracerdata of runtime components"],
             ["fun","inviso","inviso:get_tracerdata/1",
              "Get tracerdata of runtime components"],
             ["fun","inviso","inviso:list_logs/0",
              "Get log file names associated with tracerdata"],
             ["fun","inviso","inviso:list_logs/1",
              "Get log file names associated with tracerdata"],
             ["fun","inviso","inviso:list_logs/1",
              "Get log file names associated with tracerdata"],
             ["fun","inviso","inviso:list_logs/1",
              "Get log file names associated with tracerdata"],
             ["fun","inviso","inviso:fetch_log/3",
              "Fetch log files to control component node"],
             ["fun","inviso","inviso:fetch_log/2",
              "Fetch log files to control component node"],
             ["fun","inviso","inviso:delete_log/2",
              "Delete log files associated with tracerdata"],
             ["fun","inviso","inviso:delete_log/1",
              "Delete log files associated with tracerdata"],
             ["fun","inviso","inviso:delete_log/1",
              "Delete log files associated with tracerdata"],
             ["fun","inviso","inviso:delete_log/1",
              "Delete log files associated with tracerdata"],
             ["fun","inviso","inviso:delete_log/0",
              "Delete log files associated with tracerdata"],
             ["fun","inviso","inviso:subscribe/0",
              "Subscribe to Inviso events"],
             ["fun","inviso","inviso:subscribe/1",
              "Subscribe to Inviso events"],
             ["fun","inviso","inviso:unsubscribe/0",
              "Unsubscribe to Inviso events"],
             ["fun","inviso","inviso:unsubscribe/1",
              "Unsubscribe to Inviso events"],
             ["fun","inviso","inviso_as_lib:setup_autostart/8",
              "Create an autostart configuration file"],
             ["fun","inviso","inviso_as_lib:set_repeat/2",
              "Set the repeat parameter in the autostart file"],
             ["fun","inviso","inviso_as_lib:inhibit_autostart/1",
              "Set the repeat parameter in the autostart file to "],
             ["fun","inviso","inviso_lfm:merge/2",
              "Merge logfiles into one file in chronological orde"],
             ["fun","inviso","inviso_lfm:merge/3",
              "Merge logfiles into one file in chronological orde"],
             ["fun","inviso","inviso_lfm:merge/5",
              "Merge logfiles into one file in chronological orde"],
             ["fun","inviso",
              "inviso_lfm_tpfreader:handle_logfile_sort_wrapset/1",
              "Sort logfiles in chronological order"],
             ["fun","inviso","inviso_rt:init_tracing/1","Initiate tracing"],
             ["fun","inviso","inviso_rt:tp/5","Set global trace patterns"],
             ["fun","inviso","inviso_rt:tp/4","Set global trace patterns"],
             ["fun","inviso","inviso_rt:tp/1","Set global trace patterns"],
             ["fun","inviso","inviso_rt:tpl/4","Set local trace patterns"],
             ["fun","inviso","inviso_rt:tpl/5","Set local trace patterns"],
             ["fun","inviso","inviso_rt:tpl/1","Set local trace patterns"],
             ["fun","inviso","inviso_rt:ctp/3","Clear global trace patterns"],
             ["fun","inviso","inviso_rt:ctpl/3","Clear local trace patterns"],
             ["fun","inviso","inviso_rt:tf/2","Set process trace flags"],
             ["fun","inviso","inviso_rt:tf/1","Set process trace flags"],
             ["fun","inviso","inviso_rt:ctf/2","Clear process trace flags"],
             ["fun","inviso","inviso_rt:ctf/1","Clear process trace flags"],
             ["fun","inviso","inviso_rt:init_tpm/4","Initialize meta tracing"],
             ["fun","inviso","inviso_rt:init_tpm/7","Initialize meta tracing"],
             ["fun","inviso","inviso_rt:tpm/4","Activate meta tracing"],
             ["fun","inviso","inviso_rt:tpm/5","Activate meta tracing"],
             ["fun","inviso","inviso_rt:tpm/8","Activate meta tracing"],
             ["fun","inviso","inviso_rt:tpm_tracer/4","Activate meta tracing"],
             ["fun","inviso","inviso_rt:tpm_tracer/5","Activate meta tracing"],
             ["fun","inviso","inviso_rt:tpm_tracer/8","Activate meta tracing"],
             ["fun","inviso","inviso_rt:tpm_ms/5","Add match specifications"],
             ["fun","inviso","inviso_rt:tpm_ms_tracer/5",
              "Add match specifications"],
             ["fun","inviso","inviso_rt:ctpm_ms/4",
              "Remove a match specification"],
             ["fun","inviso","inviso_rt:ctpm/3","Remove a meta trace pattern"],
             ["fun","inviso","inviso_rt:local_register/0",
              "Set meta trace pattern on <c>register/2</c>"],
             ["fun","inviso","inviso_rt:remove_local_register/0",
              "Clear meta trace pattern on <c>register/2</c>"],
             ["fun","inviso","inviso_rt:global_register/0",
              "Set meta trace pattern on <c>global:register_name/"],
             ["fun","inviso","inviso_rt:remove_global_register/0",
              "Clear meta trace pattern on <c>global:register_nam"],
             ["fun","inviso","inviso_rt_meta:tpm_ms/5",
              "Adds a list of match-specs, associated with the na"],
             ["fun","inviso","inviso_rt_meta:tpm_ms_tracer/5",
              "As tpm_ms_tracer/5 but also adds a <c>{tracer,Trac"],
             ["fun","inviso","inviso_rt_meta:list_tpm_ms/3",
              "Returns a list of <c>MSname</c>."],
             ["fun","inviso","inviso_rt_meta:ctpm_ms/4",
              "Removes the list of match-specs associated with th"],
             ["fun","inviso","inviso_rt_meta:get_tracer/0",
              "Returns the pid or port acting as regular tracer."],
             ["fun","inets","ftp:account/2","Specify which account to use."],
             ["fun","inets","ftp:append/2",
              "Transfer file to remote server, and append it to R"],
             ["fun","inets","ftp:append/3",
              "Transfer file to remote server, and append it to R"],
             ["fun","inets","ftp:append_bin/3",
              "Transfer a binary into a remote file."],
             ["fun","inets","ftp:append_chunk/2",
              "append a chunk to the remote file."],
             ["fun","inets","ftp:append_chunk_start/2",
              "Start transfer of file chunks for appending to Fil"],
             ["fun","inets","ftp:append_chunk_end/1",
              "Stop transfer of chunks for appending."],
             ["fun","inets","ftp:cd/2","Change remote working directory."],
             ["fun","inets","ftp:close/1","End the ftp session."],
             ["fun","inets","ftp:delete/2",
              "Delete a file at the remote server.."],
             ["fun","inets","ftp:formaterror/1","Return error diagnostics."],
             ["fun","inets","ftp:lcd/2","Change local working directory."],
             ["fun","inets","ftp:lpwd/1",
              "Get local current working directory."],
             ["fun","inets","ftp:ls/1","List of files."],
             ["fun","inets","ftp:ls/2","List of files."],
             ["fun","inets","ftp:mkdir/2","Create remote directory."],
             ["fun","inets","ftp:nlist/1","List of files."],
             ["fun","inets","ftp:nlist/2","List of files."],
             ["fun","inets","ftp:open/1","Start an standalone ftp client."],
             ["fun","inets","ftp:open/2","Start an standalone ftp client."],
             ["fun","inets","ftp:pwd/1",
              "Get remote current working directory."],
             ["fun","inets","ftp:pwd/1",
              "Get remote current working directory."],
             ["fun","inets","ftp:recv/2","Transfer file from remote server."],
             ["fun","inets","ftp:recv/3","Transfer file from remote server."],
             ["fun","inets","ftp:recv_bin/2",
              "Transfer file from remote server as a binary."],
             ["fun","inets","ftp:recv_chunk_start/2",
              "Start chunk-reading of the remote file."],
             ["fun","inets","ftp:recv_chunk/1",
              "Receive a chunk of the remote file."],
             ["fun","inets","ftp:rename/3",
              "Rename a file at the remote server.."],
             ["fun","inets","ftp:rmdir/2","Remove a remote directory."],
             ["fun","inets","ftp:send/2","Transfer file to remote server."],
             ["fun","inets","ftp:send/3","Transfer file to remote server."],
             ["fun","inets","ftp:send_bin/3",
              "Transfer a binary into a remote file."],
             ["fun","inets","ftp:send_chunk/2",
              "Write a chunk to the remote file."],
             ["fun","inets","ftp:send_chunk_start/2",
              "Start transfer of file chunks."],
             ["fun","inets","ftp:send_chunk_end/1","Stop transfer of chunks."],
             ["fun","inets","ftp:type/2",
              "Set transfer type to <c>ascii</c>or <c>binary</c>."],
             ["fun","inets","ftp:user/3","User login."],
             ["fun","inets","ftp:user/4","User login."],
             ["fun","inets","ftp:quote/2","Sends an arbitrary FTP command. "],
             ["fun","inets","http:cancel_request/1",
              "Cancels an asynchronous HTTP-request."],
             ["fun","inets","http:cancel_request/2",
              "Cancels an asynchronous HTTP-request."],
             ["fun","inets","http:request/1","Sends a get HTTP-request"],
             ["fun","inets","http:request/2","Sends a get HTTP-request"],
             ["fun","inets","http:request/4","Sends a HTTP-request"],
             ["fun","inets","http:request/5","Sends a HTTP-request"],
             ["fun","inets","http:set_options/1",
              "Sets options to be used for subsequent requests."],
             ["fun","inets","http:set_options/2",
              "Sets options to be used for subsequent requests."],
             ["fun","inets","http:stream_next/1",
              " Triggers the next message to be streamed, e.i.\n\ts"],
             ["fun","inets","http:verify_cookie/2",
              "Saves the cookies defined in SetCookieHeaders in t"],
             ["fun","inets","http:verify_cookie/3",
              "Saves the cookies defined in SetCookieHeaders in t"],
             ["fun","inets","http:cookie_header/1",
              "Returns the cookie header that would be sent when\n"],
             ["fun","inets","http:cookie_header/2",
              "Returns the cookie header that would be sent when\n"],
             ["fun","inets","httpd:info/1",
              "Fetches information about the HTTP server"],
             ["fun","inets","httpd:info/2",
              "Fetches information about the HTTP server"],
             ["fun","inets","httpd:info/2",
              "Fetches information about the HTTP server"],
             ["fun","inets","httpd:info/3",
              "Fetches information about the HTTP server"],
             ["fun","inets","httpd:reload_config/2",
              "Reloads the HTTP server configuration without\n\tres"],
             ["fun","inets","httpd_conf:check_enum/2",
              "Check if string is a valid enumeration."],
             ["fun","inets","httpd_conf:clean/1",
              "Remove leading and/or trailing white spaces."],
             ["fun","inets","httpd_conf:custom_clean/3",
              "Remove leading and/or trailing white spaces and cu"],
             ["fun","inets","httpd_conf:is_directory/1",
              "Check if a file path is a directory."],
             ["fun","inets","httpd_conf:is_file/1",
              "Check if a file path is a regular file."],
             ["fun","inets","httpd_conf:make_integer/1",
              "Return an integer representation of a string."],
             ["fun","inets","httpd_socket:deliver/3",
              "Send binary data over socket."],
             ["fun","inets","httpd_socket:peername/2",
              "Return the port and IP-address of the remote socke"],
             ["fun","inets","httpd_socket:resolve/0",
              "Return the official name of the current host."],
             ["fun","inets","httpd_util:convert_request_date/1",
              "Convert The the date to the Erlang date format."],
             ["fun","inets","httpd_util:create_etag/1",
              "Calculates the Etag for a file."],
             ["fun","inets","httpd_util:decode_hex/1",
              "Convert a hex value into its decimal equivalent."],
             ["fun","inets","httpd_util:day/1",
              "Convert the day of the week (integer [1-7]) to an "],
             ["fun","inets","httpd_util:flatlength/1",
              "Compute the size of a possibly nested list."],
             ["fun","inets","httpd_util:hexlist_to_integer/1",
              "Convert a hexadecimal string to an integer."],
             ["fun","inets","httpd_util:integer_to_hexlist/1",
              "Convert an integer to a hexadecimal string."],
             ["fun","inets","httpd_util:lookup/2",
              "Extract the first value associated with a key in a"],
             ["fun","inets","httpd_util:lookup/3",
              "Extract the first value associated with a key in a"],
             ["fun","inets","httpd_util:lookup_mime/2",
              "Return the mime type associated with a specific fi"],
             ["fun","inets","httpd_util:lookup_mime/3",
              "Return the mime type associated with a specific fi"],
             ["fun","inets","httpd_util:lookup_mime_default/2",
              "Return the mime type associated with a specific fi"],
             ["fun","inets","httpd_util:lookup_mime_default/3",
              "Return the mime type associated with a specific fi"],
             ["fun","inets","httpd_util:message/3",
              "Return an informative HTTP 1.1 status string in HT"],
             ["fun","inets","httpd_util:month/1",
              "Convert the month as an integer (1-12) to an abbre"],
             ["fun","inets","httpd_util:multi_lookup/2",
              "Extract the values associated with a key in a ETS "],
             ["fun","inets","httpd_util:reason_phrase/1",
              "Return the description of an HTTP 1.1 status code."],
             ["fun","inets","httpd_util:rfc1123_date/0",
              "Return the current date in RFC 1123 format."],
             ["fun","inets","httpd_util:rfc1123_date/6",
              "Return the current date in RFC 1123 format."],
             ["fun","inets","httpd_util:split/3",
              "Split a string in N chunks using a regular express"],
             ["fun","inets","httpd_util:split_script_path/1",
              "Split a <c>RequestLine</c>in a file reference to a"],
             ["fun","inets","httpd_util:split_path/1",
              "Split a <c>RequestLine</c>in a file reference and "],
             ["fun","inets","httpd_util:strip/1",
              "Returns String where the leading and trailing spac"],
             ["fun","inets","httpd_util:suffix/1",
              "Extract the file suffix from a given filename."],
             ["fun","inets","inets:services/0",
              "Returns a list of currently running services.  "],
             ["fun","inets","inets:services_info/0",
              "Returns a list of currently running services where"],
             ["fun","inets","inets:service_names/0",
              "Returns a list of available service names."],
             ["fun","inets","inets:start/0","Starts the Inets application. "],
             ["fun","inets","inets:start/1","Starts the Inets application. "],
             ["fun","inets","inets:stop/0","Stops the inets application."],
             ["fun","inets","inets:start/2",
              "Dynamically starts an inets\n\tservice after the ine"],
             ["fun","inets","inets:start/3",
              "Dynamically starts an inets\n\tservice after the ine"],
             ["fun","inets","inets:stop/2",
              "Stops a started service of the inets application o"],
             ["fun","inets","mod_alias:default_index/2",
              "Return a new path with the default resource or fil"],
             ["fun","inets","mod_alias:path/3",
              "Return the actual file path to a URL."],
             ["fun","inets","mod_alias:real_name/3",
              "Expand a request uri using  Alias config directive"],
             ["fun","inets","mod_alias:real_script_name/3",
              "Expand a request uri using ScriptAlias config dire"],
             ["fun","inets","mod_auth:add_user/2",
              "Add a user to the user database."],
             ["fun","inets","mod_auth:add_user/5",
              "Add a user to the user database."],
             ["fun","inets","mod_auth:add_user/6",
              "Add a user to the user database."],
             ["fun","inets","mod_auth:delete_user/2",
              "Delete a user from the user database."],
             ["fun","inets","mod_auth:delete_user/3",
              "Delete a user from the user database."],
             ["fun","inets","mod_auth:delete_user/4",
              "Delete a user from the user database."],
             ["fun","inets","mod_auth:get_user/2",
              "Returns a user from the user database."],
             ["fun","inets","mod_auth:get_user/3",
              "Returns a user from the user database."],
             ["fun","inets","mod_auth:get_user/4",
              "Returns a user from the user database."],
             ["fun","inets","mod_auth:list_users/1",
              "List users in the user database."],
             ["fun","inets","mod_auth:list_users/3",
              "List users in the user database."],
             ["fun","inets","mod_auth:add_group_member/3",
              "Add a user to a group."],
             ["fun","inets","mod_auth:add_group_member/4",
              "Add a user to a group."],
             ["fun","inets","mod_auth:add_group_member/5",
              "Add a user to a group."],
             ["fun","inets","mod_auth:delete_group_member/3",
              "Remove a user from a group."],
             ["fun","inets","mod_auth:delete_group_member/4",
              "Remove a user from a group."],
             ["fun","inets","mod_auth:delete_group_member/5",
              "Remove a user from a group."],
             ["fun","inets","mod_auth:list_group_members/2",
              "List the members of a group."],
             ["fun","inets","mod_auth:list_group_members/3",
              "List the members of a group."],
             ["fun","inets","mod_auth:list_group_members/4",
              "List the members of a group."],
             ["fun","inets","mod_auth:list_groups/1","List all the groups."],
             ["fun","inets","mod_auth:list_groups/2","List all the groups."],
             ["fun","inets","mod_auth:list_groups/3","List all the groups."],
             ["fun","inets","mod_auth:delete_group/2","Deletes a group"],
             ["fun","inets","mod_auth:delete_group/4","Deletes a group"],
             ["fun","inets","mod_auth:update_password/5",
              "Change the AuthAcessPassword"],
             ["fun","inets","mod_auth:update_password/6",
              "Change the AuthAcessPassword"],
             ["fun","inets","mod_esi:deliver/2","Sends Data back to client."],
             ["fun","inets","mod_security:list_auth_users/1",
              "List users that have authenticated within the Secu"],
             ["fun","inets","mod_security:list_auth_users/2",
              "List users that have authenticated within the Secu"],
             ["fun","inets","mod_security:list_auth_users/2",
              "List users that have authenticated within the Secu"],
             ["fun","inets","mod_security:list_auth_users/3",
              "List users that have authenticated within the Secu"],
             ["fun","inets","mod_security:list_blocked_users/1",
              "List users that are currently blocked from access "],
             ["fun","inets","mod_security:list_blocked_users/2",
              "List users that are currently blocked from access "],
             ["fun","inets","mod_security:list_blocked_users/2",
              "List users that are currently blocked from access "],
             ["fun","inets","mod_security:list_blocked_users/3",
              "List users that are currently blocked from access "],
             ["fun","inets","mod_security:block_user/4",
              "Block user from access to a directory for a certai"],
             ["fun","inets","mod_security:block_user/5",
              "Block user from access to a directory for a certai"],
             ["fun","inets","mod_security:unblock_user/2",
              "Remove a blocked user from the block list"],
             ["fun","inets","mod_security:unblock_user/3",
              "Remove a blocked user from the block list"],
             ["fun","inets","mod_security:unblock_user/3",
              "Remove a blocked user from the block list"],
             ["fun","inets","mod_security:unblock_user/4",
              "Remove a blocked user from the block list"],
             ["fun","inets","tftp:start/1","Start a daemon process"],
             ["fun","inets","tftp:read_file/3",
              "Read a (virtual) file from a TFTP server"],
             ["fun","inets","tftp:write_file/3",
              "Write a (virtual) file to a TFTP server"],
             ["fun","inets","tftp:info/1",
              "Return information about all daemons"],
             ["fun","inets","tftp:info/1",
              "Return information about all servers"],
             ["fun","inets","tftp:info/1",
              "Return information about a daemon, server or clien"],
             ["fun","inets","tftp:change_config/2",
              "Changes config for all daemons\n      "],
             ["fun","inets","tftp:change_config/2",
              "Changes config for all servers\n      "],
             ["fun","inets","tftp:change_config/2",
              "Changes config for a TFTP daemon, server or client"],
             ["fun","inets","tftp:start/0","Start the Inets application"],
             ["fun","ic","ic:gen/1",
              "Generate stub and server code according to the OMG"],
             ["fun","ic","ic:gen/2",
              "Generate stub and server code according to the OMG"],
             ["fun","gs","gs:config/2","Configure a graphical object."],
             ["fun","gs","gs:create/2","Create a new graphical object."],
             ["fun","gs","gs:create/3","Create a new graphical object."],
             ["fun","gs","gs:create/4","Create a new graphical object."],
             ["fun","gs","gs:create_tree/2",
              "Create a hierarchy of graphical objects."],
             ["fun","gs","gs:destroy/1","Destroy a graphical object."],
             ["fun","gs","gs:ObjType/1",
              "Shorthand equivalents of <c>create</c>."],
             ["fun","gs","gs:ObjType/2",
              "Shorthand equivalents of <c>create</c>."],
             ["fun","gs","gs:ObjType/3",
              "Shorthand equivalents of <c>create</c>."],
             ["fun","gs","gs:read/2","Return the value of an object option."],
             ["fun","gs","gs:start/0","Start GS."],
             ["fun","gs","gs:stop/0","Stop GS."],
             ["fun","et","et:report_event/4",
              "Reports an event, such as a message"],
             ["fun","et","et:report_event/5",
              "Reports an event, such as a message"],
             ["fun","et","et:phone_home/4",
              "Reports an event, such as a message"],
             ["fun","et","et:phone_home/5",
              "Reports an event, such as a message"],
             ["fun","et","et_collector:start_link/1",
              "Start a collector process"],
             ["fun","et","et_collector:stop/1","Stop a collector process"],
             ["fun","et","et_collector:save_event_file/3",
              "Save the events to a file"],
             ["fun","et","et_collector:load_event_file/2",
              "Load the event table from a file"],
             ["fun","et","et_collector:report/2",
              "Report an event to the collector"],
             ["fun","et","et_collector:report_event/5",
              "Report an event to the collector"],
             ["fun","et","et_collector:report_event/6",
              "Report an event to the collector"],
             ["fun","et","et_collector:make_key/2",
              "Make a key out of an event record or an old key"],
             ["fun","et","et_collector:get_table_handle/1",
              "Return a table handle"],
             ["fun","et","et_collector:get_global_pid/0",
              "Return a the identity of the globally registered c"],
             ["fun","et","et_collector:change_pattern/2",
              "Change active trace pattern globally on all trace "],
             ["fun","et","et_collector:dict_insert/4",
              "Insert a dictionary entry and send a {et, {dict_in"],
             ["fun","et","et_collector:dict_insert/4",
              "Insert a dictionary entry and send a {et, {dict_in"],
             ["fun","et","et_collector:dict_insert/3",
              "Insert a dictionary entry and send a {et, {dict_in"],
             ["fun","et","et_collector:dict_lookup/2",
              "Lookup a dictionary entry and return zero or one v"],
             ["fun","et","et_collector:dict_delete/2",
              "Delete a dictionary entry and send a {et, {dict_de"],
             ["fun","et","et_collector:dict_match/2",
              "Match some dictionary entries"],
             ["fun","et","et_collector:multicast/2",
              "Sends a message to all registered subscribers"],
             ["fun","et","et_collector:start_trace_client/3",
              "Load raw Erlang trace from a file, port or process"],
             ["fun","et","et_collector:iterate/3",
              "Iterates over the currently stored events"],
             ["fun","et","et_collector:iterate/5",
              "Iterate over the currently stored events"],
             ["fun","et","et_collector:clear_table/1","Clear the event table"],
             ["fun","et","et_selector:make_pattern/1",
              "Makes a trace pattern suitable to feed change_patt"],
             ["fun","et","et_selector:change_pattern/1",
              "Activates/deactivates tracing by changing the curr"],
             ["fun","et","et_selector:parse_event/2",
              "Transforms trace data and makes an event record ou"],
             ["fun","et","et_viewer:file/1",
              "Start a new event viewer and a corresponding colle"],
             ["fun","et","et_viewer:start/0",
              "Simplified start of a sequence chart viewer with g"],
             ["fun","et","et_viewer:start/1",
              "Start of a sequence chart viewer without linking t"],
             ["fun","et","et_viewer:start_link/1",
              "Start a sequence chart viewer for trace events (me"],
             ["fun","et","et_viewer:get_collector_pid/1",
              "Returns the identifier of the collector process"],
             ["fun","et","et_viewer:stop/1","Stops a viewer"],
             ["fun","docbuilder","docb_gen:module/1",
              "Generate XML from EDoc comments in Erlang source c"],
             ["fun","docbuilder","docb_gen:module/2",
              "Generate XML from EDoc comments in Erlang source c"],
             ["fun","docbuilder","docb_gen:users_guide/1",
              "Generate XML from EDoc comments in Erlang source c"],
             ["fun","docbuilder","docb_gen:users_guide/2",
              "Generate XML from EDoc comments in Erlang source c"],
             ["fun","docbuilder","docb_transform:file/1",
              "Transform XML to HTML"],
             ["fun","docbuilder","docb_transform:file/2",
              "Transform XML to HTML"],
             ["fun","docbuilder","docb_xml_check:validate/1",
              "Validate XML source code."],
             ["fun","dialyzer","dialyzer:gui/0","Dialyzer GUI version"],
             ["fun","dialyzer","dialyzer:gui/1","Dialyzer GUI version"],
             ["fun","dialyzer","dialyzer:run/1",
              "Dialyzer command line version"],
             ["fun","dialyzer","dialyzer:format_warning/1",
              "Get the string version of a warning message."],
             ["fun","dialyzer","dialyzer:plt_info/1",
              "Returns information about the specified plt."],
             ["fun","debugger","debugger:start/0","Start Debugger."],
             ["fun","debugger","debugger:start/1","Start Debugger."],
             ["fun","debugger","debugger:start/1","Start Debugger."],
             ["fun","debugger","debugger:start/2","Start Debugger."],
             ["fun","debugger","debugger:quick/3","Debug a process."],
             ["fun","debugger","i:im/0","Start a graphical monitor"],
             ["fun","debugger","i:ii/1","Interpret a module"],
             ["fun","debugger","i:ii/1","Interpret a module"],
             ["fun","debugger","i:ini/1","Interpret a module"],
             ["fun","debugger","i:ini/1","Interpret a module"],
             ["fun","debugger","i:iq/1","Stop interpreting a module"],
             ["fun","debugger","i:inq/1","Stop interpreting a module"],
             ["fun","debugger","i:il/0",
              "Make a printout of all interpreted modules"],
             ["fun","debugger","i:ip/0",
              "Make a printout of the current status of all inter"],
             ["fun","debugger","i:ic/0",
              "Clear information about processes executing interp"],
             ["fun","debugger","i:iaa/1",
              "Set when and how to attach to a process"],
             ["fun","debugger","i:iaa/2",
              "Set when and how to attach to a process"],
             ["fun","debugger","i:ist/1","Set how to save call frames"],
             ["fun","debugger","i:ia/1","Attach to a process"],
             ["fun","debugger","i:ia/3","Attach to a process"],
             ["fun","debugger","i:ia/2","Attach to a process"],
             ["fun","debugger","i:ia/4","Attach to a process"],
             ["fun","debugger","i:ib/2","Create a breakpoint"],
             ["fun","debugger","i:ib/3",
              "Create breakpoints in the specified function"],
             ["fun","debugger","i:ir/0","Delete all breakpoints"],
             ["fun","debugger","i:ir/1","Delete all breakpoints in a module"],
             ["fun","debugger","i:ir/2","Delete a breakpoint"],
             ["fun","debugger","i:ir/3",
              "Delete breakpoints from the specified function\n   "],
             ["fun","debugger","i:ibd/2","Make a breakpoint inactive"],
             ["fun","debugger","i:ibe/2","Make a breakpoint active"],
             ["fun","debugger","i:iba/3",
              "Set the trigger action of a breakpoint"],
             ["fun","debugger","i:ibc/3",
              "Set the conditional test of a breakpoint"],
             ["fun","debugger","i:ipb/0",
              "Make a printout of all existing breakpoints"],
             ["fun","debugger","i:ipb/1",
              "Make a printout of all breakpoints in a module\n   "],
             ["fun","debugger","i:iv/0",
              "Current version number of the interpreter"],
             ["fun","debugger","i:help/0","Print help text"],
             ["fun","debugger","int:i/1","Interpret a module"],
             ["fun","debugger","int:i/1","Interpret a module"],
             ["fun","debugger","int:ni/1","Interpret a module"],
             ["fun","debugger","int:ni/1","Interpret a module"],
             ["fun","debugger","int:n/1","Stop interpreting a module"],
             ["fun","debugger","int:nn/1","Stop interpreting a module"],
             ["fun","debugger","int:interpreted/0",
              "Get all interpreted modules"],
             ["fun","debugger","int:file/1",
              "Get the file name for an interpreted module"],
             ["fun","debugger","int:interpretable/1",
              "Check if a module is possible to interpret"],
             ["fun","debugger","int:auto_attach/0",
              "Get/set when and how to attach to a process"],
             ["fun","debugger","int:auto_attach/1",
              "Get/set when and how to attach to a process"],
             ["fun","debugger","int:auto_attach/2",
              "Get/set when and how to attach to a process"],
             ["fun","debugger","int:stack_trace/0",
              "Get/set if and how to save call frames"],
             ["fun","debugger","int:stack_trace/1",
              "Get/set if and how to save call frames"],
             ["fun","debugger","int:break/2","Create a breakpoint"],
             ["fun","debugger","int:delete_break/2","Delete a breakpoint"],
             ["fun","debugger","int:break_in/3",
              "Create breakpoints in the specified function"],
             ["fun","debugger","int:del_break_in/3",
              "Delete breakpoints from the specified function\n   "],
             ["fun","debugger","int:no_break/0","Delete all breakpoints"],
             ["fun","debugger","int:no_break/1","Delete all breakpoints"],
             ["fun","debugger","int:disable_break/2",
              "Make a breakpoint inactive"],
             ["fun","debugger","int:enable_break/2",
              "Make a breakpoint active"],
             ["fun","debugger","int:action_at_break/3",
              "Set the trigger action of a breakpoint"],
             ["fun","debugger","int:test_at_break/3",
              "Set the conditional test of a breakpoint"],
             ["fun","debugger","int:get_binding/2",
              "Retrieve a variable binding"],
             ["fun","debugger","int:all_breaks/0","Get all breakpoints"],
             ["fun","debugger","int:all_breaks/1","Get all breakpoints"],
             ["fun","debugger","int:snapshot/0",
              "Get information about all processes executing inte"],
             ["fun","debugger","int:clear/0",
              "Clear information about processes executing interp"],
             ["fun","debugger","int:continue/1","Resume process execution"],
             ["fun","debugger","int:continue/3","Resume process execution"],
             ["fun","crypto","crypto:start/0","Start the crypto server."],
             ["fun","crypto","crypto:stop/0","Stop the crypto server."],
             ["fun","crypto","crypto:info/0",
              "Provide a list of available crypto functions."],
             ["fun","crypto","crypto:info_lib/0",
              "Provides information about the libraries used by c"],
             ["fun","crypto","crypto:md5/1",
              "Compute an <c>MD5</c>message digest from <c>Data</"],
             ["fun","crypto","crypto:md5_init/0","Creates an MD5 context"],
             ["fun","crypto","crypto:md5_update/2",
              "Update an MD5 <c>Context</c>with <c>Data</c>, and "],
             ["fun","crypto","crypto:md5_final/1",
              "Finish the update of an MD5 <c>Context</c>and retu"],
             ["fun","crypto","crypto:sha/1",
              "Compute an <c>SHA</c>message digest from <c>Data</"],
             ["fun","crypto","crypto:sha_init/0","Create an SHA context"],
             ["fun","crypto","crypto:sha_update/2","Update an SHA context"],
             ["fun","crypto","crypto:sha_final/1",
              "Finish the update of an SHA context"],
             ["fun","crypto","crypto:md5_mac/2",
              "Compute an <c>MD5 MAC</c>message authentification "],
             ["fun","crypto","crypto:md5_mac_96/2",
              "Compute an <c>MD5 MAC</c>message authentification "],
             ["fun","crypto","crypto:sha_mac/2",
              "Compute an <c>MD5 MAC</c>message authentification "],
             ["fun","crypto","crypto:sha_mac_96/2",
              "Compute an <c>MD5 MAC</c>message authentification "],
             ["fun","crypto","crypto:des_cbc_encrypt/3",
              "Encrypt <c>Text</c>according to DES in CBC mode"],
             ["fun","crypto","crypto:des_cbc_decrypt/3",
              "Decrypt <c>Cipher</c>according to DES in CBC mode"],
             ["fun","crypto","crypto:des_cbc_ivec/1",
              "Get <c>IVec</c> to be used in next iteration of\n  "],
             ["fun","crypto","crypto:des3_cbc_encrypt/5",
              "Encrypt <c>Text</c>according to DES3 in CBC mode"],
             ["fun","crypto","crypto:des3_cbc_decrypt/5",
              "Decrypt <c>Cipher</c>according to DES in CBC mode"],
             ["fun","crypto","crypto:blowfish_cfb64_encrypt/3",
              "Encrypt <c>Text</c>using Blowfish in CFB mode with"],
             ["fun","crypto","crypto:blowfish_cfb64_decrypt/3",
              "Decrypt <c>Text</c>using Blowfish in CFB mode with"],
             ["fun","crypto","crypto:aes_cfb_128_encrypt/3",
              "Encrypt <c>Text</c>according to AES in Cipher Feed"],
             ["fun","crypto","crypto:aes_cbc_128_encrypt/3",
              "Encrypt <c>Text</c>according to AES in Cipher Feed"],
             ["fun","crypto","crypto:aes_cfb_128_decrypt/3",
              "Decrypt <c>Cipher</c>according to AES in Cipher Fe"],
             ["fun","crypto","crypto:aes_cbc_128_decrypt/3",
              "Decrypt <c>Cipher</c>according to AES in Cipher Fe"],
             ["fun","crypto","crypto:aes_cbc_ivec/1",
              "Get <c>IVec</c> to be used in next iteration of\n  "],
             ["fun","crypto","crypto:erlint/1",
              "Convert between binary multi-precision integer and"],
             ["fun","crypto","crypto:mpint/1",
              "Convert between binary multi-precision integer and"],
             ["fun","crypto","crypto:rand_bytes/1",
              "Generate a binary of random bytes"],
             ["fun","crypto","crypto:rand_uniform/2",
              "Generate a random number"],
             ["fun","crypto","crypto:mod_exp/3","Perform N ^ P mod M"],
             ["fun","crypto","crypto:rsa_sign/2",
              "Sign the data using rsa with the given key."],
             ["fun","crypto","crypto:rsa_sign/3",
              "Sign the data using rsa with the given key."],
             ["fun","crypto","crypto:rsa_verify/3",
              "Verify the digest and signature using rsa with giv"],
             ["fun","crypto","crypto:rsa_verify/4",
              "Verify the digest and signature using rsa with giv"],
             ["fun","crypto","crypto:rsa_public_encrypt/3",
              "Encrypts Msg using the public Key."],
             ["fun","crypto","crypto:rsa_private_decrypt/3",
              "Decrypts ChipherText using the private Key."],
             ["fun","crypto","crypto:rsa_private_encrypt/3",
              "Encrypts Msg using the private Key."],
             ["fun","crypto","crypto:rsa_public_decrypt/3",
              "Decrypts ChipherText using the public Key."],
             ["fun","crypto","crypto:dss_sign/2",
              "Sign the data using dsa with given private key."],
             ["fun","crypto","crypto:dss_verify/3",
              "Verify the data and signature using dsa with given"],
             ["fun","crypto","crypto:rc4_encrypt/2","Encrypt data using RC4"],
             ["fun","crypto","crypto:dh_generate_key/1",
              "Generates a Diffie-Hellman public key"],
             ["fun","crypto","crypto:dh_generate_key/2",
              "Generates a Diffie-Hellman public key"],
             ["fun","crypto","crypto:dh_compute_key/3",
              "Computes the shared secret"],
             ["fun","crypto","crypto:exor/2","XOR data"],
             ["fun","compiler","compile:file/1","Compile a file"],
             ["fun","compiler","compile:file/2","Compile a file"],
             ["fun","compiler","compile:forms/1","Compile a list of forms"],
             ["fun","compiler","compile:forms/2","Compile a list of forms"],
             ["fun","compiler","compile:format_error/1",
              "Format an error descriptor"],
             ["fun","compiler","compile:output_generated/1",
              "Determine whether the compile will generate an out"],
             ["fun","compiler","compile:noenv_file/2",
              "Compile a file (ignoring ERL_COMPILER_OPTIONS)"],
             ["fun","compiler","compile:noenv_forms/2",
              "Compile a list of forms (ignoring ERL_COMPILER_OPT"],
             ["fun","compiler","compile:noenv_output_generated/1",
              "Determine whether the compile will generate an out"],
             ["fun","common_test","common_test_app:all/0",
              "Returns the list of all test cases in the module."],
             ["fun","common_test","common_test_app:groups/0",
              "Returns a list of test case group definitions."],
             ["fun","common_test","common_test_app:suite/0",
              "Test suite info function (providing default data f"],
             ["fun","common_test","common_test_app:init_per_suite/1",
              "Test suite initialization."],
             ["fun","common_test","common_test_app:end_per_suite/1",
              "Test suite finalization. "],
             ["fun","common_test","common_test_app:init_per_group/2",
              "Test case group initialization."],
             ["fun","common_test","common_test_app:end_per_group/2",
              "Test case group finalization."],
             ["fun","common_test","common_test_app:init_per_testcase/2",
              "Test case initialization."],
             ["fun","common_test","common_test_app:end_per_testcase/2",
              "Test case finalization."],
             ["fun","common_test","common_test_app:testcase/0",
              "Test case info function. "],
             ["fun","common_test","common_test_app:testcase/1","A test case"],
             ["fun","asn1","asn1ct:compile/1",
              "Compile an ASN.1 module and generate encode/decode"],
             ["fun","asn1","asn1ct:compile/2",
              "Compile an ASN.1 module and generate encode/decode"],
             ["fun","asn1","asn1ct:encode/3","Encode an ASN.1 value."],
             ["fun","asn1","asn1ct:decode/3",
              "Decode from Bytes into an ASN.1 value."],
             ["fun","asn1","asn1ct:validate/3","Validate an ASN.1 value."],
             ["fun","asn1","asn1ct:value/2",
              "Create an ASN.1 value for test purposes."],
             ["fun","asn1","asn1ct:test/1",
              "Perform a test of encode and decode for types in a"],
             ["fun","asn1","asn1ct:test/2",
              "Perform a test of encode and decode for types in a"],
             ["fun","asn1","asn1ct:test/3",
              "Perform a test of encode and decode for types in a"],
             ["fun","asn1","asn1rt:start/0","Starts the asn1 server."],
             ["fun","asn1","asn1rt:stop/0","Stops the asn1 server."],
             ["fun","asn1","asn1rt:decode/3",
              "Decode from bytes into an ASN.1 value."],
             ["fun","asn1","asn1rt:encode/3","Encode an ASN.1 value."],
             ["fun","asn1","asn1rt:info/1",
              "Returns compiler information about the Module."],
             ["fun","asn1","asn1rt:load_driver/0",
              "Loads the linked-in driver."],
             ["fun","asn1","asn1rt:unload_driver/0",
              "Unloads the linked-in driver."],
             ["fun","asn1","asn1rt:utf8_binary_to_list/1",
              "Transforms an utf8 encoded binary to a unicode lis"],
             ["fun","asn1","asn1rt:utf8_list_to_binary/1",
              "Transforms an unicode list ot an utf8 binary."],
             ["fun","asn1","asn1rt:validate/3","Validate an ASN.1 value."],
             ["fun","appmon","appmon:start/0","Start Appmon."],
             ["fun","appmon","appmon:stop/0","Stop Appmon."],
             ["fun","erts","erl_prim_loader:start/3",
              "Start the Erlang low level loader"],
             ["fun","erts","erl_prim_loader:get_file/1","Get a file"],
             ["fun","erts","erl_prim_loader:get_path/0",
              "Get the path set in the loader"],
             ["fun","erts","erl_prim_loader:list_dir/1",
              "List files in a directory"],
             ["fun","erts","erl_prim_loader:read_file_info/1",
              "Get information about a file"],
             ["fun","erts","erl_prim_loader:set_path/1",
              "Set the path of the loader"],
             ["fun","erts","erlang:abs/1","Arithmetical absolute value"],
             ["fun","erts","erlang:adler32/1","Compute adler32 checksum"],
             ["fun","erts","erlang:adler32/2","Compute adler32 checksum"],
             ["fun","erts","erlang:adler32_combine/3",
              "Combine two adler32 checksums"],
             ["fun","erts","erlang:append_element/2",
              "Append an extra element to a tuple"],
             ["fun","erts","erlang:apply/2",
              "Apply a function to an argument list"],
             ["fun","erts","erlang:apply/3",
              "Apply a function to an argument list"],
             ["fun","erts","erlang:atom_to_binary/2",
              "Return the binary representation of an atom"],
             ["fun","erts","erlang:atom_to_list/1",
              "Text representation of an atom"],
             ["fun","erts","erlang:binary_to_atom/2",
              "Convert from text representation to an atom"],
             ["fun","erts","erlang:binary_to_existing_atom/2",
              "Convert from text representation to an atom"],
             ["fun","erts","erlang:binary_to_list/1",
              "Convert a binary to a list"],
             ["fun","erts","erlang:binary_to_list/3",
              "Convert part of a binary to a list"],
             ["fun","erts","erlang:bitstring_to_list/1",
              "Convert a bitstring to a list"],
             ["fun","erts","erlang:binary_to_term/1",
              "Decode an Erlang external term format binary"],
             ["fun","erts","erlang:bit_size/1",
              "Return the size of a bitstring"],
             ["fun","erts","erlang:bump_reductions/1",
              "Increment the reduction counter"],
             ["fun","erts","erlang:byte_size/1",
              "Return the size of a bitstring (or binary)"],
             ["fun","erts","erlang:cancel_timer/1","Cancel a timer"],
             ["fun","erts","erlang:check_process_code/2",
              "Check if a process is executing old code for a mod"],
             ["fun","erts","erlang:concat_binary/1",
              "Concatenate a list of binaries (deprecated)"],
             ["fun","erts","erlang:crc32/1",
              "Compute crc32 (IEEE 802.3) checksum"],
             ["fun","erts","erlang:crc32/2",
              "Compute crc32 (IEEE 802.3) checksum"],
             ["fun","erts","erlang:crc32_combine/3",
              "Combine two crc32 (IEEE 802.3) checksums"],
             ["fun","erts","erlang:date/0","Current date"],
             ["fun","erts","erlang:decode_packet/3",
              "Extracts a protocol packet from a binary"],
             ["fun","erts","erlang:delete_module/1",
              "Make the current code for a module old"],
             ["fun","erts","erlang:demonitor/1","Stop monitoring"],
             ["fun","erts","erlang:demonitor/2","Stop monitoring"],
             ["fun","erts","erlang:disconnect_node/1",
              "Force the disconnection of a node"],
             ["fun","erts","erlang:display/1",
              "Print a term on standard output"],
             ["fun","erts","erlang:element/2","Get Nth element of a tuple"],
             ["fun","erts","erlang:erase/0",
              "Return and delete the process dictionary"],
             ["fun","erts","erlang:erase/1",
              "Return and delete a value from the process diction"],
             ["fun","erts","erlang:error/1",
              "Stop execution with a given reason"],
             ["fun","erts","erlang:error/2",
              "Stop execution with a given reason"],
             ["fun","erts","erlang:exit/1",
              "Stop execution with a given reason"],
             ["fun","erts","erlang:exit/2","Send an exit signal to a process"],
             ["fun","erts","erlang:float/1","Convert a number to a float"],
             ["fun","erts","erlang:float_to_list/1",
              "Text representation of a float"],
             ["fun","erts","erlang:fun_info/1","Information about a fun"],
             ["fun","erts","erlang:fun_info/2","Information about a fun"],
             ["fun","erts","erlang:fun_to_list/1",
              "Text representation of a fun"],
             ["fun","erts","erlang:function_exported/3",
              "Check if a function is exported and loaded"],
             ["fun","erts","erlang:garbage_collect/0",
              "Force an immediate garbage collection of the calli"],
             ["fun","erts","erlang:garbage_collect/1",
              "Force an immediate garbage collection of a process"],
             ["fun","erts","erlang:get/0","Return the process dictionary"],
             ["fun","erts","erlang:get/1",
              "Return a value from the process dictionary"],
             ["fun","erts","erlang:get_cookie/0",
              "Get the magic cookie of the local node"],
             ["fun","erts","erlang:get_keys/1",
              "Return a list of keys from the process dictionary"],
             ["fun","erts","erlang:get_stacktrace/0",
              "Get the call stack back-trace of the last exceptio"],
             ["fun","erts","erlang:group_leader/0",
              "Get the group leader for the calling process"],
             ["fun","erts","erlang:group_leader/2",
              "Set the group leader for a process"],
             ["fun","erts","erlang:halt/0",
              "Halt the Erlang runtime system and indicate normal"],
             ["fun","erts","erlang:halt/1","Halt the Erlang runtime system"],
             ["fun","erts","erlang:hash/2","Hash function (deprecated)"],
             ["fun","erts","erlang:hd/1","Head of a list"],
             ["fun","erts","erlang:hibernate/3",
              "Hibernate a process until a message is sent to it"],
             ["fun","erts","erlang:integer_to_list/1",
              "Text representation of an integer"],
             ["fun","erts","erlang:integer_to_list/2",
              "Text representation of an integer"],
             ["fun","erts","erlang:iolist_to_binary/1",
              "Convert an iolist to a binary"],
             ["fun","erts","erlang:iolist_size/1","Size of an iolist"],
             ["fun","erts","erlang:is_alive/0",
              "Check whether the local node is alive"],
             ["fun","erts","erlang:is_atom/1",
              "Check whether a term is an atom"],
             ["fun","erts","erlang:is_binary/1",
              "Check whether a term is a binary"],
             ["fun","erts","erlang:is_bitstring/1",
              "Check whether a term is a bitstring"],
             ["fun","erts","erlang:is_boolean/1",
              "Check whether a term is a boolean"],
             ["fun","erts","erlang:is_builtin/3",
              "Check if a function is a BIF implemented in C"],
             ["fun","erts","erlang:is_float/1",
              "Check whether a term is a float"],
             ["fun","erts","erlang:is_function/1",
              "Check whether a term is a fun"],
             ["fun","erts","erlang:is_function/2",
              "Check whether a term is a fun with a given arity"],
             ["fun","erts","erlang:is_integer/1",
              "Check whether a term is an integer"],
             ["fun","erts","erlang:is_list/1",
              "Check whether a term is a list"],
             ["fun","erts","erlang:is_number/1",
              "Check whether a term is a number"],
             ["fun","erts","erlang:is_pid/1","Check whether a term is a pid"],
             ["fun","erts","erlang:is_port/1",
              "Check whether a term is a port"],
             ["fun","erts","erlang:is_process_alive/1",
              "Check whether a process is alive"],
             ["fun","erts","erlang:is_record/2",
              "Check whether a term appears to be a record"],
             ["fun","erts","erlang:is_record/3",
              "Check whether a term appears to be a record"],
             ["fun","erts","erlang:is_reference/1",
              "Check whether a term is a reference"],
             ["fun","erts","erlang:is_tuple/1",
              "Check whether a term is a tuple"],
             ["fun","erts","erlang:length/1","Length of a list"],
             ["fun","erts","erlang:link/1",
              "Create a link to another process (or port)"],
             ["fun","erts","erlang:list_to_atom/1",
              "Convert from text representation to an atom"],
             ["fun","erts","erlang:list_to_binary/1",
              "Convert a list to a binary"],
             ["fun","erts","erlang:list_to_bitstring/1",
              "Convert a list to a bitstring"],
             ["fun","erts","erlang:list_to_existing_atom/1",
              "Convert from text representation to an atom"],
             ["fun","erts","erlang:list_to_float/1",
              "Convert from text representation to a float"],
             ["fun","erts","erlang:list_to_integer/1",
              "Convert from text representation to an integer"],
             ["fun","erts","erlang:list_to_integer/2",
              "Convert from text representation to an integer"],
             ["fun","erts","erlang:list_to_pid/1",
              "Convert from text representation to a pid"],
             ["fun","erts","erlang:list_to_tuple/1",
              "Convert a list to a tuple"],
             ["fun","erts","erlang:load_module/2",
              "Load object code for a module"],
             ["fun","erts","erlang:load_nif/2","Load NIF library"],
             ["fun","erts","erlang:loaded/0","List of all loaded modules"],
             ["fun","erts","erlang:localtime/0","Current local date and time"],
             ["fun","erts","erlang:localtime_to_universaltime/2",
              "Convert from local to Universal Time Coordinated ("],
             ["fun","erts","erlang:localtime_to_universaltime/3",
              "Convert from local to Universal Time Coordinated ("],
             ["fun","erts","erlang:make_ref/0",
              "Return an almost unique reference"],
             ["fun","erts","erlang:make_tuple/2",
              "Create a new tuple of a given arity"],
             ["fun","erts","erlang:make_tuple/3",
              "Create a new tuple with given arity and contents"],
             ["fun","erts","erlang:max/2","Return the largest of two term"],
             ["fun","erts","erlang:md5/1","Compute an MD5 message digest"],
             ["fun","erts","erlang:md5_final/1",
              "Finish the update of an MD5 context and return the"],
             ["fun","erts","erlang:md5_init/0","Create an MD5 context"],
             ["fun","erts","erlang:md5_update/2",
              "Update an MD5 context with data, and return a new "],
             ["fun","erts","erlang:memory/0",
              "Information about dynamically allocated memory"],
             ["fun","erts","erlang:memory/1",
              "Information about dynamically allocated memory"],
             ["fun","erts","erlang:min/2","Return the smallest of two term"],
             ["fun","erts","erlang:module_loaded/1",
              "Check if a module is loaded"],
             ["fun","erts","erlang:monitor/2","Start monitoring"],
             ["fun","erts","erlang:monitor_node/2",
              "Monitor the status of a node"],
             ["fun","erts","erlang:monitor_node/3",
              "Monitor the status of a node"],
             ["fun","erts","erlang:node/0","Name of the local node"],
             ["fun","erts","erlang:node/1",
              "At which node is a pid, port or reference located"],
             ["fun","erts","erlang:nodes/0","All visible nodes in the system"],
             ["fun","erts","erlang:nodes/1",
              "All nodes of a certain type in the system"],
             ["fun","erts","erlang:now/0","Elapsed time since 00:00 GMT"],
             ["fun","erts","erlang:open_port/2","Open a port"],
             ["fun","erts","erlang:phash/2","Portable hash function"],
             ["fun","erts","erlang:phash2/2","Portable hash function"],
             ["fun","erts","erlang:pid_to_list/1",
              "Text representation of a pid"],
             ["fun","erts","erlang:port_close/1","Close an open port"],
             ["fun","erts","erlang:port_command/2","Send data to a port"],
             ["fun","erts","erlang:port_command/3","Send data to a port"],
             ["fun","erts","erlang:port_connect/2","Set the owner of a port"],
             ["fun","erts","erlang:port_control/3",
              "Perform a synchronous control operation on a port"],
             ["fun","erts","erlang:port_call/3",
              "Synchronous call to a port with term data"],
             ["fun","erts","erlang:port_info/1","Information about a port"],
             ["fun","erts","erlang:port_info/2","Information about a port"],
             ["fun","erts","erlang:port_to_list/1",
              "Text representation of a port identifier"],
             ["fun","erts","erlang:ports/0","All open ports"],
             ["fun","erts","erlang:pre_loaded/0",
              "List of all pre-loaded modules"],
             ["fun","erts","erlang:process_display/2",
              "Write information about a local process on standar"],
             ["fun","erts","erlang:process_flag/2",
              "Set process flags for the calling process"],
             ["fun","erts","erlang:process_flag/3",
              "Set process flags for a process"],
             ["fun","erts","erlang:process_info/1",
              "Information about a process"],
             ["fun","erts","erlang:process_info/2",
              "Information about a process"],
             ["fun","erts","erlang:processes/0","All processes"],
             ["fun","erts","erlang:purge_module/1",
              "Remove old code for a module"],
             ["fun","erts","erlang:put/2",
              "Add a new value to the process dictionary"],
             ["fun","erts","erlang:raise/3",
              "Stop execution with an exception of given class, r"],
             ["fun","erts","erlang:read_timer/1",
              "Number of milliseconds remaining for a timer"],
             ["fun","erts","erlang:ref_to_list/1",
              "Text representation of a reference"],
             ["fun","erts","erlang:register/2",
              "Register a name for a pid (or port)"],
             ["fun","erts","erlang:registered/0","All registered names"],
             ["fun","erts","erlang:resume_process/1",
              "Resume a suspended process"],
             ["fun","erts","erlang:round/1",
              "Return an integer by rounding a number"],
             ["fun","erts","erlang:self/0","Pid of the calling process"],
             ["fun","erts","erlang:send/2","Send a message"],
             ["fun","erts","erlang:send/3","Send a message conditionally"],
             ["fun","erts","erlang:send_after/3","Start a timer"],
             ["fun","erts","erlang:send_nosuspend/2",
              "Try to send a message without ever blocking"],
             ["fun","erts","erlang:send_nosuspend/3",
              "Try to send a message without ever blocking"],
             ["fun","erts","erlang:set_cookie/2",
              "Set the magic cookie of a node"],
             ["fun","erts","erlang:setelement/3","Set Nth element of a tuple"],
             ["fun","erts","erlang:size/1","Size of a tuple or binary"],
             ["fun","erts","erlang:spawn/1",
              "Create a new process with a fun as entry point"],
             ["fun","erts","erlang:spawn/2",
              "Create a new process with a fun as entry point on "],
             ["fun","erts","erlang:spawn/3",
              "Create a new process with a function as entry poin"],
             ["fun","erts","erlang:spawn/4",
              "Create a new process with a function as entry poin"],
             ["fun","erts","erlang:spawn_link/1",
              "Create and link to a new process with a fun as ent"],
             ["fun","erts","erlang:spawn_link/2",
              "Create and link to a new process with a fun as ent"],
             ["fun","erts","erlang:spawn_link/3",
              "Create and link to a new process with a function a"],
             ["fun","erts","erlang:spawn_link/4",
              "Create and link to a new process with a function a"],
             ["fun","erts","erlang:spawn_monitor/1",
              "Create and monitor a new process with a fun as ent"],
             ["fun","erts","erlang:spawn_monitor/3",
              "Create and monitor a new process with a function a"],
             ["fun","erts","erlang:spawn_opt/2",
              "Create a new process with a fun as entry point"],
             ["fun","erts","erlang:spawn_opt/3",
              "Create a new process with a fun as entry point on "],
             ["fun","erts","erlang:spawn_opt/4",
              "Create a new process with a function as entry poin"],
             ["fun","erts","erlang:spawn_opt/5",
              "Create a new process with a function as entry poin"],
             ["fun","erts","erlang:split_binary/2","Split a binary into two"],
             ["fun","erts","erlang:start_timer/3","Start a timer"],
             ["fun","erts","erlang:statistics/1",
              "Information about the system"],
             ["fun","erts","erlang:suspend_process/2","Suspend a process"],
             ["fun","erts","erlang:suspend_process/1","Suspend a process"],
             ["fun","erts","erlang:system_flag/2","Set system flags"],
             ["fun","erts","erlang:system_info/1",
              "Information about the system"],
             ["fun","erts","erlang:system_monitor/0",
              "Current system performance monitoring settings"],
             ["fun","erts","erlang:system_monitor/2",
              "Set or clear system performance monitoring options"],
             ["fun","erts","erlang:system_monitor/2",
              "Set system performance monitoring options"],
             ["fun","erts","erlang:system_profile/0",
              "Current system profiling settings"],
             ["fun","erts","erlang:system_profile/2",
              "Current system profiling settings"],
             ["fun","erts","erlang:term_to_binary/1",
              "Encode a term to an Erlang external term format bi"],
             ["fun","erts","erlang:term_to_binary/2",
              "Encode a term to en Erlang external term format bi"],
             ["fun","erts","erlang:throw/1","Throw an exception"],
             ["fun","erts","erlang:time/0","Current time"],
             ["fun","erts","erlang:tl/1","Tail of a list"],
             ["fun","erts","erlang:trace/3",
              "Set trace flags for a process or processes"],
             ["fun","erts","erlang:trace_delivered/1",
              "Notification when trace has been delivered"],
             ["fun","erts","erlang:trace_info/2",
              "Trace information about a process or function"],
             ["fun","erts","erlang:trace_pattern/2",
              "Set trace patterns for global call tracing"],
             ["fun","erts","erlang:trace_pattern/3",
              "Set trace patterns for tracing of function calls"],
             ["fun","erts","erlang:trunc/1",
              "Return an integer by the truncating a number"],
             ["fun","erts","erlang:tuple_size/1","Return the size of a tuple"],
             ["fun","erts","erlang:tuple_to_list/1",
              "Convert a tuple to a list"],
             ["fun","erts","erlang:universaltime/0",
              "Current date and time according to Universal Time "],
             ["fun","erts","erlang:universaltime_to_localtime/2",
              "Convert from Universal Time Coordinated (UTC) to l"],
             ["fun","erts","erlang:unlink/1",
              "Remove a link, if there is one, to another process"],
             ["fun","erts","erlang:unregister/1",
              "Remove the registered name for a process (or port)"],
             ["fun","erts","erlang:whereis/1",
              "Get the pid (or port) with a given registered name"],
             ["fun","erts","erlang:yield/0",
              "Let other processes get a chance to execute"],
             ["fun","erts","init:boot/1","Start the Erlang runtime system"],
             ["fun","erts","init:get_args/0",
              "Get all non-flag command line arguments"],
             ["fun","erts","init:get_argument/1",
              "Get the values associated with a command line user"],
             ["fun","erts","init:get_arguments/0",
              "Get all command line user flags"],
             ["fun","erts","init:get_plain_arguments/0",
              "Get all non-flag command line arguments"],
             ["fun","erts","init:get_status/0",
              "Get system status information"],
             ["fun","erts","init:reboot/0",
              "Take down and restart an Erlang node smoothly"],
             ["fun","erts","init:restart/0","Restart the running Erlang node"],
             ["fun","erts","init:script_id/0",
              "Get the identity of the used boot script"],
             ["fun","erts","init:stop/0","Take down an Erlang node smoothly"],
             ["fun","erts","init:stop/1","Take down an Erlang node smoothly"],
             ["fun","erts","zlib:open/0",
              "Open a stream and return a stream reference"],
             ["fun","erts","zlib:close/1","Close a stream"],
             ["fun","erts","zlib:deflateInit/1",
              "Initialize a session for compression"],
             ["fun","erts","zlib:deflateInit/2",
              "Initialize a session for compression"],
             ["fun","erts","zlib:deflateInit/6",
              "Initialize a session for compression"],
             ["fun","erts","zlib:deflate/2","Compress data"],
             ["fun","erts","zlib:deflate/3","Compress data"],
             ["fun","erts","zlib:deflateSetDictionary/2",
              "Initialize the compression dictionary"],
             ["fun","erts","zlib:deflateReset/1","Reset the deflate session"],
             ["fun","erts","zlib:deflateParams/3",
              "Dynamicly update deflate parameters"],
             ["fun","erts","zlib:deflateEnd/1","End deflate session"],
             ["fun","erts","zlib:inflateInit/1",
              "Initialize a session for decompression"],
             ["fun","erts","zlib:inflateInit/2",
              "Initialize a session for decompression"],
             ["fun","erts","zlib:inflate/2","Decompress data"],
             ["fun","erts","zlib:inflateSetDictionary/2",
              "Initialize the decompression dictionary"],
             ["fun","erts","zlib:inflateReset/1",
              "&gt;Reset the inflate session"],
             ["fun","erts","zlib:inflateEnd/1","End inflate session"],
             ["fun","erts","zlib:setBufSize/2","Set buffer size"],
             ["fun","erts","zlib:getBufSize/1","Get buffer size"],
             ["fun","erts","zlib:crc32/1","Get current CRC"],
             ["fun","erts","zlib:crc32/2","Calculate CRC"],
             ["fun","erts","zlib:crc32/3","Calculate CRC"],
             ["fun","erts","zlib:crc32_combine/4","Combine two CRC's"],
             ["fun","erts","zlib:adler32/2","Calculate the adler checksum"],
             ["fun","erts","zlib:adler32/3","Calculate the adler checksum"],
             ["fun","erts","zlib:adler32_combine/4",
              "Combine two Adler-32 checksums"],
             ["fun","erts","zlib:compress/1",
              "Compress a binary with standard zlib functionality"],
             ["fun","erts","zlib:uncompress/1",
              "Uncompress a binary with standard zlib functionali"],
             ["fun","erts","zlib:zip/1",
              "Compress a binary without the zlib headers"],
             ["fun","erts","zlib:unzip/1",
              "Uncompress a binary without the zlib headers"],
             ["fun","erts","zlib:gzip/1","Compress a binary with gz header"],
             ["fun","erts","zlib:gunzip/1",
              "Uncompress a binary with gz header"]];